2024-06-20 16:31:49,104 [DEBUG] py4...: Calling cytoscape_version_info()
2024-06-20 16:31:49,104 [DEBUG] py4...: ǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:31:49,105 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2024-06-20 16:31:49,246 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2024-06-20 16:31:49,247 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:31:49,260 [DEBUG] py4...: ǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:31:49,260 [DEBUG] py4...: ǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:31:49,261 [DEBUG] py4...: Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:31:49,261 [DEBUG] py4...: --------------------
2024-06-20 16:32:01,352 [DEBUG] py4...: Calling import_network_from_file('sca_hsa05017.gml')
2024-06-20 16:32:01,352 [DEBUG] py4...: ǀCalling commands_post('network load file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\sca_hsa05017.gml"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:01,354 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/load%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\sca_hsa05017.gml'}
2024-06-20 16:32:01,650 [DEBUG] py4...: ǀOK[200], content: {
 "data": { "networks":[
  128
], "views":[
  2660
]},
 "errors":[]
}
2024-06-20 16:32:01,651 [DEBUG] py4...: ǀReturning 'commands_post': {'networks': [128], 'views': [2660]}
2024-06-20 16:32:05,653 [DEBUG] py4...: Returning 'import_network_from_file': {'networks': [128], 'views': [2660]}
2024-06-20 16:32:05,653 [DEBUG] py4...: --------------------
2024-06-20 16:32:05,653 [DEBUG] py4...: Calling layout_network('force-directed', network='current')
2024-06-20 16:32:05,653 [DEBUG] py4...: ǀCalling get_network_suid('current', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:05,653 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:05,654 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:32:05,675 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 128
}
],
 "errors":[]
}
2024-06-20 16:32:05,676 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 128}]
2024-06-20 16:32:05,676 [DEBUG] py4...: ǀReturning 'get_network_suid': 128
2024-06-20 16:32:05,677 [DEBUG] py4...: ǀCalling commands_post('layout force-directed network="SUID:128"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:05,677 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/layout/force-directed), json: {'network': 'SUID:128'}
2024-06-20 16:32:05,896 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:32:05,898 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:32:05,898 [DEBUG] py4...: Returning 'layout_network': {}
2024-06-20 16:32:05,898 [DEBUG] py4...: --------------------
2024-06-20 16:32:05,899 [DEBUG] py4...: Calling rename_network('KEGG hsa05017 network')
2024-06-20 16:32:05,899 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:05,899 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:05,899 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:32:05,917 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 128
}
],
 "errors":[]
}
2024-06-20 16:32:05,918 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 128}]
2024-06-20 16:32:05,918 [DEBUG] py4...: ǀReturning 'get_network_suid': 128
2024-06-20 16:32:05,918 [DEBUG] py4...: ǀCalling commands_post('network rename name="KEGG hsa05017 network" sourceNetwork="SUID:128"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:05,919 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'KEGG hsa05017 network', 'sourceNetwork': 'SUID:128'}
2024-06-20 16:32:05,940 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":128, "title":"KEGG hsa05017 network"},
 "errors":[]
}
2024-06-20 16:32:05,940 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 128, 'title': 'KEGG hsa05017 network'}
2024-06-20 16:32:05,941 [DEBUG] py4...: Returning 'rename_network': {'network': 128, 'title': 'KEGG hsa05017 network'}
2024-06-20 16:32:05,941 [DEBUG] py4...: --------------------
2024-06-20 16:32:14,845 [DEBUG] py4...: Calling commands_run('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="KEGG hsa05017 network" species="Homo sapiens"')
2024-06-20 16:32:14,845 [DEBUG] py4...: ǀCalling commands_get('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="KEGG hsa05017 network" species="Homo sapiens"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:14,845 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/stringify), params: {'colDisplayName': 'name', 'column': 'uniprot', 'compoundQuery': 'false', 'includeNotMapped': 'false', 'networkNoGui': 'KEGG hsa05017 network', 'species': 'Homo sapiens'}
2024-06-20 16:32:19,167 [DEBUG] py4...: ǀOK[200], content: Set network 'KEGG hsa05017 network as STRING network
Finished

2024-06-20 16:32:19,168 [DEBUG] py4...: ǀReturning 'commands_get': ["Set network 'KEGG hsa05017 network as STRING network"]
2024-06-20 16:32:19,169 [DEBUG] py4...: Returning 'commands_run': ["Set network 'KEGG hsa05017 network as STRING network"]
2024-06-20 16:32:19,169 [DEBUG] py4...: --------------------
2024-06-20 16:32:19,170 [DEBUG] py4...: Calling rename_network('KEGG hsa05017 network stringified')
2024-06-20 16:32:19,170 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:19,171 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:19,171 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:32:19,189 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 4382
}
],
 "errors":[]
}
2024-06-20 16:32:19,190 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 4382}]
2024-06-20 16:32:19,190 [DEBUG] py4...: ǀReturning 'get_network_suid': 4382
2024-06-20 16:32:19,191 [DEBUG] py4...: ǀCalling commands_post('network rename name="KEGG hsa05017 network stringified" sourceNetwork="SUID:4382"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:19,191 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'KEGG hsa05017 network stringified', 'sourceNetwork': 'SUID:4382'}
2024-06-20 16:32:19,206 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":4382, "title":"KEGG hsa05017 network stringified"},
 "errors":[]
}
2024-06-20 16:32:19,207 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 4382, 'title': 'KEGG hsa05017 network stringified'}
2024-06-20 16:32:19,208 [DEBUG] py4...: Returning 'rename_network': {'network': 4382, 'title': 'KEGG hsa05017 network stringified'}
2024-06-20 16:32:19,208 [DEBUG] py4...: --------------------
2024-06-20 16:32:26,661 [DEBUG] py4...: Calling commands_run('string change confidence confidence=0.4 network="KEGG hsa05017 network stringified"')
2024-06-20 16:32:26,662 [DEBUG] py4...: ǀCalling commands_get('string change confidence confidence=0.4 network="KEGG hsa05017 network stringified"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:26,662 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/change%20confidence), params: {'confidence': '0.4', 'network': 'KEGG hsa05017 network stringified'}
2024-06-20 16:32:27,891 [DEBUG] py4...: ǀOK[200], content: 
Finished

2024-06-20 16:32:27,892 [DEBUG] py4...: ǀReturning 'commands_get': ['']
2024-06-20 16:32:27,892 [DEBUG] py4...: Returning 'commands_run': ['']
2024-06-20 16:32:27,893 [DEBUG] py4...: --------------------
2024-06-20 16:32:47,020 [DEBUG] py4...: Calling commands_get('wikipathways import-as-network id="WP4760"')
2024-06-20 16:32:47,021 [DEBUG] py4...: HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-network), params: {'id': 'WP4760'}
2024-06-20 16:32:50,869 [DEBUG] py4...: OK[200], content: Finished

2024-06-20 16:32:50,870 [DEBUG] py4...: Returning 'commands_get': []
2024-06-20 16:32:50,870 [DEBUG] py4...: --------------------
2024-06-20 16:32:50,871 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network')
2024-06-20 16:32:50,871 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:50,871 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:50,872 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:32:50,888 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 13184
}
],
 "errors":[]
}
2024-06-20 16:32:50,889 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 13184}]
2024-06-20 16:32:50,890 [DEBUG] py4...: ǀReturning 'get_network_suid': 13184
2024-06-20 16:32:50,890 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:13184"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:32:50,891 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:13184'}
2024-06-20 16:32:50,904 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":13184, "title":"Wikipathways WP4760 network"},
 "errors":[]
}
2024-06-20 16:32:50,905 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 13184, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:32:50,906 [DEBUG] py4...: Returning 'rename_network': {'network': 13184, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:32:50,907 [DEBUG] py4...: --------------------
2024-06-20 16:33:44,627 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:33:44,628 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,628 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,628 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,628 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:33:44,638 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":13184},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:33:44,639 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 13184}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:33:44,639 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified']
2024-06-20 16:33:44,640 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,640 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:33:44,658 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 13184
}
],
 "errors":[]
}
2024-06-20 16:33:44,659 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 13184}]
2024-06-20 16:33:44,659 [DEBUG] py4...: ǀReturning 'get_network_suid': 13184
2024-06-20 16:33:44,659 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:13184"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,660 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:13184'}
2024-06-20 16:33:44,789 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":13771,"view":14279},
 "errors":[]
}
2024-06-20 16:33:44,790 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 13771, 'view': 14279}
2024-06-20 16:33:44,791 [DEBUG] py4...: Returning 'clone_network': 13771
2024-06-20 16:33:44,792 [DEBUG] py4...: --------------------
2024-06-20 16:33:44,793 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network uniprot', network='Wikipathways WP4760 network')
2024-06-20 16:33:44,793 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,794 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,794 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,795 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:33:44,807 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":13184},{"name":"Wikipathways WP4760 network_1","SUID":13771},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:33:44,808 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 13184}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 13771}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:33:44,808 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network stringified']
2024-06-20 16:33:44,809 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,810 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:33:44,825 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 13184
}
],
 "errors":[]
}
2024-06-20 16:33:44,827 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 13184}]
2024-06-20 16:33:44,828 [DEBUG] py4...: ǀReturning 'get_network_suid': 13184
2024-06-20 16:33:44,828 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network uniprot" sourceNetwork="SUID:13184"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:33:44,829 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network uniprot', 'sourceNetwork': 'SUID:13184'}
2024-06-20 16:33:44,851 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"unrecognized (table entry): Wikipathways WP4760 network  (table name): USER","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:33:44,852 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): unrecognized (table entry): Wikipathways WP4760 network  (table name): USER')
2024-06-20 16:33:44,853 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): unrecognized (table entry): Wikipathways WP4760 network  (table name): USER')
2024-06-20 16:33:44,854 [DEBUG] py4...: --------------------
2024-06-20 16:34:00,277 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:34:00,277 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,277 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,278 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,278 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:34:00,286 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":13184},{"name":"Wikipathways WP4760 network_1","SUID":13771},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:34:00,288 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 13184}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 13771}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:34:00,289 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network stringified']
2024-06-20 16:34:00,289 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,289 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:34:00,301 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 13184
}
],
 "errors":[]
}
2024-06-20 16:34:00,302 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 13184}]
2024-06-20 16:34:00,302 [DEBUG] py4...: ǀReturning 'get_network_suid': 13184
2024-06-20 16:34:00,302 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:13184"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,303 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:13184'}
2024-06-20 16:34:00,386 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":14529,"view":14951},
 "errors":[]
}
2024-06-20 16:34:00,387 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 14529, 'view': 14951}
2024-06-20 16:34:00,388 [DEBUG] py4...: Returning 'clone_network': 14529
2024-06-20 16:34:00,388 [DEBUG] py4...: --------------------
2024-06-20 16:34:00,389 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network uniprot', network='Wikipathways WP4760 network')
2024-06-20 16:34:00,389 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,390 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,390 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,391 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:34:00,401 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":13184},{"name":"Wikipathways WP4760 network_2","SUID":14529},{"name":"Wikipathways WP4760 network_1","SUID":13771},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:34:00,402 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 13184}, {'name': 'Wikipathways WP4760 network_2', 'SUID': 14529}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 13771}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:34:00,403 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_2', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network stringified']
2024-06-20 16:34:00,404 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,404 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:34:00,423 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 13184
}
],
 "errors":[]
}
2024-06-20 16:34:00,424 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 13184}]
2024-06-20 16:34:00,424 [DEBUG] py4...: ǀReturning 'get_network_suid': 13184
2024-06-20 16:34:00,425 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network uniprot" sourceNetwork="SUID:13184"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:00,425 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network uniprot', 'sourceNetwork': 'SUID:13184'}
2024-06-20 16:34:00,445 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"unrecognized (table entry): Wikipathways WP4760 network  (table name): USER","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:34:00,446 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): unrecognized (table entry): Wikipathways WP4760 network  (table name): USER')
2024-06-20 16:34:00,447 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): unrecognized (table entry): Wikipathways WP4760 network  (table name): USER')
2024-06-20 16:34:00,447 [DEBUG] py4...: --------------------
2024-06-20 16:34:20,295 [DEBUG] py4...: Calling commands_get('wikipathways import-as-network id="WP4760"')
2024-06-20 16:34:20,296 [DEBUG] py4...: HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-network), params: {'id': 'WP4760'}
2024-06-20 16:34:22,609 [DEBUG] py4...: OK[200], content: Finished

2024-06-20 16:34:22,610 [DEBUG] py4...: Returning 'commands_get': []
2024-06-20 16:34:22,610 [DEBUG] py4...: --------------------
2024-06-20 16:34:22,611 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network')
2024-06-20 16:34:22,611 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:22,612 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:22,613 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:34:22,628 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 15201
}
],
 "errors":[]
}
2024-06-20 16:34:22,629 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 15201}]
2024-06-20 16:34:22,630 [DEBUG] py4...: ǀReturning 'get_network_suid': 15201
2024-06-20 16:34:22,630 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:15201"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:34:22,631 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:15201'}
2024-06-20 16:34:22,646 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":15201, "title":"Wikipathways WP4760 network"},
 "errors":[]
}
2024-06-20 16:34:22,647 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 15201, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:34:22,647 [DEBUG] py4...: Returning 'rename_network': {'network': 15201, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:34:22,648 [DEBUG] py4...: --------------------
2024-06-20 16:37:32,728 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:37:32,729 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,730 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,730 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,731 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:37:32,739 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":15201},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:37:32,739 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 15201}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:37:32,740 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified']
2024-06-20 16:37:32,740 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,742 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:37:32,753 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 15201
}
],
 "errors":[]
}
2024-06-20 16:37:32,754 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 15201}]
2024-06-20 16:37:32,755 [DEBUG] py4...: ǀReturning 'get_network_suid': 15201
2024-06-20 16:37:32,755 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:15201"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,756 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:15201'}
2024-06-20 16:37:32,832 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":15788,"view":16296},
 "errors":[]
}
2024-06-20 16:37:32,833 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 15788, 'view': 16296}
2024-06-20 16:37:32,834 [DEBUG] py4...: Returning 'clone_network': 15788
2024-06-20 16:37:32,834 [DEBUG] py4...: --------------------
2024-06-20 16:37:32,835 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network', network='Wikipathways WP4760 network')
2024-06-20 16:37:32,835 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,836 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,836 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,837 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:37:32,846 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":15201},{"name":"Wikipathways WP4760 network_1","SUID":15788},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:37:32,847 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 15201}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 15788}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:37:32,848 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network stringified']
2024-06-20 16:37:32,849 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,850 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:37:32,867 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 15201
}
],
 "errors":[]
}
2024-06-20 16:37:32,868 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 15201}]
2024-06-20 16:37:32,868 [DEBUG] py4...: ǀReturning 'get_network_suid': 15201
2024-06-20 16:37:32,869 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:15201"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:32,869 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:15201'}
2024-06-20 16:37:32,888 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"CyNetwork is null","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:37:32,890 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): CyNetwork is null')
2024-06-20 16:37:32,890 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): CyNetwork is null')
2024-06-20 16:37:32,891 [DEBUG] py4...: --------------------
2024-06-20 16:37:42,852 [DEBUG] py4...: Calling commands_get('wikipathways import-as-network id="WP4760"')
2024-06-20 16:37:42,853 [DEBUG] py4...: HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-network), params: {'id': 'WP4760'}
2024-06-20 16:37:45,049 [DEBUG] py4...: OK[200], content: Finished

2024-06-20 16:37:45,050 [DEBUG] py4...: Returning 'commands_get': []
2024-06-20 16:37:45,051 [DEBUG] py4...: --------------------
2024-06-20 16:37:45,052 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network')
2024-06-20 16:37:45,053 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:45,054 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:45,055 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:37:45,069 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 16546
}
],
 "errors":[]
}
2024-06-20 16:37:45,070 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 16546}]
2024-06-20 16:37:45,070 [DEBUG] py4...: ǀReturning 'get_network_suid': 16546
2024-06-20 16:37:45,071 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:16546"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:45,071 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:16546'}
2024-06-20 16:37:45,082 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":16546, "title":"Wikipathways WP4760 network"},
 "errors":[]
}
2024-06-20 16:37:45,083 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 16546, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:37:45,084 [DEBUG] py4...: Returning 'rename_network': {'network': 16546, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:37:45,084 [DEBUG] py4...: --------------------
2024-06-20 16:37:46,352 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:37:46,353 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,353 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,353 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,354 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:37:46,359 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":16546},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:37:46,360 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 16546}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:37:46,360 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified']
2024-06-20 16:37:46,361 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,361 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:37:46,371 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 16546
}
],
 "errors":[]
}
2024-06-20 16:37:46,372 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 16546}]
2024-06-20 16:37:46,373 [DEBUG] py4...: ǀReturning 'get_network_suid': 16546
2024-06-20 16:37:46,373 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:16546"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,373 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:16546'}
2024-06-20 16:37:46,421 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":17133,"view":17641},
 "errors":[]
}
2024-06-20 16:37:46,425 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 17133, 'view': 17641}
2024-06-20 16:37:46,426 [DEBUG] py4...: Returning 'clone_network': 17133
2024-06-20 16:37:46,427 [DEBUG] py4...: --------------------
2024-06-20 16:37:46,428 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network', network='Wikipathways WP4760 network')
2024-06-20 16:37:46,428 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,428 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,430 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,431 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:37:46,441 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":16546},{"name":"Wikipathways WP4760 network_1","SUID":17133},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:37:46,442 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 16546}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 17133}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:37:46,442 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network stringified']
2024-06-20 16:37:46,443 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,444 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:37:46,457 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 16546
}
],
 "errors":[]
}
2024-06-20 16:37:46,459 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 16546}]
2024-06-20 16:37:46,459 [DEBUG] py4...: ǀReturning 'get_network_suid': 16546
2024-06-20 16:37:46,459 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:16546"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:46,460 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:16546'}
2024-06-20 16:37:46,475 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Task Cancelled. Could not validate Tunable inputs: Duplicated network name.","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:37:46,476 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: Duplicated network name.')
2024-06-20 16:37:46,476 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: Duplicated network name.')
2024-06-20 16:37:46,476 [DEBUG] py4...: --------------------
2024-06-20 16:37:56,572 [DEBUG] py4...: Calling commands_get('wikipathways import-as-network id="WP4760"')
2024-06-20 16:37:56,573 [DEBUG] py4...: HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-network), params: {'id': 'WP4760'}
2024-06-20 16:37:58,663 [DEBUG] py4...: OK[200], content: Finished

2024-06-20 16:37:58,663 [DEBUG] py4...: Returning 'commands_get': []
2024-06-20 16:37:58,664 [DEBUG] py4...: --------------------
2024-06-20 16:37:58,665 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network')
2024-06-20 16:37:58,665 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:58,666 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:58,666 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:37:58,677 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 17891
}
],
 "errors":[]
}
2024-06-20 16:37:58,678 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 17891}]
2024-06-20 16:37:58,679 [DEBUG] py4...: ǀReturning 'get_network_suid': 17891
2024-06-20 16:37:58,679 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:17891"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:37:58,680 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:17891'}
2024-06-20 16:37:58,692 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":17891, "title":"Wikipathways WP4760 network"},
 "errors":[]
}
2024-06-20 16:37:58,693 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 17891, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:37:58,693 [DEBUG] py4...: Returning 'rename_network': {'network': 17891, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:37:58,694 [DEBUG] py4...: --------------------
2024-06-20 16:38:02,306 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:38:02,306 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,307 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,307 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,307 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:38:02,313 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":17891},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:38:02,313 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 17891}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:38:02,314 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified']
2024-06-20 16:38:02,314 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,314 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:38:02,323 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 17891
}
],
 "errors":[]
}
2024-06-20 16:38:02,323 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 17891}]
2024-06-20 16:38:02,324 [DEBUG] py4...: ǀReturning 'get_network_suid': 17891
2024-06-20 16:38:02,324 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:17891"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,324 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:17891'}
2024-06-20 16:38:02,400 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":18478,"view":18986},
 "errors":[]
}
2024-06-20 16:38:02,400 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 18478, 'view': 18986}
2024-06-20 16:38:02,402 [DEBUG] py4...: Returning 'clone_network': 18478
2024-06-20 16:38:02,402 [DEBUG] py4...: --------------------
2024-06-20 16:38:02,403 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network', network='Wikipathways WP4760 network')
2024-06-20 16:38:02,403 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,403 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,404 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,404 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:38:02,413 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":17891},{"name":"KEGG hsa05017 network stringified","SUID":4382},{"name":"Wikipathways WP4760 network_1","SUID":18478}]
2024-06-20 16:38:02,414 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 17891}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 18478}]
2024-06-20 16:38:02,415 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1']
2024-06-20 16:38:02,415 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,416 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:38:02,429 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 17891
}
],
 "errors":[]
}
2024-06-20 16:38:02,430 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 17891}]
2024-06-20 16:38:02,430 [DEBUG] py4...: ǀReturning 'get_network_suid': 17891
2024-06-20 16:38:02,432 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:17891"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:38:02,433 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:17891'}
2024-06-20 16:38:02,447 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Task Cancelled. Could not validate Tunable inputs: Duplicated network name.","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:38:02,448 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: Duplicated network name.')
2024-06-20 16:38:02,449 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: Duplicated network name.')
2024-06-20 16:38:02,449 [DEBUG] py4...: --------------------
2024-06-20 16:40:57,886 [DEBUG] py4...: Calling commands_get('wikipathways import-as-network id="WP4760"')
2024-06-20 16:40:57,888 [DEBUG] py4...: HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-network), params: {'id': 'WP4760'}
2024-06-20 16:41:00,131 [DEBUG] py4...: OK[200], content: Finished

2024-06-20 16:41:00,132 [DEBUG] py4...: Returning 'commands_get': []
2024-06-20 16:41:00,133 [DEBUG] py4...: --------------------
2024-06-20 16:41:00,134 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network')
2024-06-20 16:41:00,135 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:00,137 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:00,138 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:41:00,154 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 19236
}
],
 "errors":[]
}
2024-06-20 16:41:00,155 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 19236}]
2024-06-20 16:41:00,156 [DEBUG] py4...: ǀReturning 'get_network_suid': 19236
2024-06-20 16:41:00,156 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:19236"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:00,157 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:19236'}
2024-06-20 16:41:00,167 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":19236, "title":"Wikipathways WP4760 network"},
 "errors":[]
}
2024-06-20 16:41:00,168 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 19236, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:41:00,168 [DEBUG] py4...: Returning 'rename_network': {'network': 19236, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:41:00,169 [DEBUG] py4...: --------------------
2024-06-20 16:41:03,144 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:41:03,144 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,144 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,145 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,145 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:41:03,153 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":19236},{"name":"KEGG hsa05017 network stringified","SUID":4382}]
2024-06-20 16:41:03,153 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 19236}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}]
2024-06-20 16:41:03,154 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified']
2024-06-20 16:41:03,154 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,155 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:41:03,166 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 19236
}
],
 "errors":[]
}
2024-06-20 16:41:03,168 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 19236}]
2024-06-20 16:41:03,168 [DEBUG] py4...: ǀReturning 'get_network_suid': 19236
2024-06-20 16:41:03,168 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:19236"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,170 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:19236'}
2024-06-20 16:41:03,224 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":19823,"view":20331},
 "errors":[]
}
2024-06-20 16:41:03,225 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 19823, 'view': 20331}
2024-06-20 16:41:03,225 [DEBUG] py4...: Returning 'clone_network': 19823
2024-06-20 16:41:03,225 [DEBUG] py4...: --------------------
2024-06-20 16:41:03,225 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network', network='Wikipathways WP4760 network')
2024-06-20 16:41:03,226 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,226 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,227 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,227 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:41:03,238 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":19236},{"name":"KEGG hsa05017 network stringified","SUID":4382},{"name":"Wikipathways WP4760 network_1","SUID":19823}]
2024-06-20 16:41:03,239 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 19236}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 19823}]
2024-06-20 16:41:03,240 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1']
2024-06-20 16:41:03,240 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,240 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:41:03,251 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 19236
}
],
 "errors":[]
}
2024-06-20 16:41:03,252 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 19236}]
2024-06-20 16:41:03,252 [DEBUG] py4...: ǀReturning 'get_network_suid': 19236
2024-06-20 16:41:03,252 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:19236"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:03,253 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:19236'}
2024-06-20 16:41:03,267 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Task Cancelled. Could not validate Tunable inputs: Duplicated network name.","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:41:03,268 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: Duplicated network name.')
2024-06-20 16:41:03,270 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: Duplicated network name.')
2024-06-20 16:41:03,270 [DEBUG] py4...: --------------------
2024-06-20 16:41:12,645 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:41:12,645 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,645 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,646 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,646 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:41:12,652 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":19236},{"name":"KEGG hsa05017 network stringified","SUID":4382},{"name":"Wikipathways WP4760 network_1","SUID":19823}]
2024-06-20 16:41:12,653 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 19236}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 19823}]
2024-06-20 16:41:12,653 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1']
2024-06-20 16:41:12,653 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,654 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:41:12,664 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 19236
}
],
 "errors":[]
}
2024-06-20 16:41:12,665 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 19236}]
2024-06-20 16:41:12,666 [DEBUG] py4...: ǀReturning 'get_network_suid': 19236
2024-06-20 16:41:12,666 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:19236"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,666 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:19236'}
2024-06-20 16:41:12,715 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":20581,"view":21003},
 "errors":[]
}
2024-06-20 16:41:12,716 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 20581, 'view': 21003}
2024-06-20 16:41:12,717 [DEBUG] py4...: Returning 'clone_network': 20581
2024-06-20 16:41:12,718 [DEBUG] py4...: --------------------
2024-06-20 16:41:12,718 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network', network='Wikipathways WP4760 network_2')
2024-06-20 16:41:12,719 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network_2', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,719 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,719 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,720 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:41:12,728 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":19236},{"name":"Wikipathways WP4760 network_2","SUID":20581},{"name":"KEGG hsa05017 network stringified","SUID":4382},{"name":"Wikipathways WP4760 network_1","SUID":19823}]
2024-06-20 16:41:12,728 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 19236}, {'name': 'Wikipathways WP4760 network_2', 'SUID': 20581}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 19823}]
2024-06-20 16:41:12,729 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_2', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1']
2024-06-20 16:41:12,729 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network_2" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,730 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network_2', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:41:12,741 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 20581
}
],
 "errors":[]
}
2024-06-20 16:41:12,742 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 20581}]
2024-06-20 16:41:12,743 [DEBUG] py4...: ǀReturning 'get_network_suid': 20581
2024-06-20 16:41:12,743 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:20581"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:12,743 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:20581'}
2024-06-20 16:41:12,755 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Task Cancelled. Could not validate Tunable inputs: Duplicated network name.","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:41:12,756 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: Duplicated network name.')
2024-06-20 16:41:12,756 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: Duplicated network name.')
2024-06-20 16:41:12,757 [DEBUG] py4...: --------------------
2024-06-20 16:41:20,186 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:41:20,186 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:20,187 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:20,187 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:20,187 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:41:20,194 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":19236},{"name":"Wikipathways WP4760 network_2","SUID":20581},{"name":"KEGG hsa05017 network stringified","SUID":4382},{"name":"Wikipathways WP4760 network_1","SUID":19823}]
2024-06-20 16:41:20,195 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 19236}, {'name': 'Wikipathways WP4760 network_2', 'SUID': 20581}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 19823}]
2024-06-20 16:41:20,196 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_2', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1']
2024-06-20 16:41:20,196 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:20,197 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:41:20,206 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 19236
}
],
 "errors":[]
}
2024-06-20 16:41:20,206 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 19236}]
2024-06-20 16:41:20,206 [DEBUG] py4...: ǀReturning 'get_network_suid': 19236
2024-06-20 16:41:20,206 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:19236"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:20,207 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:19236'}
2024-06-20 16:41:20,260 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":21253,"view":21675},
 "errors":[]
}
2024-06-20 16:41:20,260 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 21253, 'view': 21675}
2024-06-20 16:41:20,261 [DEBUG] py4...: Returning 'clone_network': 21253
2024-06-20 16:41:20,262 [DEBUG] py4...: --------------------
2024-06-20 16:41:20,262 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network', network='Wikipathways WP4760 network_6')
2024-06-20 16:41:20,262 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network_6', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:20,263 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:20,263 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:20,264 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:41:20,271 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network","SUID":128},{"name":"Wikipathways WP4760 network","SUID":19236},{"name":"Wikipathways WP4760 network_2","SUID":20581},{"name":"Wikipathways WP4760 network_3","SUID":21253},{"name":"KEGG hsa05017 network stringified","SUID":4382},{"name":"Wikipathways WP4760 network_1","SUID":19823}]
2024-06-20 16:41:20,273 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network', 'SUID': 128}, {'name': 'Wikipathways WP4760 network', 'SUID': 19236}, {'name': 'Wikipathways WP4760 network_2', 'SUID': 20581}, {'name': 'Wikipathways WP4760 network_3', 'SUID': 21253}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 4382}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 19823}]
2024-06-20 16:41:20,273 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_2', 'Wikipathways WP4760 network_3', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1']
2024-06-20 16:41:20,274 [DEBUG] py4...: ǀ'get_network_suid' exception CyError('In get_network_suid(): Network does not exist for name "Wikipathways WP4760 network_6"')
2024-06-20 16:41:20,274 [DEBUG] py4...: 'rename_network' exception CyError('In get_network_suid(): Network does not exist for name "Wikipathways WP4760 network_6"')
2024-06-20 16:41:20,274 [DEBUG] py4...: --------------------
2024-06-20 16:41:45,850 [DEBUG] py4...: Calling cytoscape_version_info()
2024-06-20 16:41:45,851 [DEBUG] py4...: ǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:45,852 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2024-06-20 16:41:45,860 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2024-06-20 16:41:45,861 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:41:45,869 [DEBUG] py4...: ǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:41:45,870 [DEBUG] py4...: ǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:41:45,870 [DEBUG] py4...: Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:41:45,870 [DEBUG] py4...: --------------------
2024-06-20 16:41:51,831 [DEBUG] py4...: Calling import_network_from_file('sca_hsa05017.gml')
2024-06-20 16:41:51,832 [DEBUG] py4...: ǀCalling commands_post('network load file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\sca_hsa05017.gml"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:51,832 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/load%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\sca_hsa05017.gml'}
2024-06-20 16:41:51,924 [DEBUG] py4...: ǀOK[200], content: {
 "data": { "networks":[
  21981
], "views":[
  24519
]},
 "errors":[]
}
2024-06-20 16:41:51,925 [DEBUG] py4...: ǀReturning 'commands_post': {'networks': [21981], 'views': [24519]}
2024-06-20 16:41:55,927 [DEBUG] py4...: Returning 'import_network_from_file': {'networks': [21981], 'views': [24519]}
2024-06-20 16:41:55,928 [DEBUG] py4...: --------------------
2024-06-20 16:41:55,929 [DEBUG] py4...: Calling layout_network('force-directed', network='current')
2024-06-20 16:41:55,929 [DEBUG] py4...: ǀCalling get_network_suid('current', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:55,930 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:55,931 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:41:55,944 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 21981
}
],
 "errors":[]
}
2024-06-20 16:41:55,945 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 21981}]
2024-06-20 16:41:55,945 [DEBUG] py4...: ǀReturning 'get_network_suid': 21981
2024-06-20 16:41:55,945 [DEBUG] py4...: ǀCalling commands_post('layout force-directed network="SUID:21981"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:55,946 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/layout/force-directed), json: {'network': 'SUID:21981'}
2024-06-20 16:41:55,978 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:41:55,979 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:41:55,980 [DEBUG] py4...: Returning 'layout_network': {}
2024-06-20 16:41:55,980 [DEBUG] py4...: --------------------
2024-06-20 16:41:55,981 [DEBUG] py4...: Calling rename_network('KEGG hsa05017 network')
2024-06-20 16:41:55,981 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:55,981 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:55,982 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:41:55,992 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 21981
}
],
 "errors":[]
}
2024-06-20 16:41:55,992 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 21981}]
2024-06-20 16:41:55,992 [DEBUG] py4...: ǀReturning 'get_network_suid': 21981
2024-06-20 16:41:55,992 [DEBUG] py4...: ǀCalling commands_post('network rename name="KEGG hsa05017 network" sourceNetwork="SUID:21981"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:55,994 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'KEGG hsa05017 network', 'sourceNetwork': 'SUID:21981'}
2024-06-20 16:41:56,004 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":21981, "title":"KEGG hsa05017 network"},
 "errors":[]
}
2024-06-20 16:41:56,004 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 21981, 'title': 'KEGG hsa05017 network'}
2024-06-20 16:41:56,005 [DEBUG] py4...: Returning 'rename_network': {'network': 21981, 'title': 'KEGG hsa05017 network'}
2024-06-20 16:41:56,005 [DEBUG] py4...: --------------------
2024-06-20 16:41:57,402 [DEBUG] py4...: Calling commands_run('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="KEGG hsa05017 network" species="Homo sapiens"')
2024-06-20 16:41:57,403 [DEBUG] py4...: ǀCalling commands_get('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="KEGG hsa05017 network" species="Homo sapiens"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:41:57,404 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/stringify), params: {'colDisplayName': 'name', 'column': 'uniprot', 'compoundQuery': 'false', 'includeNotMapped': 'false', 'networkNoGui': 'KEGG hsa05017 network', 'species': 'Homo sapiens'}
2024-06-20 16:42:00,788 [DEBUG] py4...: ǀOK[200], content: Set network 'KEGG hsa05017 network as STRING network
Finished

2024-06-20 16:42:00,789 [DEBUG] py4...: ǀReturning 'commands_get': ["Set network 'KEGG hsa05017 network as STRING network"]
2024-06-20 16:42:00,790 [DEBUG] py4...: Returning 'commands_run': ["Set network 'KEGG hsa05017 network as STRING network"]
2024-06-20 16:42:00,791 [DEBUG] py4...: --------------------
2024-06-20 16:42:00,791 [DEBUG] py4...: Calling rename_network('KEGG hsa05017 network stringified')
2024-06-20 16:42:00,792 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:00,792 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:00,793 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:42:00,806 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 26235
}
],
 "errors":[]
}
2024-06-20 16:42:00,807 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 26235}]
2024-06-20 16:42:00,807 [DEBUG] py4...: ǀReturning 'get_network_suid': 26235
2024-06-20 16:42:00,808 [DEBUG] py4...: ǀCalling commands_post('network rename name="KEGG hsa05017 network stringified" sourceNetwork="SUID:26235"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:00,808 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'KEGG hsa05017 network stringified', 'sourceNetwork': 'SUID:26235'}
2024-06-20 16:42:00,822 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":26235, "title":"KEGG hsa05017 network stringified"},
 "errors":[]
}
2024-06-20 16:42:00,823 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 26235, 'title': 'KEGG hsa05017 network stringified'}
2024-06-20 16:42:00,823 [DEBUG] py4...: Returning 'rename_network': {'network': 26235, 'title': 'KEGG hsa05017 network stringified'}
2024-06-20 16:42:00,823 [DEBUG] py4...: --------------------
2024-06-20 16:42:02,606 [DEBUG] py4...: Calling commands_run('string change confidence confidence=0.4 network="KEGG hsa05017 network stringified"')
2024-06-20 16:42:02,607 [DEBUG] py4...: ǀCalling commands_get('string change confidence confidence=0.4 network="KEGG hsa05017 network stringified"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:02,607 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/change%20confidence), params: {'confidence': '0.4', 'network': 'KEGG hsa05017 network stringified'}
2024-06-20 16:42:03,436 [DEBUG] py4...: ǀOK[200], content: 
Finished

2024-06-20 16:42:03,436 [DEBUG] py4...: ǀReturning 'commands_get': ['']
2024-06-20 16:42:03,436 [DEBUG] py4...: Returning 'commands_run': ['']
2024-06-20 16:42:03,437 [DEBUG] py4...: --------------------
2024-06-20 16:42:08,242 [DEBUG] py4...: Calling commands_get('wikipathways import-as-network id="WP4760"')
2024-06-20 16:42:08,242 [DEBUG] py4...: HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-network), params: {'id': 'WP4760'}
2024-06-20 16:42:11,194 [DEBUG] py4...: OK[200], content: Finished

2024-06-20 16:42:11,195 [DEBUG] py4...: Returning 'commands_get': []
2024-06-20 16:42:11,195 [DEBUG] py4...: --------------------
2024-06-20 16:42:11,196 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network')
2024-06-20 16:42:11,196 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:11,197 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:11,197 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:42:11,213 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 35037
}
],
 "errors":[]
}
2024-06-20 16:42:11,213 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 35037}]
2024-06-20 16:42:11,214 [DEBUG] py4...: ǀReturning 'get_network_suid': 35037
2024-06-20 16:42:11,214 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:35037"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:11,215 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:35037'}
2024-06-20 16:42:11,226 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":35037, "title":"Wikipathways WP4760 network"},
 "errors":[]
}
2024-06-20 16:42:11,228 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 35037, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:42:11,228 [DEBUG] py4...: Returning 'rename_network': {'network': 35037, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:42:11,229 [DEBUG] py4...: --------------------
2024-06-20 16:42:13,152 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:42:13,153 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:13,153 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:13,153 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:13,154 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:42:13,161 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Wikipathways WP4760 network","SUID":35037}]
2024-06-20 16:42:13,162 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Wikipathways WP4760 network', 'SUID': 35037}]
2024-06-20 16:42:13,162 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network stringified', 'KEGG hsa05017 network', 'Wikipathways WP4760 network']
2024-06-20 16:42:13,163 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:13,164 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:42:13,174 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 35037
}
],
 "errors":[]
}
2024-06-20 16:42:13,175 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 35037}]
2024-06-20 16:42:13,175 [DEBUG] py4...: ǀReturning 'get_network_suid': 35037
2024-06-20 16:42:13,175 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:35037"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:13,177 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:35037'}
2024-06-20 16:42:13,228 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":35624,"view":36132},
 "errors":[]
}
2024-06-20 16:42:13,229 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 35624, 'view': 36132}
2024-06-20 16:42:13,229 [DEBUG] py4...: Returning 'clone_network': 35624
2024-06-20 16:42:13,230 [DEBUG] py4...: --------------------
2024-06-20 16:42:13,230 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network', network='Wikipathways WP4760 network_6')
2024-06-20 16:42:13,230 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network_6', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:13,231 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:13,231 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:13,231 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:42:13,238 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":35624},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Wikipathways WP4760 network","SUID":35037}]
2024-06-20 16:42:13,239 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 35624}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Wikipathways WP4760 network', 'SUID': 35037}]
2024-06-20 16:42:13,239 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network', 'Wikipathways WP4760 network']
2024-06-20 16:42:13,240 [DEBUG] py4...: ǀ'get_network_suid' exception CyError('In get_network_suid(): Network does not exist for name "Wikipathways WP4760 network_6"')
2024-06-20 16:42:13,240 [DEBUG] py4...: 'rename_network' exception CyError('In get_network_suid(): Network does not exist for name "Wikipathways WP4760 network_6"')
2024-06-20 16:42:13,242 [DEBUG] py4...: --------------------
2024-06-20 16:42:34,147 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:42:34,149 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,149 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,150 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,150 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:42:34,159 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Wikipathways WP4760 network","SUID":35037}]
2024-06-20 16:42:34,160 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Wikipathways WP4760 network', 'SUID': 35037}]
2024-06-20 16:42:34,161 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network stringified', 'KEGG hsa05017 network', 'Wikipathways WP4760 network']
2024-06-20 16:42:34,161 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,162 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:42:34,173 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 35037
}
],
 "errors":[]
}
2024-06-20 16:42:34,174 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 35037}]
2024-06-20 16:42:34,175 [DEBUG] py4...: ǀReturning 'get_network_suid': 35037
2024-06-20 16:42:34,175 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:35037"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,176 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:35037'}
2024-06-20 16:42:34,235 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":36382,"view":36804},
 "errors":[]
}
2024-06-20 16:42:34,235 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 36382, 'view': 36804}
2024-06-20 16:42:34,236 [DEBUG] py4...: Returning 'clone_network': 36382
2024-06-20 16:42:34,236 [DEBUG] py4...: --------------------
2024-06-20 16:42:34,237 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network', network='Wikipathways WP4760 network')
2024-06-20 16:42:34,237 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,237 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,239 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,239 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:42:34,249 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Wikipathways WP4760 network","SUID":35037},{"name":"Wikipathways WP4760 network_1","SUID":36382}]
2024-06-20 16:42:34,250 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Wikipathways WP4760 network', 'SUID': 35037}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 36382}]
2024-06-20 16:42:34,250 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network stringified', 'KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_1']
2024-06-20 16:42:34,251 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,252 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:42:34,263 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 35037
}
],
 "errors":[]
}
2024-06-20 16:42:34,264 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 35037}]
2024-06-20 16:42:34,265 [DEBUG] py4...: ǀReturning 'get_network_suid': 35037
2024-06-20 16:42:34,265 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:35037"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:34,266 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:35037'}
2024-06-20 16:42:34,280 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"CyNetwork is null","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:42:34,282 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): CyNetwork is null')
2024-06-20 16:42:34,282 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): CyNetwork is null')
2024-06-20 16:42:34,283 [DEBUG] py4...: --------------------
2024-06-20 16:42:53,031 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=1, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:42:53,032 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="1" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:42:53,033 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '1', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:42:53,687 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"mappedTables":[
  35008,
  35046
]},
 "errors":[]
}
2024-06-20 16:42:53,688 [DEBUG] py4...: ǀReturning 'commands_post': {'mappedTables': [35008, 35046]}
2024-06-20 16:42:53,689 [DEBUG] py4...: Returning 'load_table_data_from_file': {'mappedTables': [35008, 35046]}
2024-06-20 16:42:53,689 [DEBUG] py4...: --------------------
2024-06-20 16:43:01,218 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=1, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:43:01,219 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="1" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:01,219 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '1', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:43:01,264 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"mappedTables":[
  35008,
  35046
]},
 "errors":[]
}
2024-06-20 16:43:01,265 [DEBUG] py4...: ǀReturning 'commands_post': {'mappedTables': [35008, 35046]}
2024-06-20 16:43:01,265 [DEBUG] py4...: Returning 'load_table_data_from_file': {'mappedTables': [35008, 35046]}
2024-06-20 16:43:01,265 [DEBUG] py4...: --------------------
2024-06-20 16:43:22,248 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:43:22,248 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,248 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,249 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,249 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:43:22,254 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Wikipathways WP4760 network","SUID":35037},{"name":"Wikipathways WP4760 network_1","SUID":36382}]
2024-06-20 16:43:22,255 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Wikipathways WP4760 network', 'SUID': 35037}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 36382}]
2024-06-20 16:43:22,256 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network stringified', 'KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_1']
2024-06-20 16:43:22,256 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,256 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:43:22,267 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 35037
}
],
 "errors":[]
}
2024-06-20 16:43:22,268 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 35037}]
2024-06-20 16:43:22,268 [DEBUG] py4...: ǀReturning 'get_network_suid': 35037
2024-06-20 16:43:22,269 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:35037"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,269 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:35037'}
2024-06-20 16:43:22,318 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":37106,"view":37531},
 "errors":[]
}
2024-06-20 16:43:22,318 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 37106, 'view': 37531}
2024-06-20 16:43:22,319 [DEBUG] py4...: Returning 'clone_network': 37106
2024-06-20 16:43:22,319 [DEBUG] py4...: --------------------
2024-06-20 16:43:22,320 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network uniprot', network='Wikipathways WP4760 network')
2024-06-20 16:43:22,320 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,320 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,321 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,321 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:43:22,330 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_2","SUID":37106},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Wikipathways WP4760 network","SUID":35037},{"name":"Wikipathways WP4760 network_1","SUID":36382}]
2024-06-20 16:43:22,331 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_2', 'SUID': 37106}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Wikipathways WP4760 network', 'SUID': 35037}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 36382}]
2024-06-20 16:43:22,332 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_2', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network', 'Wikipathways WP4760 network', 'Wikipathways WP4760 network_1']
2024-06-20 16:43:22,332 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,332 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:43:22,345 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 35037
}
],
 "errors":[]
}
2024-06-20 16:43:22,345 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 35037}]
2024-06-20 16:43:22,346 [DEBUG] py4...: ǀReturning 'get_network_suid': 35037
2024-06-20 16:43:22,346 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network uniprot" sourceNetwork="SUID:35037"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:22,347 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network uniprot', 'sourceNetwork': 'SUID:35037'}
2024-06-20 16:43:22,364 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"unrecognized (table entry): Wikipathways WP4760 network  (table name): USER","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:43:22,365 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): unrecognized (table entry): Wikipathways WP4760 network  (table name): USER')
2024-06-20 16:43:22,365 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): unrecognized (table entry): Wikipathways WP4760 network  (table name): USER')
2024-06-20 16:43:22,366 [DEBUG] py4...: --------------------
2024-06-20 16:43:37,277 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:43:37,278 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,278 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,279 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,280 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:43:37,286 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Wikipathways WP4760 network","SUID":35037}]
2024-06-20 16:43:37,286 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Wikipathways WP4760 network', 'SUID': 35037}]
2024-06-20 16:43:37,287 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['KEGG hsa05017 network stringified', 'KEGG hsa05017 network', 'Wikipathways WP4760 network']
2024-06-20 16:43:37,287 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,288 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:43:37,299 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 35037
}
],
 "errors":[]
}
2024-06-20 16:43:37,300 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 35037}]
2024-06-20 16:43:37,301 [DEBUG] py4...: ǀReturning 'get_network_suid': 35037
2024-06-20 16:43:37,301 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:35037"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,302 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:35037'}
2024-06-20 16:43:37,341 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":37782,"view":38207},
 "errors":[]
}
2024-06-20 16:43:37,341 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 37782, 'view': 38207}
2024-06-20 16:43:37,343 [DEBUG] py4...: Returning 'clone_network': 37782
2024-06-20 16:43:37,343 [DEBUG] py4...: --------------------
2024-06-20 16:43:37,344 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network uniprot', network='Wikipathways WP4760 network')
2024-06-20 16:43:37,344 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,345 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,345 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,345 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:43:37,354 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":37782},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Wikipathways WP4760 network","SUID":35037}]
2024-06-20 16:43:37,354 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 37782}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Wikipathways WP4760 network', 'SUID': 35037}]
2024-06-20 16:43:37,355 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network', 'Wikipathways WP4760 network']
2024-06-20 16:43:37,356 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,356 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:43:37,366 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 35037
}
],
 "errors":[]
}
2024-06-20 16:43:37,367 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 35037}]
2024-06-20 16:43:37,367 [DEBUG] py4...: ǀReturning 'get_network_suid': 35037
2024-06-20 16:43:37,368 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network uniprot" sourceNetwork="SUID:35037"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:37,368 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network uniprot', 'sourceNetwork': 'SUID:35037'}
2024-06-20 16:43:37,383 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"CyNetwork is null","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:43:37,384 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): CyNetwork is null')
2024-06-20 16:43:37,385 [DEBUG] py4...: 'rename_network' exception CyError('In commands_post(): CyNetwork is null')
2024-06-20 16:43:37,385 [DEBUG] py4...: --------------------
2024-06-20 16:43:46,309 [DEBUG] py4...: Calling commands_get('wikipathways import-as-network id="WP4760"')
2024-06-20 16:43:46,309 [DEBUG] py4...: HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-network), params: {'id': 'WP4760'}
2024-06-20 16:43:48,334 [DEBUG] py4...: OK[200], content: Finished

2024-06-20 16:43:48,335 [DEBUG] py4...: Returning 'commands_get': []
2024-06-20 16:43:48,335 [DEBUG] py4...: --------------------
2024-06-20 16:43:48,336 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network')
2024-06-20 16:43:48,336 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:48,337 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:48,337 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:43:48,347 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:43:48,348 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:43:48,348 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:43:48,349 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:48,349 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:38458'}
2024-06-20 16:43:48,360 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":38458, "title":"Wikipathways WP4760 network"},
 "errors":[]
}
2024-06-20 16:43:48,361 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 38458, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:43:48,361 [DEBUG] py4...: Returning 'rename_network': {'network': 38458, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:43:48,361 [DEBUG] py4...: --------------------
2024-06-20 16:43:59,814 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:43:59,814 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,814 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,815 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,815 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:43:59,821 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:43:59,821 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:43:59,821 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:43:59,821 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,821 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:43:59,829 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:43:59,830 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:43:59,830 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:43:59,830 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,831 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:38458'}
2024-06-20 16:43:59,873 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":39045,"view":39553},
 "errors":[]
}
2024-06-20 16:43:59,875 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 39045, 'view': 39553}
2024-06-20 16:43:59,875 [DEBUG] py4...: Returning 'clone_network': 39045
2024-06-20 16:43:59,876 [DEBUG] py4...: --------------------
2024-06-20 16:43:59,876 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network uniprot', network='Wikipathways WP4760 network')
2024-06-20 16:43:59,876 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,877 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,877 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,877 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:43:59,886 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:43:59,886 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:43:59,887 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:43:59,887 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,888 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:43:59,899 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:43:59,900 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:43:59,901 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:43:59,901 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network uniprot" sourceNetwork="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:43:59,902 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network uniprot', 'sourceNetwork': 'SUID:38458'}
2024-06-20 16:43:59,912 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":38458, "title":"Wikipathways WP4760 network uniprot"},
 "errors":[]
}
2024-06-20 16:43:59,913 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 38458, 'title': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:43:59,914 [DEBUG] py4...: Returning 'rename_network': {'network': 38458, 'title': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:43:59,914 [DEBUG] py4...: --------------------
2024-06-20 16:44:05,584 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=1, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:05,585 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="1" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:05,585 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '1', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:44:05,627 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"mappedTables":[
  39016,
  39054
]},
 "errors":[]
}
2024-06-20 16:44:05,628 [DEBUG] py4...: ǀReturning 'commands_post': {'mappedTables': [39016, 39054]}
2024-06-20 16:44:05,628 [DEBUG] py4...: Returning 'load_table_data_from_file': {'mappedTables': [39016, 39054]}
2024-06-20 16:44:05,628 [DEBUG] py4...: --------------------
2024-06-20 16:44:07,387 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:07,387 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,387 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:07,387 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,388 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:07,395 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 39045
}
],
 "errors":[]
}
2024-06-20 16:44:07,396 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 39045}]
2024-06-20 16:44:07,396 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 39045
2024-06-20 16:44:07,397 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:39045"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,397 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:39045'}
2024-06-20 16:44:07,407 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:07,408 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:07,409 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:07,409 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,409 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,410 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,410 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:07,419 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 39045
}
],
 "errors":[]
}
2024-06-20 16:44:07,419 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 39045}]
2024-06-20 16:44:07,420 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 39045
2024-06-20 16:44:07,420 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/39045/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,421 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/39045/tables/defaultnode/columns)
2024-06-20 16:44:07,431 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:07,432 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:07,432 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:07,432 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,432 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,432 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:07,438 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:07,439 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:07,439 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:07,440 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,440 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:07,504 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:07,505 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:07,505 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,505 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,505 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:07,512 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:07,513 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:07,513 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:07,513 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,514 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,514 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,514 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:07,527 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 39045
}
],
 "errors":[]
}
2024-06-20 16:44:07,528 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 39045}]
2024-06-20 16:44:07,528 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 39045
2024-06-20 16:44:07,528 [DEBUG] py4...: ǀǀCalling get_selected_node_count(39045, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,529 [DEBUG] py4...: ǀǀǀCalling get_network_suid(39045, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,529 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,529 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,537 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,537 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,538 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 39045
2024-06-20 16:44:07,538 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/39045/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,539 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/39045/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:07,548 [DEBUG] py4...: ǀǀǀOK[200], content: [39296,39171,39236,39301,39176,39181,39121,39316,39126,39256,39131,39261,39136,39141,39146,39151,39156,39286,39161,39166]
2024-06-20 16:44:07,549 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39296, 39171, 39236, 39301, 39176, 39181, 39121, 39316, 39126, 39256, 39131, 39261, 39136, 39141, 39146, 39151, 39156, 39286, 39161, 39166]
2024-06-20 16:44:07,549 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 20
2024-06-20 16:44:07,549 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/39045/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,550 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/39045/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:07,556 [DEBUG] py4...: ǀǀOK[200], content: [39296,39171,39236,39301,39176,39181,39121,39316,39126,39256,39131,39261,39136,39141,39146,39151,39156,39286,39161,39166]
2024-06-20 16:44:07,557 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [39296, 39171, 39236, 39301, 39176, 39181, 39121, 39316, 39126, 39256, 39131, 39261, 39136, 39141, 39146, 39151, 39156, 39286, 39161, 39166]
2024-06-20 16:44:07,557 [DEBUG] py4...: ǀǀCalling get_table_columns('node', ['name'], 'default', 39045, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,557 [DEBUG] py4...: ǀǀǀCalling get_network_suid(39045, 'http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,558 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,558 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,564 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,565 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,565 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 39045
2024-06-20 16:44:07,565 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=39045, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,565 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(39045, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,567 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,567 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,572 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,573 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,573 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 39045
2024-06-20 16:44:07,573 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/39045/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,573 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/39045/tables/defaultnode/columns)
2024-06-20 16:44:07,579 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:07,580 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:07,580 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'ChEBI': 'String', 'uniprot': 'String'}
2024-06-20 16:44:07,580 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/39045/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,580 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/39045/tables/defaultnode/columns/SUID)
2024-06-20 16:44:07,588 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[39171,39176,39181,39186,39191,39196,39201,39206,39211,39216,39221,39226,39231,39236,39241,39246,39251,39256,39261,39266,39271,39276,39281,39286,39291,39296,39301,39306,39311,39316,39321,39121,39126,39131,39136,39141,39146,39151,39156,39161,39166]}
2024-06-20 16:44:07,589 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [39171, 39176, 39181, 39186, 39191, 39196, 39201, 39206, 39211, 39216, 39221, 39226, 39231, 39236, 39241, 39246, 39251, 39256, 39261, 39266, 39271, 39276, 39281, 39286, 39291, 39296, 39301, 39306, 39311, 39316, 39321, 39121, 39126, 39131, 39136, 39141, 39146, 39151, 39156, 39161, 39166]}
2024-06-20 16:44:07,592 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/39045/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,592 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/39045/tables/defaultnode/columns/name)
2024-06-20 16:44:07,600 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"name","values":["group_GRIA1_GRIA3_GRIA2_GRIA4","group","group_GNAQ_GNA14_GNA11_GNA15","ATP2B2","GRIA4","GRIA3","GNA15","GNA14","GNA11","PLCB4","PLCB3","PLCB2","PDK1","PIP2","PRKCG","CA8","PLCB1","DAG","IP3R1","CACNA1A","GRIA1","GRM1","GNAQ","Ca2+","TRPC3","PI(3,4,5)P3","IP3","RYR3","HOMER3","Na+","GRIA2",null,null,null,null,null,null,null,null,"Ligands","group_PLCB1_PLCB4_PLCB3_PLCB2"]}
2024-06-20 16:44:07,600 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['group_GRIA1_GRIA3_GRIA2_GRIA4', 'group', 'group_GNAQ_GNA14_GNA11_GNA15', 'ATP2B2', 'GRIA4', 'GRIA3', 'GNA15', 'GNA14', 'GNA11', 'PLCB4', 'PLCB3', 'PLCB2', 'PDK1', 'PIP2', 'PRKCG', 'CA8', 'PLCB1', 'DAG', 'IP3R1', 'CACNA1A', 'GRIA1', 'GRM1', 'GNAQ', 'Ca2+', 'TRPC3', 'PI(3,4,5)P3', 'IP3', 'RYR3', 'HOMER3', 'Na+', 'GRIA2', None, None, None, None, None, None, None, None, 'Ligands', 'group_PLCB1_PLCB4_PLCB3_PLCB2']}
2024-06-20 16:44:07,603 [DEBUG] py4...: ǀǀReturning 'get_table_columns':                                 name
39171  group_GRIA1_GRIA3_GRIA2_GRIA4
39176                          group
39181   group_GNAQ_GNA14_GNA11_GNA15
39186                         ATP2B2
39191                          GRIA4
39196                          GRIA3
39201                          GNA15
39206                          GNA14
39211                          GNA11
39216                          PLCB4
39221                          PLCB3
39226                          PLCB2
39231                           PDK1
39236                           PIP2
39241                          PRKCG
39246                            CA8
39251                          PLCB1
39256                            DAG
39261                          IP3R1
39266                        CACNA1A
39271                          GRIA1
39276                           GRM1
39281                           GNAQ
39286                           Ca2+
39291                          TRPC3
39296                    PI(3,4,5)P3
39301                            IP3
39306                           RYR3
39311                         HOMER3
39316                            Na+
39321                          GRIA2
39121                           None
39126                           None
39131                           None
39136                           None
39141                           None
39146                           None
39151                           None
39156                           None
39161                        Ligands
39166  group_PLCB1_PLCB4_PLCB3_PLCB2
2024-06-20 16:44:07,604 [DEBUG] py4...: ǀReturning 'get_selected_nodes': ['PI(3,4,5)P3', 'group_GRIA1_GRIA3_GRIA2_GRIA4', 'PIP2', 'IP3', 'group', 'group_GNAQ_GNA14_GNA11_GNA15', None, 'Na+', None, 'DAG', None, 'IP3R1', None, None, None, None, None, 'Ca2+', 'Ligands', 'group_PLCB1_PLCB4_PLCB3_PLCB2']
2024-06-20 16:44:07,604 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,604 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,605 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,605 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:07,614 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 39045
}
],
 "errors":[]
}
2024-06-20 16:44:07,614 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 39045}]
2024-06-20 16:44:07,614 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 39045
2024-06-20 16:44:07,614 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(39045, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,614 [DEBUG] py4...: ǀǀǀCalling get_network_suid(39045, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,615 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,615 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,621 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,621 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,622 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 39045
2024-06-20 16:44:07,622 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/39045/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,622 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/39045/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:07,629 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:07,629 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:07,629 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:07,630 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:07,630 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': ['PI(3,4,5)P3', 'group_GRIA1_GRIA3_GRIA2_GRIA4', 'PIP2', 'IP3', 'group', 'group_GNAQ_GNA14_GNA11_GNA15', None, 'Na+', None, 'DAG', None, 'IP3R1', None, None, None, None, None, 'Ca2+', 'Ligands', 'group_PLCB1_PLCB4_PLCB3_PLCB2'], 'edges': None}
2024-06-20 16:44:07,631 [DEBUG] py4...: --------------------
2024-06-20 16:44:07,631 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:07,631 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,631 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,632 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:07,654 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:07,654 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:07,654 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:07,654 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,654 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,656 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,656 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:07,663 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:07,663 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:07,663 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:07,664 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,664 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:07,672 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:07,673 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:07,673 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:07,674 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,674 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:07,674 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,674 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,680 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,681 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,681 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:07,681 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,682 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:07,738 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:07,739 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:07,739 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:07,740 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,740 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:07,753 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:07,754 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:07,754 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,754 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,755 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:07,760 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:07,760 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:07,761 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:07,761 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,761 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,762 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,762 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,768 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,768 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,769 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:07,769 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,769 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,769 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,770 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,775 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,776 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,776 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:07,777 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,777 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:07,784 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:07,784 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:07,784 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:07,785 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:07,785 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,785 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,785 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,785 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,791 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,791 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,792 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:07,792 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,792 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,792 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,793 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:07,798 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:07,799 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:07,799 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:07,799 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,799 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:07,805 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:07,805 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:07,805 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:07,806 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:07,806 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:07,806 [DEBUG] py4...: --------------------
2024-06-20 16:44:07,806 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:07,807 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,807 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,807 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,807 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:07,813 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:07,814 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:07,814 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:07,814 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:07,814 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:07,815 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:07,827 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:07,828 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:07,828 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:44:07,828 [DEBUG] py4...: --------------------
2024-06-20 16:44:13,024 [DEBUG] py4...: Calling commands_run('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="Wikipathways WP4760 network uniprot" species="Homo sapiens"')
2024-06-20 16:44:13,024 [DEBUG] py4...: ǀCalling commands_get('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="Wikipathways WP4760 network uniprot" species="Homo sapiens"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:13,025 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/stringify), params: {'colDisplayName': 'name', 'column': 'uniprot', 'compoundQuery': 'false', 'includeNotMapped': 'false', 'networkNoGui': 'Wikipathways WP4760 network uniprot', 'species': 'Homo sapiens'}
2024-06-20 16:44:13,043 [DEBUG] py4...: ǀInternal Server Error[500], content: Failed: Cannot invoke "org.cytoscape.model.CyColumn.getValues(java.lang.Class)" because "col" is null
2024-06-20 16:44:13,044 [DEBUG] py4...: ǀ'commands_get' exception CyError('In commands_get(): Failed: Cannot invoke "org.cytoscape.model.CyColumn.getValues(java.lang.Class)" because "col" is null')
2024-06-20 16:44:13,044 [DEBUG] py4...: 'commands_run' exception CyError('In commands_get(): Failed: Cannot invoke "org.cytoscape.model.CyColumn.getValues(java.lang.Class)" because "col" is null')
2024-06-20 16:44:13,045 [DEBUG] py4...: --------------------
2024-06-20 16:44:19,737 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=0, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:19,738 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="0" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:19,738 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '0', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:44:19,750 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:44:19,751 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns')
2024-06-20 16:44:19,751 [DEBUG] py4...: 'load_table_data_from_file' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns')
2024-06-20 16:44:19,751 [DEBUG] py4...: --------------------
2024-06-20 16:44:24,886 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=1, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:24,886 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="1" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:24,887 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '1', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:44:24,931 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"mappedTables":[
  38429,
  38467
]},
 "errors":[]
}
2024-06-20 16:44:24,931 [DEBUG] py4...: ǀReturning 'commands_post': {'mappedTables': [38429, 38467]}
2024-06-20 16:44:24,933 [DEBUG] py4...: Returning 'load_table_data_from_file': {'mappedTables': [38429, 38467]}
2024-06-20 16:44:24,933 [DEBUG] py4...: --------------------
2024-06-20 16:44:27,323 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:27,324 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,324 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:27,325 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,325 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:27,332 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:27,333 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:27,333 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,334 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,334 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:27,343 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:27,343 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:27,344 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:27,344 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,345 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,345 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,345 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:27,354 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:27,355 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:27,355 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,355 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,356 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:27,362 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:27,363 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:27,363 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:27,363 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,363 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,364 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:27,369 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:27,369 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:27,369 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:27,370 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,370 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:27,395 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:27,395 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:27,395 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,395 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,395 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:27,402 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:27,403 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:27,403 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:27,403 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,404 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,404 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,404 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:27,413 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:27,414 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:27,414 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,414 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,414 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,415 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,415 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,422 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,423 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,423 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,423 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,423 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:27,429 [DEBUG] py4...: ǀǀǀOK[200], content: [38660,38663,38601,38604,38674,38616,38685,38688,38691,38694,38568,38697,38700,38703,38577,38706,38580,38709,38649,38586]
2024-06-20 16:44:27,430 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [38660, 38663, 38601, 38604, 38674, 38616, 38685, 38688, 38691, 38694, 38568, 38697, 38700, 38703, 38577, 38706, 38580, 38709, 38649, 38586]
2024-06-20 16:44:27,430 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 20
2024-06-20 16:44:27,430 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,430 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:27,435 [DEBUG] py4...: ǀǀOK[200], content: [38660,38663,38601,38604,38674,38616,38685,38688,38691,38694,38568,38697,38700,38703,38577,38706,38580,38709,38649,38586]
2024-06-20 16:44:27,436 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [38660, 38663, 38601, 38604, 38674, 38616, 38685, 38688, 38691, 38694, 38568, 38697, 38700, 38703, 38577, 38706, 38580, 38709, 38649, 38586]
2024-06-20 16:44:27,436 [DEBUG] py4...: ǀǀCalling get_table_columns('node', ['name'], 'default', 38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,436 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, 'http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,436 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,437 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,441 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,442 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,442 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,442 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,443 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,443 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,443 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,448 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,448 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,449 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,449 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,449 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:27,454 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:27,455 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:27,455 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'ChEBI': 'String', 'uniprot': 'String'}
2024-06-20 16:44:27,455 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,456 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns/SUID)
2024-06-20 16:44:27,461 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[38660,38663,38674,38685,38688,38691,38694,38697,38700,38703,38706,38709,38565,38568,38571,38574,38577,38580,38583,38586,38589,38592,38595,38598,38601,38604,38607,38610,38613,38616,38619,38622,38625,38628,38631,38634,38637,38640,38643,38646,38649]}
2024-06-20 16:44:27,461 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [38660, 38663, 38674, 38685, 38688, 38691, 38694, 38697, 38700, 38703, 38706, 38709, 38565, 38568, 38571, 38574, 38577, 38580, 38583, 38586, 38589, 38592, 38595, 38598, 38601, 38604, 38607, 38610, 38613, 38616, 38619, 38622, 38625, 38628, 38631, 38634, 38637, 38640, 38643, 38646, 38649]}
2024-06-20 16:44:27,462 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,462 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns/name)
2024-06-20 16:44:27,469 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"name","values":["group","group_GRIA1_GRIA3_GRIA2_GRIA4","group_PLCB1_PLCB4_PLCB3_PLCB2","Ligands",null,null,null,null,null,null,null,null,"GRIA2","Na+","HOMER3","RYR3","IP3","PI(3,4,5)P3","TRPC3","Ca2+","GNAQ","GRM1","GRIA1","CACNA1A","IP3R1","DAG","PLCB1","CA8","PRKCG","PIP2","PDK1","PLCB2","PLCB3","PLCB4","GNA11","GNA14","GNA15","GRIA3","GRIA4","ATP2B2","group_GNAQ_GNA14_GNA11_GNA15"]}
2024-06-20 16:44:27,469 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['group', 'group_GRIA1_GRIA3_GRIA2_GRIA4', 'group_PLCB1_PLCB4_PLCB3_PLCB2', 'Ligands', None, None, None, None, None, None, None, None, 'GRIA2', 'Na+', 'HOMER3', 'RYR3', 'IP3', 'PI(3,4,5)P3', 'TRPC3', 'Ca2+', 'GNAQ', 'GRM1', 'GRIA1', 'CACNA1A', 'IP3R1', 'DAG', 'PLCB1', 'CA8', 'PRKCG', 'PIP2', 'PDK1', 'PLCB2', 'PLCB3', 'PLCB4', 'GNA11', 'GNA14', 'GNA15', 'GRIA3', 'GRIA4', 'ATP2B2', 'group_GNAQ_GNA14_GNA11_GNA15']}
2024-06-20 16:44:27,471 [DEBUG] py4...: ǀǀReturning 'get_table_columns':                                 name
38660                          group
38663  group_GRIA1_GRIA3_GRIA2_GRIA4
38674  group_PLCB1_PLCB4_PLCB3_PLCB2
38685                        Ligands
38688                           None
38691                           None
38694                           None
38697                           None
38700                           None
38703                           None
38706                           None
38709                           None
38565                          GRIA2
38568                            Na+
38571                         HOMER3
38574                           RYR3
38577                            IP3
38580                    PI(3,4,5)P3
38583                          TRPC3
38586                           Ca2+
38589                           GNAQ
38592                           GRM1
38595                          GRIA1
38598                        CACNA1A
38601                          IP3R1
38604                            DAG
38607                          PLCB1
38610                            CA8
38613                          PRKCG
38616                           PIP2
38619                           PDK1
38622                          PLCB2
38625                          PLCB3
38628                          PLCB4
38631                          GNA11
38634                          GNA14
38637                          GNA15
38640                          GRIA3
38643                          GRIA4
38646                         ATP2B2
38649   group_GNAQ_GNA14_GNA11_GNA15
2024-06-20 16:44:27,471 [DEBUG] py4...: ǀReturning 'get_selected_nodes': ['group', 'group_GRIA1_GRIA3_GRIA2_GRIA4', 'IP3R1', 'DAG', 'group_PLCB1_PLCB4_PLCB3_PLCB2', 'PIP2', 'Ligands', None, None, None, 'Na+', None, None, None, 'IP3', None, 'PI(3,4,5)P3', None, 'group_GNAQ_GNA14_GNA11_GNA15', 'Ca2+']
2024-06-20 16:44:27,471 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,472 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,472 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,472 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:27,480 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:27,481 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:27,481 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,481 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,481 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,482 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,482 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,486 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,487 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,487 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,487 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,488 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:27,493 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:27,494 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:27,494 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:27,494 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:27,495 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': ['group', 'group_GRIA1_GRIA3_GRIA2_GRIA4', 'IP3R1', 'DAG', 'group_PLCB1_PLCB4_PLCB3_PLCB2', 'PIP2', 'Ligands', None, None, None, 'Na+', None, None, None, 'IP3', None, 'PI(3,4,5)P3', None, 'group_GNAQ_GNA14_GNA11_GNA15', 'Ca2+'], 'edges': None}
2024-06-20 16:44:27,495 [DEBUG] py4...: --------------------
2024-06-20 16:44:27,495 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:27,496 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,496 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,496 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:27,503 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:27,503 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:27,504 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:27,504 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,504 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,505 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,505 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:27,512 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:27,512 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:27,513 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:27,513 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,513 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:27,519 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:27,519 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:27,519 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,520 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,520 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:27,520 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,520 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,526 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,526 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,527 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,527 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,527 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:27,533 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:27,533 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:27,534 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:27,534 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,534 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:27,546 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:27,547 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:27,547 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,547 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,547 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:27,554 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:27,554 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:27,555 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:27,555 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,556 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,556 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,556 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,563 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,564 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,564 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,564 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,564 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,565 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,565 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,571 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,572 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,572 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,572 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,573 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:27,578 [DEBUG] py4...: ǀǀǀOK[200], content: [38660,38663,38601,38604,38674,38616,38685,38688,38691,38694,38568,38697,38700,38703,38577,38706,38580,38709,38649,38586]
2024-06-20 16:44:27,578 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [38660, 38663, 38601, 38604, 38674, 38616, 38685, 38688, 38691, 38694, 38568, 38697, 38700, 38703, 38577, 38706, 38580, 38709, 38649, 38586]
2024-06-20 16:44:27,579 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 20
2024-06-20 16:44:27,579 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,579 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:27,584 [DEBUG] py4...: ǀǀOK[200], content: [38660,38663,38601,38604,38674,38616,38685,38688,38691,38694,38568,38697,38700,38703,38577,38706,38580,38709,38649,38586]
2024-06-20 16:44:27,585 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [38660, 38663, 38601, 38604, 38674, 38616, 38685, 38688, 38691, 38694, 38568, 38697, 38700, 38703, 38577, 38706, 38580, 38709, 38649, 38586]
2024-06-20 16:44:27,585 [DEBUG] py4...: ǀǀCalling get_table_columns('node', ['name'], 'default', 38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,585 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, 'http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,585 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,586 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,591 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,592 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,592 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,592 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,592 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,593 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,593 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,598 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,598 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,598 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,599 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,599 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:27,603 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:27,604 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:27,604 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'ChEBI': 'String', 'uniprot': 'String'}
2024-06-20 16:44:27,604 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,605 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns/SUID)
2024-06-20 16:44:27,610 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[38660,38663,38674,38685,38688,38691,38694,38697,38700,38703,38706,38709,38565,38568,38571,38574,38577,38580,38583,38586,38589,38592,38595,38598,38601,38604,38607,38610,38613,38616,38619,38622,38625,38628,38631,38634,38637,38640,38643,38646,38649]}
2024-06-20 16:44:27,610 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [38660, 38663, 38674, 38685, 38688, 38691, 38694, 38697, 38700, 38703, 38706, 38709, 38565, 38568, 38571, 38574, 38577, 38580, 38583, 38586, 38589, 38592, 38595, 38598, 38601, 38604, 38607, 38610, 38613, 38616, 38619, 38622, 38625, 38628, 38631, 38634, 38637, 38640, 38643, 38646, 38649]}
2024-06-20 16:44:27,611 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,611 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns/name)
2024-06-20 16:44:27,616 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"name","values":["group","group_GRIA1_GRIA3_GRIA2_GRIA4","group_PLCB1_PLCB4_PLCB3_PLCB2","Ligands",null,null,null,null,null,null,null,null,"GRIA2","Na+","HOMER3","RYR3","IP3","PI(3,4,5)P3","TRPC3","Ca2+","GNAQ","GRM1","GRIA1","CACNA1A","IP3R1","DAG","PLCB1","CA8","PRKCG","PIP2","PDK1","PLCB2","PLCB3","PLCB4","GNA11","GNA14","GNA15","GRIA3","GRIA4","ATP2B2","group_GNAQ_GNA14_GNA11_GNA15"]}
2024-06-20 16:44:27,617 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['group', 'group_GRIA1_GRIA3_GRIA2_GRIA4', 'group_PLCB1_PLCB4_PLCB3_PLCB2', 'Ligands', None, None, None, None, None, None, None, None, 'GRIA2', 'Na+', 'HOMER3', 'RYR3', 'IP3', 'PI(3,4,5)P3', 'TRPC3', 'Ca2+', 'GNAQ', 'GRM1', 'GRIA1', 'CACNA1A', 'IP3R1', 'DAG', 'PLCB1', 'CA8', 'PRKCG', 'PIP2', 'PDK1', 'PLCB2', 'PLCB3', 'PLCB4', 'GNA11', 'GNA14', 'GNA15', 'GRIA3', 'GRIA4', 'ATP2B2', 'group_GNAQ_GNA14_GNA11_GNA15']}
2024-06-20 16:44:27,618 [DEBUG] py4...: ǀǀReturning 'get_table_columns':                                 name
38660                          group
38663  group_GRIA1_GRIA3_GRIA2_GRIA4
38674  group_PLCB1_PLCB4_PLCB3_PLCB2
38685                        Ligands
38688                           None
38691                           None
38694                           None
38697                           None
38700                           None
38703                           None
38706                           None
38709                           None
38565                          GRIA2
38568                            Na+
38571                         HOMER3
38574                           RYR3
38577                            IP3
38580                    PI(3,4,5)P3
38583                          TRPC3
38586                           Ca2+
38589                           GNAQ
38592                           GRM1
38595                          GRIA1
38598                        CACNA1A
38601                          IP3R1
38604                            DAG
38607                          PLCB1
38610                            CA8
38613                          PRKCG
38616                           PIP2
38619                           PDK1
38622                          PLCB2
38625                          PLCB3
38628                          PLCB4
38631                          GNA11
38634                          GNA14
38637                          GNA15
38640                          GRIA3
38643                          GRIA4
38646                         ATP2B2
38649   group_GNAQ_GNA14_GNA11_GNA15
2024-06-20 16:44:27,619 [DEBUG] py4...: ǀReturning 'get_selected_nodes': ['group', 'group_GRIA1_GRIA3_GRIA2_GRIA4', 'IP3R1', 'DAG', 'group_PLCB1_PLCB4_PLCB3_PLCB2', 'PIP2', 'Ligands', None, None, None, 'Na+', None, None, None, 'IP3', None, 'PI(3,4,5)P3', None, 'group_GNAQ_GNA14_GNA11_GNA15', 'Ca2+']
2024-06-20 16:44:27,619 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,619 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,619 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,620 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,624 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,625 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,625 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,625 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,625 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,626 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,626 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:27,631 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:27,632 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:27,632 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:27,632 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,632 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:27,638 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:27,638 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:27,638 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:27,639 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:27,639 [DEBUG] py4...: Returning 'apply_filter': {'nodes': ['group', 'group_GRIA1_GRIA3_GRIA2_GRIA4', 'IP3R1', 'DAG', 'group_PLCB1_PLCB4_PLCB3_PLCB2', 'PIP2', 'Ligands', None, None, None, 'Na+', None, None, None, 'IP3', None, 'PI(3,4,5)P3', None, 'group_GNAQ_GNA14_GNA11_GNA15', 'Ca2+'], 'edges': None}
2024-06-20 16:44:27,639 [DEBUG] py4...: --------------------
2024-06-20 16:44:27,639 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:27,639 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,640 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,640 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,640 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:27,644 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:27,645 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:27,645 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:27,645 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:27,645 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:27,646 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:27,670 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"nodes":[
  38660,
  38703,
  38663,
  38674,
  38568,
  38694,
  38604,
  38691,
  38709,
  38586,
  38616,
  38685,
  38706,
  38577,
  38601,
  38697,
  38580,
  38700,
  38649,
  38688
], "edges":[
  38769,
  38772,
  38775,
  38712,
  38778,
  38715,
  38651,
  38781,
  38653,
  38655,
  38784,
  38657,
  38787,
  38724,
  38790,
  38727,
  38665,
  38793,
  38730,
  38667,
  38796,
  38669,
  38733,
  38671,
  38799,
  38736,
  38802,
  38739,
  38676,
  38805,
  38678,
  38742,
  38808,
  38680,
  38745,
  38682,
  38748,
  38751,
  38754,
  38757,
  38760,
  38763,
  38766
]},
 "errors":[]
}
2024-06-20 16:44:27,672 [DEBUG] py4...: ǀReturning 'commands_post': {'nodes': [38660, 38703, 38663, 38674, 38568, 38694, 38604, 38691, 38709, 38586, 38616, 38685, 38706, 38577, 38601, 38697, 38580, 38700, 38649, 38688], 'edges': [38769, 38772, 38775, 38712, 38778, 38715, 38651, 38781, 38653, 38655, 38784, 38657, 38787, 38724, 38790, 38727, 38665, 38793, 38730, 38667, 38796, 38669, 38733, 38671, 38799, 38736, 38802, 38739, 38676, 38805, 38678, 38742, 38808, 38680, 38745, 38682, 38748, 38751, 38754, 38757, 38760, 38763, 38766]}
2024-06-20 16:44:27,673 [DEBUG] py4...: Returning 'delete_selected_nodes': {'nodes': [38660, 38703, 38663, 38674, 38568, 38694, 38604, 38691, 38709, 38586, 38616, 38685, 38706, 38577, 38601, 38697, 38580, 38700, 38649, 38688], 'edges': [38769, 38772, 38775, 38712, 38778, 38715, 38651, 38781, 38653, 38655, 38784, 38657, 38787, 38724, 38790, 38727, 38665, 38793, 38730, 38667, 38796, 38669, 38733, 38671, 38799, 38736, 38802, 38739, 38676, 38805, 38678, 38742, 38808, 38680, 38745, 38682, 38748, 38751, 38754, 38757, 38760, 38763, 38766]}
2024-06-20 16:44:27,673 [DEBUG] py4...: --------------------
2024-06-20 16:44:37,077 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:37,078 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,078 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:37,078 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,079 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:37,087 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:37,087 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:37,088 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,088 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,088 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:37,097 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:37,098 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:37,098 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:37,098 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,099 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,099 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,099 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:37,109 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:37,109 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:37,111 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,111 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,112 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:37,117 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:37,118 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:37,118 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:37,119 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,119 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,119 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:37,124 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:37,125 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:37,125 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:37,125 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,125 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:37,149 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:37,149 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:37,150 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,150 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,150 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:37,158 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:37,159 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:37,159 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:37,159 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,160 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,160 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,160 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:37,171 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:37,171 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:37,172 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,172 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,172 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,173 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,173 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:37,180 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:37,180 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:37,181 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,181 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,181 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:37,188 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:37,189 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:37,189 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:37,189 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:37,190 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,190 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,190 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,191 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:37,197 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:37,197 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:37,197 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,198 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,198 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,198 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,198 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:37,204 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:37,205 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:37,205 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,205 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,205 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:37,211 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:37,211 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:37,212 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:37,212 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:37,212 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:37,212 [DEBUG] py4...: --------------------
2024-06-20 16:44:37,213 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:37,213 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,213 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,213 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:37,220 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:37,220 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:37,221 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:37,221 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,221 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,221 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,222 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:37,227 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:37,227 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:37,227 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:37,228 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,228 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:37,235 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:37,235 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:37,235 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,236 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,236 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:37,236 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,236 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:37,244 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:37,245 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:37,245 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,246 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,246 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:37,254 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:37,254 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:37,254 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:37,255 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,255 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:37,265 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:37,266 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:37,266 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,267 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,267 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:37,273 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:37,274 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:37,274 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:37,275 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,275 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,275 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,275 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:37,280 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:37,281 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:37,281 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,281 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,281 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,281 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,281 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:37,286 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:37,286 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:37,286 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,286 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,286 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:37,292 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:37,293 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:37,293 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:37,293 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:37,293 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,294 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,294 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,294 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:37,299 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:37,299 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:37,300 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,300 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,300 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,300 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,300 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:37,306 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:37,306 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:37,306 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:37,307 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,307 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:37,312 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:37,312 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:37,313 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:37,313 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:37,313 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:37,313 [DEBUG] py4...: --------------------
2024-06-20 16:44:37,313 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:37,314 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,314 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,314 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,314 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:37,319 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:37,320 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:37,320 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:37,320 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:37,320 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:37,321 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:37,328 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:37,328 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:37,328 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:44:37,328 [DEBUG] py4...: --------------------
2024-06-20 16:44:42,697 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=1, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:42,698 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="1" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:42,698 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '1', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:44:42,736 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"mappedTables":[
  38429,
  38467
]},
 "errors":[]
}
2024-06-20 16:44:42,737 [DEBUG] py4...: ǀReturning 'commands_post': {'mappedTables': [38429, 38467]}
2024-06-20 16:44:42,737 [DEBUG] py4...: Returning 'load_table_data_from_file': {'mappedTables': [38429, 38467]}
2024-06-20 16:44:42,737 [DEBUG] py4...: --------------------
2024-06-20 16:44:43,858 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:43,859 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,859 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:43,859 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,860 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:43,867 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:43,868 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:43,868 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:43,869 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,869 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:43,877 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:43,878 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:43,878 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:43,879 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,879 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,879 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,880 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:43,888 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:43,889 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:43,889 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:43,889 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,891 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:43,897 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:43,898 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:43,898 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:43,898 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,898 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,898 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:43,904 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:43,904 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:43,904 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:43,904 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,905 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:43,927 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:43,927 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:43,927 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,927 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,928 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:43,933 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:43,934 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:43,934 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:43,935 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,935 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,935 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,935 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:43,941 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:43,942 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:43,942 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:43,943 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,943 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,943 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,944 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:43,949 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:43,950 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:43,950 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:43,950 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,950 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:43,955 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:43,955 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:43,955 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:43,956 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:43,956 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,956 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,956 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,957 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:43,964 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:43,964 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:43,965 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:43,965 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,965 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,965 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,965 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:43,971 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:43,971 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:43,971 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:43,972 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,972 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:43,977 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:43,978 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:43,978 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:43,978 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:43,979 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:43,979 [DEBUG] py4...: --------------------
2024-06-20 16:44:43,979 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:43,979 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,979 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,980 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:43,985 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:43,986 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:43,986 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:43,986 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,986 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,987 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,987 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:43,992 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:43,992 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:43,993 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:43,993 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:43,993 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:44,000 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:44,002 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:44,002 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:44,002 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,003 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:44,003 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,003 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:44,009 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:44,009 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:44,009 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:44,009 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,010 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:44,015 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:44,016 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:44,016 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:44,016 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,016 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:44,024 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:44,024 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:44,026 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,026 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,026 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:44,032 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:44,032 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:44,033 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:44,033 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,033 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,033 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,033 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:44,038 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:44,039 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:44,039 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:44,039 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,039 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,039 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,041 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:44,046 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:44,047 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:44,047 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:44,047 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,047 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:44,052 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:44,052 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:44,052 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:44,053 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:44,053 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,053 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,053 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,053 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:44,059 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:44,059 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:44,059 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:44,060 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,060 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,060 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,060 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:44,065 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:44,065 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:44,066 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:44,066 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,066 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:44,071 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:44,072 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:44,072 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:44,072 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:44,072 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:44,073 [DEBUG] py4...: --------------------
2024-06-20 16:44:44,073 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:44,073 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,073 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,074 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,074 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:44,079 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:44,079 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:44,079 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:44,080 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:44,080 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:44,080 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:44,087 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:44,087 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:44,088 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:44:44,088 [DEBUG] py4...: --------------------
2024-06-20 16:44:47,512 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=0, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:47,513 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="0" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:47,513 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '0', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:44:47,522 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:44:47,523 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns')
2024-06-20 16:44:47,523 [DEBUG] py4...: 'load_table_data_from_file' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns')
2024-06-20 16:44:47,523 [DEBUG] py4...: --------------------
2024-06-20 16:44:54,532 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=1, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:54,532 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="1" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:54,532 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '1', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:44:54,575 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"mappedTables":[
  38429,
  38467
]},
 "errors":[]
}
2024-06-20 16:44:54,575 [DEBUG] py4...: ǀReturning 'commands_post': {'mappedTables': [38429, 38467]}
2024-06-20 16:44:54,576 [DEBUG] py4...: Returning 'load_table_data_from_file': {'mappedTables': [38429, 38467]}
2024-06-20 16:44:54,576 [DEBUG] py4...: --------------------
2024-06-20 16:44:55,767 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:55,768 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,768 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:55,768 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,768 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:55,775 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:55,775 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:55,775 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,776 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,777 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:55,785 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:55,786 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:55,786 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:55,787 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,787 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,788 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,788 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:55,796 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:55,797 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:55,798 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,798 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,798 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:55,804 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:55,805 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:55,805 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:55,805 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,806 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,806 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:55,813 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:55,813 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:55,814 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:55,814 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,814 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:55,846 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:55,846 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:55,847 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,847 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,847 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:55,852 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:55,852 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:55,852 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:55,853 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,853 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,853 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,853 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:55,861 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:55,861 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:55,861 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,862 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,862 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,862 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,862 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:55,868 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:55,868 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:55,869 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,869 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,869 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:55,874 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:55,874 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:55,875 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:55,875 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:55,875 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,876 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,876 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,876 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:55,882 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:55,883 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:55,883 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,883 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,884 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,884 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,884 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:55,890 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:55,891 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:55,891 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,891 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,891 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:55,897 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:55,897 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:55,898 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:55,898 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:55,898 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:55,898 [DEBUG] py4...: --------------------
2024-06-20 16:44:55,898 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:55,898 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,899 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,899 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:55,905 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:55,905 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:55,906 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:55,906 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,906 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,906 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,906 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:55,912 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:55,912 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:55,912 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:55,913 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,913 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:55,920 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:55,920 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:55,921 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,921 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,921 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:55,921 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,921 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:55,927 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:55,928 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:55,928 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,928 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,928 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:55,936 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:55,936 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:55,937 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:55,937 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,937 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:55,949 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:55,950 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:55,950 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,950 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,950 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:55,957 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:55,958 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:55,958 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:55,958 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,959 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,959 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,959 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:55,964 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:55,965 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:55,965 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,965 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,965 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,966 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,966 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:55,971 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:55,972 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:55,972 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,972 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,973 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:55,977 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:55,978 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:55,978 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:55,978 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:55,979 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,979 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,979 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,979 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:55,984 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:55,984 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:55,985 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,985 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,985 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,985 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,985 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:55,990 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:55,991 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:55,991 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:55,991 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,991 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:55,996 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:55,997 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:55,997 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:55,997 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:55,997 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:55,997 [DEBUG] py4...: --------------------
2024-06-20 16:44:55,997 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:55,998 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,998 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,998 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:55,998 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:56,004 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:56,004 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:56,004 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:56,004 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:56,005 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:56,005 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:56,010 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:56,011 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:56,011 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:44:56,011 [DEBUG] py4...: --------------------
2024-06-20 16:44:57,058 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:57,059 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,059 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:57,059 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,060 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,066 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,066 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,068 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,068 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,068 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:57,076 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,076 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:57,077 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:57,077 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,078 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,078 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,078 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,086 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,086 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,087 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,087 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,088 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:57,093 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:57,094 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:57,094 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:57,094 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,094 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,095 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:57,100 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:57,101 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:57,101 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:57,101 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,101 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:57,152 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,152 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:57,153 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,153 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,153 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:57,158 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:57,159 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:57,159 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:57,160 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,160 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,160 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,161 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,168 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,169 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,169 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,169 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,170 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,170 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,170 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,176 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,177 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,178 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,178 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,178 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:57,184 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:57,184 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:57,185 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:57,185 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:57,185 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,186 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,186 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,186 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,193 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,194 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,194 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,194 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,194 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,195 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,195 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,201 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,202 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,202 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,202 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,202 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:57,209 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:57,209 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:57,210 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:57,210 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:57,210 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:57,210 [DEBUG] py4...: --------------------
2024-06-20 16:44:57,211 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:57,211 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,211 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,211 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:57,218 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:57,218 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:57,218 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:57,219 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,219 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,239 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,240 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:57,247 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:57,247 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:57,247 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:57,247 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,247 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,253 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,254 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,254 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,254 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,254 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:57,254 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,255 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,260 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,261 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,261 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,262 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,262 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:57,268 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,268 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:57,268 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:57,269 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,269 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:57,277 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,278 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:57,278 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,278 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,278 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:57,283 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:57,283 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:57,283 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:57,283 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,285 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,285 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,285 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,289 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,289 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,289 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,290 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,290 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,290 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,290 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,296 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,296 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,296 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,296 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,296 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:57,300 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:57,301 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:57,301 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:57,301 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:57,301 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,302 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,302 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,302 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,309 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,309 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,309 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,309 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,310 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,310 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,310 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,315 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,315 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,315 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,315 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,315 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:57,322 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:57,322 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:57,322 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:57,322 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:57,323 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:57,323 [DEBUG] py4...: --------------------
2024-06-20 16:44:57,324 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:57,324 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,324 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,324 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,324 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:57,330 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:57,330 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:57,330 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:57,331 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:57,331 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,331 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:57,337 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,338 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:57,338 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:44:57,338 [DEBUG] py4...: --------------------
2024-06-20 16:44:57,738 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:57,739 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,740 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:57,740 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,740 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,747 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,748 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,748 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,748 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,749 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:57,758 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,759 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:57,759 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:57,760 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,760 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,761 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,761 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,771 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,772 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,772 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,772 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,773 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:57,780 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:57,781 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:57,781 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:57,782 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,782 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,783 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:57,788 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:57,788 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:57,788 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:57,790 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,790 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:57,820 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,821 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:57,821 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,822 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,822 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:57,828 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:57,828 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:57,828 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:57,829 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,829 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,829 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,829 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,838 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,838 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,839 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,839 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,839 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,839 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,840 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,846 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,847 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,847 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,847 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,847 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:57,854 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:57,854 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:57,855 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:57,855 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:57,855 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,856 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,856 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,856 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,864 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,864 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,865 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,865 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,865 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,865 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,865 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,872 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,872 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,873 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,873 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,874 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:57,879 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:57,879 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:57,879 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:57,879 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:57,880 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:57,880 [DEBUG] py4...: --------------------
2024-06-20 16:44:57,880 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:57,880 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,881 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,881 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:57,887 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:57,888 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:57,888 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:57,888 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,888 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,889 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,889 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:57,894 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:57,895 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:57,895 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:57,895 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,895 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:57,903 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:57,904 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:57,904 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,904 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,905 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:57,905 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,906 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,912 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,913 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,913 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,913 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,913 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:57,921 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,922 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:57,922 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:57,922 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,923 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:57,932 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,932 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:57,933 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,933 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,933 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:57,939 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:57,939 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:57,939 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:57,939 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,940 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,940 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,940 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,944 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,945 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,945 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,945 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,946 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,946 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,946 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,951 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,951 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,951 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,952 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,952 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:57,956 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:57,956 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:57,957 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:57,957 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:57,957 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,957 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,958 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,958 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,962 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,962 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,962 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,963 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,963 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,963 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,963 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:57,967 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:57,967 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:57,968 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:57,968 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,968 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:57,972 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:57,972 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:57,972 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:57,973 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:57,973 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:57,973 [DEBUG] py4...: --------------------
2024-06-20 16:44:57,973 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:57,973 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,974 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,974 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,974 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:57,979 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:57,980 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:57,980 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:57,980 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:57,980 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:57,981 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:57,985 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:57,986 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:57,986 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:44:57,986 [DEBUG] py4...: --------------------
2024-06-20 16:44:58,711 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:58,712 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,712 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:58,713 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,713 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:58,721 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:58,722 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:58,722 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,722 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,722 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:58,732 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:58,733 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:58,733 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:58,733 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,734 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,734 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,735 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:58,743 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:58,743 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:58,744 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,744 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,744 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:58,750 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:58,751 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:58,751 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:58,752 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,752 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,752 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:58,757 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:58,758 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:58,758 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:58,758 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,759 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:58,797 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:58,798 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:58,798 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,799 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,799 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:58,805 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:58,806 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:58,806 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:58,806 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,807 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,807 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,807 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:58,815 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:58,816 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:58,816 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,816 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,817 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,817 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,817 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:58,823 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:58,823 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:58,825 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,825 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,825 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:58,831 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:58,832 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:58,832 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:58,833 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:58,834 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,834 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,834 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,835 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:58,843 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:58,843 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:58,844 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,844 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,845 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,845 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,845 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:58,852 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:58,852 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:58,852 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,853 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,853 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:58,859 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:58,859 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:58,860 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:58,860 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:58,860 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:58,861 [DEBUG] py4...: --------------------
2024-06-20 16:44:58,861 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:58,861 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,862 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,862 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:58,868 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:58,869 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:58,869 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:58,869 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,870 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,870 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,870 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:58,876 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:58,877 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:58,877 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:58,877 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,878 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:58,887 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:58,888 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:58,888 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,888 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,889 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:58,889 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,890 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:58,897 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:58,897 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:58,898 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,898 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,898 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:58,908 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:58,908 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:58,909 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:58,909 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,909 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:58,919 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:58,919 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:58,920 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,920 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,920 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:58,928 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:58,929 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:58,929 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:58,930 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,930 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,930 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,931 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:58,937 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:58,938 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:58,938 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,938 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,938 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,939 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,939 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:58,945 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:58,945 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:58,946 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,946 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,946 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:58,953 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:58,954 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:58,954 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:58,954 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:58,954 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,955 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,955 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,955 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:58,961 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:58,961 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:58,962 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,962 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,962 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,963 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,963 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:58,968 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:58,968 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:58,969 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:58,969 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,969 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:58,975 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:58,976 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:58,976 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:58,976 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:58,976 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:58,976 [DEBUG] py4...: --------------------
2024-06-20 16:44:58,976 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:58,977 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,977 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,977 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,977 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:58,983 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:58,984 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:58,984 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:58,984 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:58,984 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:58,985 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:58,990 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:58,991 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:58,991 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:44:58,991 [DEBUG] py4...: --------------------
2024-06-20 16:44:59,369 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:59,370 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,370 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:59,370 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,370 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,377 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,378 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,378 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,379 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,379 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:59,387 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:59,388 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:59,389 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:59,389 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,389 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,389 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,390 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,399 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,400 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,400 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,400 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,400 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:59,407 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:59,407 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:59,408 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:59,408 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,408 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,409 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:59,413 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:59,414 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:59,414 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:59,414 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,414 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:59,440 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:59,441 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:59,441 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,441 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,442 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:59,447 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:59,447 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:59,447 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:59,448 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,448 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,448 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,448 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,455 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,456 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,456 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,456 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,456 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,456 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,456 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:59,461 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:59,462 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:59,462 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,463 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,463 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:59,468 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:59,468 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:59,469 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:59,469 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:59,470 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,470 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,470 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,471 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,476 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,477 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,477 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,477 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,477 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,477 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,478 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:59,482 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:59,483 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:59,483 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,483 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,484 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:59,489 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:59,490 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:59,490 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:59,490 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:59,490 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:59,490 [DEBUG] py4...: --------------------
2024-06-20 16:44:59,490 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:44:59,490 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,492 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,492 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:44:59,499 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:44:59,499 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:59,499 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:44:59,499 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,500 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,500 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,500 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:59,505 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:59,505 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:59,506 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:59,506 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,506 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,513 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,513 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,514 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,514 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,514 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:44:59,514 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,515 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:59,520 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:59,521 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:59,521 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,521 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,521 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:59,528 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:59,528 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:59,529 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:59,529 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,530 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:44:59,539 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:59,539 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:59,539 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,540 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,540 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:59,546 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:59,547 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:59,547 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:59,547 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,548 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,548 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,548 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:59,553 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:59,553 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:59,554 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,554 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,554 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,554 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,554 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:59,559 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:59,560 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:59,560 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,560 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,560 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:59,565 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:59,566 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:59,566 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:59,566 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:59,566 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,566 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,566 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,567 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:59,571 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:59,571 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:59,572 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,572 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,572 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,572 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,572 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:59,576 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:59,577 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:59,577 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,577 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,577 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:59,582 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:59,582 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:59,582 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:44:59,582 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:44:59,582 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:44:59,582 [DEBUG] py4...: --------------------
2024-06-20 16:44:59,583 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:44:59,583 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,583 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,583 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,583 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:44:59,588 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:44:59,588 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:44:59,588 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:44:59,588 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:44:59,589 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,589 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:44:59,594 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:59,595 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:44:59,595 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:44:59,595 [DEBUG] py4...: --------------------
2024-06-20 16:44:59,880 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:44:59,880 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,881 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:44:59,881 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,881 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,888 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,889 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,889 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,889 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,891 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:44:59,897 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:59,899 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:44:59,900 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:44:59,900 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,901 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,901 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,901 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,909 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,909 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,909 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,911 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,911 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:44:59,917 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:44:59,918 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:44:59,918 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:44:59,918 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,919 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,919 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:59,924 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:59,924 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:59,925 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:59,925 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,925 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:44:59,953 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:44:59,953 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:44:59,954 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,954 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,954 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:44:59,958 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:44:59,959 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:44:59,959 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:44:59,959 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,960 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,960 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,960 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,968 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,969 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,969 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,969 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,969 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,970 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,970 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:44:59,976 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:44:59,976 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:44:59,977 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,977 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,977 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:44:59,983 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:44:59,984 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:44:59,984 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:44:59,984 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:44:59,984 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,985 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,985 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,985 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:44:59,993 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:44:59,994 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:44:59,994 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:44:59,994 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,994 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,995 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:44:59,995 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,001 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,001 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,001 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,002 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,002 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,007 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,007 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,007 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:00,007 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:00,007 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:00,008 [DEBUG] py4...: --------------------
2024-06-20 16:45:00,008 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:00,008 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,008 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,009 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:00,016 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:00,016 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:00,016 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:00,017 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,017 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,017 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,017 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:00,022 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:00,023 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:00,023 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:00,024 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,024 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,031 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,031 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,032 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,032 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,032 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:45:00,032 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,032 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,039 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,039 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,039 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,040 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,040 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:00,048 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,048 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:00,048 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:00,048 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,049 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:45:00,059 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,059 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:00,060 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,060 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,060 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:00,066 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:00,066 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:00,066 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:00,067 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,067 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,067 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,067 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,072 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,073 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,073 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,074 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,074 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,074 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,075 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,080 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,081 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,081 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,081 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,081 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,088 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,089 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,089 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:00,089 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:00,089 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,089 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,090 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,090 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,095 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,095 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,095 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,096 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,096 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,096 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,096 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,101 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,102 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,102 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,102 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,103 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,108 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,108 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,109 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:00,109 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:00,109 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:00,110 [DEBUG] py4...: --------------------
2024-06-20 16:45:00,110 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:00,110 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,110 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,111 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,111 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:00,117 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:00,118 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:00,118 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:00,118 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:00,118 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,119 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:00,124 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,124 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:00,124 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:45:00,125 [DEBUG] py4...: --------------------
2024-06-20 16:45:00,334 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:45:00,334 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,335 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:45:00,336 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,336 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,344 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,345 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,345 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,346 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,347 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:00,354 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,354 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:00,355 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:00,355 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,355 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,355 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,356 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,364 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,365 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,366 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,366 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,366 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:45:00,373 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:00,374 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:00,374 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:45:00,375 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,375 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,375 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:00,379 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:00,380 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:00,380 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:00,380 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,380 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:45:00,420 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,421 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:45:00,421 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,421 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,421 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:00,429 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:00,430 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:00,430 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:00,431 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,431 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,431 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,432 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,440 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,441 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,441 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,441 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,443 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,443 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,444 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,449 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,450 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,450 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,450 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,451 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,456 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,456 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,457 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:00,457 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:00,457 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,457 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,458 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,458 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,466 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,467 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,467 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,467 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,468 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,468 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,468 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,475 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,476 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,476 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,476 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,477 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,483 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,483 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,483 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:00,484 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:00,484 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:00,484 [DEBUG] py4...: --------------------
2024-06-20 16:45:00,484 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:00,484 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,485 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,485 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:00,491 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:00,492 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:00,492 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:00,492 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,493 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,493 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,493 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:00,498 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:00,498 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:00,499 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:00,499 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,499 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,506 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,506 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,508 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,508 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,508 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:45:00,509 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,509 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,515 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,515 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,516 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,516 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,516 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:00,522 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,523 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:00,524 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:00,524 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,525 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:45:00,536 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,537 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:00,537 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,537 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,538 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:00,544 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:00,544 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:00,545 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:00,545 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,545 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,545 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,546 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,551 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,551 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,551 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,551 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,552 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,552 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,552 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,557 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,558 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,558 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,558 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,559 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,564 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,564 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,564 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:00,565 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:00,565 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,565 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,565 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,565 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,571 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,571 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,571 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,572 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,572 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,572 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,572 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,578 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,579 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,579 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,579 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,579 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,585 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,586 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,586 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:00,586 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:00,586 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:00,587 [DEBUG] py4...: --------------------
2024-06-20 16:45:00,587 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:00,587 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,588 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,588 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,588 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:00,594 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:00,595 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:00,595 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:00,595 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:00,596 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,596 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:00,603 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,603 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:00,604 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:45:00,604 [DEBUG] py4...: --------------------
2024-06-20 16:45:00,788 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:45:00,788 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,789 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:45:00,789 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,789 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,799 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,800 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,800 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,800 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,802 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:00,810 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,811 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:00,811 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:00,812 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,812 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,813 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,813 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,823 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,824 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,825 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,825 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,826 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:45:00,833 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:00,834 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:00,834 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:45:00,834 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,835 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,835 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:00,842 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:00,842 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:00,843 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:00,843 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,843 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:45:00,897 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,897 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:45:00,898 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,898 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,898 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:00,904 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:00,905 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:00,905 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:00,905 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,905 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,906 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,906 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,913 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,914 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,914 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,914 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,915 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,915 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,915 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,922 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,923 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,924 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,924 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,924 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,929 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,930 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,930 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:00,930 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:00,931 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,931 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,931 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,932 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,939 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,940 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,940 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,940 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,940 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,941 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,941 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,947 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,947 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,948 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,948 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,948 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:00,954 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:00,955 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:00,955 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:00,955 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:00,955 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:00,955 [DEBUG] py4...: --------------------
2024-06-20 16:45:00,956 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:00,956 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,956 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,956 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:00,963 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:00,963 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:00,964 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:00,964 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,964 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,965 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,965 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:00,970 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:00,970 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:00,971 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:00,971 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,971 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:00,978 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:00,980 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:00,980 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,981 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,981 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:45:00,981 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,982 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:00,988 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:00,989 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:00,989 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:00,991 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:00,992 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:00,998 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:00,999 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:00,999 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:00,999 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,000 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:45:01,009 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:01,010 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:01,010 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,011 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,011 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:01,015 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:01,016 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:01,016 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:01,017 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,017 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,017 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,018 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,023 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,024 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,024 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,025 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,025 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,026 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,026 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,030 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,031 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,031 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,031 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,031 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:01,036 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:01,036 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:01,037 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:01,037 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:01,037 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,038 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,038 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,039 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,043 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,044 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,044 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,044 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,045 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,045 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,045 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,050 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,050 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,050 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,051 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,051 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:01,056 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:01,057 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:01,057 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:01,057 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:01,057 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:01,058 [DEBUG] py4...: --------------------
2024-06-20 16:45:01,058 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:01,058 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,059 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,059 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,059 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:01,065 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:01,066 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:01,066 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:01,066 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:01,066 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,067 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:01,072 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:01,073 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:01,073 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:45:01,073 [DEBUG] py4...: --------------------
2024-06-20 16:45:01,240 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:45:01,241 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,241 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:45:01,241 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,242 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:01,252 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:01,253 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:01,253 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,253 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,254 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:01,265 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:01,265 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:01,266 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:01,266 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,266 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,267 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,268 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:01,279 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:01,280 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:01,280 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,281 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,281 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:45:01,287 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:01,288 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:01,288 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:45:01,288 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,288 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,290 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:01,297 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:01,298 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:01,299 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:01,299 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,299 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:45:01,354 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:01,355 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:45:01,356 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,356 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,356 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:01,364 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:01,364 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:01,364 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:01,365 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,365 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,365 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,366 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:01,374 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:01,375 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:01,375 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,377 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,377 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,377 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,378 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,386 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,387 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,387 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,387 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,388 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:01,394 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:01,394 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:01,395 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:01,395 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:01,396 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,396 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,397 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,397 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:01,406 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:01,406 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:01,406 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,406 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,408 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,408 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,408 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,415 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,416 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,416 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,416 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,416 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:01,423 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:01,424 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:01,424 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:01,425 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:01,425 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:01,426 [DEBUG] py4...: --------------------
2024-06-20 16:45:01,426 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:01,427 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,427 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,427 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:01,436 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:01,437 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:01,437 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:01,437 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,438 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,438 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,438 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:01,444 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:01,445 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:01,445 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:01,446 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,446 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:01,455 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:01,455 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:01,456 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,456 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,458 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:45:01,458 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,458 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,464 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,465 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,465 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,465 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,466 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:01,474 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:01,475 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:01,475 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:01,475 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,476 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:45:01,487 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:01,488 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:01,488 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,488 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,489 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:01,496 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:01,496 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:01,497 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:01,497 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,498 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,498 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,499 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,504 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,505 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,505 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,505 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,506 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,506 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,506 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,513 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,514 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,514 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,514 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,514 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:01,520 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:01,521 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:01,521 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:01,521 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:01,522 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,522 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,522 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,523 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,529 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,530 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,530 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,530 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,530 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,532 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,532 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:01,538 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:01,539 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:01,539 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:01,539 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,539 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:01,544 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:01,544 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:01,545 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:01,545 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:01,545 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:01,545 [DEBUG] py4...: --------------------
2024-06-20 16:45:01,546 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:01,546 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,546 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,547 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,547 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:01,553 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:01,554 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:01,554 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:01,554 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:01,554 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:01,554 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:01,561 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:01,561 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:01,561 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:45:01,562 [DEBUG] py4...: --------------------
2024-06-20 16:45:02,148 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:45:02,149 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,149 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:45:02,149 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,149 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,157 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,158 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,159 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,159 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,160 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:02,171 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,171 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:02,172 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:02,172 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,172 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,172 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,173 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,183 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,184 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,184 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,184 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,185 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:45:02,194 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:02,194 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:02,194 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:45:02,195 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,195 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,195 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:02,201 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:02,202 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:02,202 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:02,202 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,202 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:45:02,238 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,239 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:45:02,239 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,239 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,239 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:02,245 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:02,245 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:02,246 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:02,246 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,246 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,246 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,247 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,254 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,254 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,255 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,255 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,255 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,255 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,255 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,262 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,262 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,262 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,263 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,263 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:02,268 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:02,269 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:02,269 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:02,269 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:02,270 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,270 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,270 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,270 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,278 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,278 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,279 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,279 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,279 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,279 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,281 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,287 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,287 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,288 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,288 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,288 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:02,294 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:02,294 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:02,295 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:02,295 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:02,295 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:02,295 [DEBUG] py4...: --------------------
2024-06-20 16:45:02,296 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:02,296 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,296 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,296 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:02,304 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:02,304 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:02,305 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:02,305 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,305 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,305 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,305 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:02,309 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:02,310 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:02,310 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:02,310 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,311 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,317 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,317 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,318 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,318 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,318 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:45:02,318 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,318 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,324 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,325 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,325 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,325 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,325 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:02,333 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,334 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:02,334 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:02,334 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,336 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:45:02,345 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,346 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:02,346 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,346 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,346 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:02,351 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:02,352 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:02,352 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:02,352 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,352 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,352 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,353 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,358 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,358 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,358 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,358 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,358 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,360 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,360 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,365 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,366 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,366 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,367 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,367 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:02,371 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:02,372 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:02,372 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:02,372 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:02,372 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,372 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,373 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,373 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,377 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,378 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,378 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,378 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,378 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,379 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,379 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,384 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,384 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,384 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,385 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,385 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:02,389 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:02,390 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:02,390 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:02,390 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:02,391 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:02,391 [DEBUG] py4...: --------------------
2024-06-20 16:45:02,391 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:02,391 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,392 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,392 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,392 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:02,396 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:02,397 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:02,397 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:02,397 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:02,397 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,397 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:02,403 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,404 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:02,404 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:45:02,404 [DEBUG] py4...: --------------------
2024-06-20 16:45:02,709 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:45:02,710 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,711 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:45:02,711 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,711 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,718 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,719 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,719 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,720 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,720 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:02,728 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,729 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:02,730 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:02,730 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,731 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,731 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,731 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,739 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,739 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,741 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,741 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,741 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:45:02,747 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:02,747 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:02,748 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:45:02,748 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,748 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,748 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:02,754 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:02,754 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:02,755 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:02,755 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,755 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:45:02,782 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,782 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:45:02,783 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,783 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,784 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:02,789 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:02,790 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:02,790 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:02,790 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,791 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,791 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,791 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,796 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,797 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,797 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,797 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,797 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,798 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,798 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,802 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,803 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,803 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,803 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,804 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:02,808 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:02,809 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:02,809 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:02,809 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:02,810 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,810 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,810 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,810 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,817 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,817 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,818 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,818 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,818 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,818 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,818 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,824 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,824 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,824 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,825 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,825 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:02,830 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:02,830 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:02,830 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:02,830 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:02,831 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:02,831 [DEBUG] py4...: --------------------
2024-06-20 16:45:02,831 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:02,831 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,831 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,831 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:02,836 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:02,836 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:02,837 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:02,837 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,837 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,837 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,837 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:02,842 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:02,843 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:02,843 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:02,843 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,843 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:02,850 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:02,850 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:02,851 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,851 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,851 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:45:02,851 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,851 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,856 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,856 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,856 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,857 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,857 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:02,863 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,864 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:02,864 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:02,864 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,864 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:45:02,873 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,873 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:02,875 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,875 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,875 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:02,880 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:02,880 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:02,880 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:02,881 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,881 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,881 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,881 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,886 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,887 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,887 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,887 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,887 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,888 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,888 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,893 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,893 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,893 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,894 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,894 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:02,898 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:02,899 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:02,899 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:02,899 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:02,899 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,899 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,899 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,900 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,905 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,905 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,905 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,905 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,906 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,906 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,906 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:02,910 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:02,911 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:02,911 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:02,911 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,911 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:02,916 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:02,916 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:02,916 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:02,916 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:02,916 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:02,916 [DEBUG] py4...: --------------------
2024-06-20 16:45:02,917 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:02,917 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,917 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,917 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,918 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:02,922 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:02,923 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:02,923 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:02,923 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:02,923 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:02,923 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:02,928 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:02,929 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:02,929 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:45:02,929 [DEBUG] py4...: --------------------
2024-06-20 16:45:03,180 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:45:03,181 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,182 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:45:03,182 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,182 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:03,190 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:03,191 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:03,191 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,191 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,192 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:03,201 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:03,202 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:03,202 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:03,202 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,202 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,203 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,203 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:03,211 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:03,212 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:03,212 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,213 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/38458/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,213 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/tables/defaultnode/columns)
2024-06-20 16:45:03,218 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:03,218 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:03,219 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:45:03,219 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,219 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,220 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:03,224 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:03,225 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:03,225 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:03,225 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,226 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:45:03,264 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:03,265 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:45:03,266 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,266 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,266 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:03,272 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:03,273 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:03,273 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:03,273 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,274 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,274 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,274 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:03,282 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:03,283 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:03,283 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,283 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,283 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,284 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,284 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:03,289 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:03,290 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:03,291 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,291 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,292 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:03,298 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:03,298 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:03,298 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:03,299 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:03,299 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,299 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,300 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,300 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:03,306 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:03,307 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:03,308 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,308 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,308 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,308 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,308 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:03,314 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:03,315 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:03,315 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,315 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,315 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:03,320 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:03,320 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:03,321 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:03,321 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:03,321 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:03,321 [DEBUG] py4...: --------------------
2024-06-20 16:45:03,321 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:03,321 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,322 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,322 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:03,329 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:03,330 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:03,330 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:03,330 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,331 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,331 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,331 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:03,336 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:03,336 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:03,336 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:03,337 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,337 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:03,346 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 38458
}
],
 "errors":[]
}
2024-06-20 16:45:03,346 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 38458}]
2024-06-20 16:45:03,346 [DEBUG] py4...: ǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,347 [DEBUG] py4...: ǀCalling set_current_network(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,347 [DEBUG] py4...: ǀǀCalling get_network_suid(38458)
2024-06-20 16:45:03,347 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,347 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:03,352 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:03,352 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:03,352 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,353 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,353 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:38458'}
2024-06-20 16:45:03,362 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:03,362 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:03,362 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:03,362 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"38458"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,362 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:38458'}
2024-06-20 16:45:03,373 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:03,373 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:03,374 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,374 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,374 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:03,380 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:03,381 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:03,381 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:03,381 [DEBUG] py4...: ǀCalling get_selected_nodes(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,381 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,381 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,381 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:03,386 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:03,386 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:03,386 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,387 [DEBUG] py4...: ǀǀCalling get_selected_node_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,387 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,387 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,387 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:03,392 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:03,392 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:03,393 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,393 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,393 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:03,398 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:03,398 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:03,398 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:03,399 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:03,399 [DEBUG] py4...: ǀCalling get_selected_edges(network=38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,399 [DEBUG] py4...: ǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,399 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,399 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:03,403 [DEBUG] py4...: ǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:03,404 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:03,404 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,404 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,404 [DEBUG] py4...: ǀǀǀCalling get_network_suid(38458, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,404 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,405 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:03,409 [DEBUG] py4...: ǀǀǀǀOK[200], content: [39045,38458,26235,21981]
2024-06-20 16:45:03,409 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [39045, 38458, 26235, 21981]
2024-06-20 16:45:03,410 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 38458
2024-06-20 16:45:03,410 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/38458/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,410 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/38458/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:03,414 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:03,418 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:03,418 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:03,418 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:03,419 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:03,419 [DEBUG] py4...: --------------------
2024-06-20 16:45:03,419 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:03,419 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,419 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,419 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,420 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:03,424 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:03,425 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:03,425 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:03,425 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:03,425 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:03,426 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:03,433 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:03,433 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:03,433 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:45:03,434 [DEBUG] py4...: --------------------
2024-06-20 16:45:05,946 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:45:05,946 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:05,947 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:05,947 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:05,947 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:05,952 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network_1","SUID":39045},{"name":"Wikipathways WP4760 network uniprot","SUID":38458},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:05,953 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network_1', 'SUID': 39045}, {'name': 'Wikipathways WP4760 network uniprot', 'SUID': 38458}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:05,953 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network_1', 'Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:05,953 [DEBUG] py4...: ǀ'get_network_suid' exception CyError('In get_network_suid(): Network does not exist for name "Wikipathways WP4760 network"')
2024-06-20 16:45:05,954 [DEBUG] py4...: 'clone_network' exception CyError('In get_network_suid(): Network does not exist for name "Wikipathways WP4760 network"')
2024-06-20 16:45:05,954 [DEBUG] py4...: --------------------
2024-06-20 16:45:24,273 [DEBUG] py4...: Calling commands_get('wikipathways import-as-network id="WP4760"')
2024-06-20 16:45:24,274 [DEBUG] py4...: HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-network), params: {'id': 'WP4760'}
2024-06-20 16:45:26,699 [DEBUG] py4...: OK[200], content: Finished

2024-06-20 16:45:26,700 [DEBUG] py4...: Returning 'commands_get': []
2024-06-20 16:45:26,700 [DEBUG] py4...: --------------------
2024-06-20 16:45:26,701 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network')
2024-06-20 16:45:26,701 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:26,701 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:26,702 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:26,711 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:26,712 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:26,712 [DEBUG] py4...: ǀReturning 'get_network_suid': 40096
2024-06-20 16:45:26,712 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network" sourceNetwork="SUID:40096"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:26,713 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network', 'sourceNetwork': 'SUID:40096'}
2024-06-20 16:45:26,721 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":40096, "title":"Wikipathways WP4760 network"},
 "errors":[]
}
2024-06-20 16:45:26,722 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 40096, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:45:26,723 [DEBUG] py4...: Returning 'rename_network': {'network': 40096, 'title': 'Wikipathways WP4760 network'}
2024-06-20 16:45:26,723 [DEBUG] py4...: --------------------
2024-06-20 16:45:28,496 [DEBUG] py4...: Calling clone_network('Wikipathways WP4760 network')
2024-06-20 16:45:28,497 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,497 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,497 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,498 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:28,503 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network","SUID":40096},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:28,504 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network', 'SUID': 40096}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:28,504 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network', 'KEGG hsa05017 network stringified', 'KEGG hsa05017 network']
2024-06-20 16:45:28,504 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,504 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:28,514 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:28,515 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:28,516 [DEBUG] py4...: ǀReturning 'get_network_suid': 40096
2024-06-20 16:45:28,516 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:40096"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,516 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:40096'}
2024-06-20 16:45:28,558 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":40683,"view":41191},
 "errors":[]
}
2024-06-20 16:45:28,559 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 40683, 'view': 41191}
2024-06-20 16:45:28,560 [DEBUG] py4...: Returning 'clone_network': 40683
2024-06-20 16:45:28,560 [DEBUG] py4...: --------------------
2024-06-20 16:45:28,561 [DEBUG] py4...: Calling rename_network(title='Wikipathways WP4760 network uniprot', network='Wikipathways WP4760 network')
2024-06-20 16:45:28,562 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,562 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,563 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,563 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:28,570 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network","SUID":40096},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:28,571 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network', 'SUID': 40096}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:28,571 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:45:28,572 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,573 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:28,581 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:28,582 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:28,582 [DEBUG] py4...: ǀReturning 'get_network_suid': 40096
2024-06-20 16:45:28,583 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network uniprot" sourceNetwork="SUID:40096"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:28,583 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network uniprot', 'sourceNetwork': 'SUID:40096'}
2024-06-20 16:45:28,594 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":40096, "title":"Wikipathways WP4760 network uniprot"},
 "errors":[]
}
2024-06-20 16:45:28,595 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 40096, 'title': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:28,596 [DEBUG] py4...: Returning 'rename_network': {'network': 40096, 'title': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:28,596 [DEBUG] py4...: --------------------
2024-06-20 16:45:31,050 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=1, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:31,050 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="1" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:31,051 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '1', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:45:31,151 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"mappedTables":[
  40654,
  40692
]},
 "errors":[]
}
2024-06-20 16:45:31,152 [DEBUG] py4...: ǀReturning 'commands_post': {'mappedTables': [40654, 40692]}
2024-06-20 16:45:31,153 [DEBUG] py4...: Returning 'load_table_data_from_file': {'mappedTables': [40654, 40692]}
2024-06-20 16:45:31,153 [DEBUG] py4...: --------------------
2024-06-20 16:45:32,274 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:45:32,274 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,275 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:45:32,275 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,275 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:32,282 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 40683
}
],
 "errors":[]
}
2024-06-20 16:45:32,283 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 40683}]
2024-06-20 16:45:32,284 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40683
2024-06-20 16:45:32,284 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:40683"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,284 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:40683'}
2024-06-20 16:45:32,293 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:32,294 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:32,294 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:32,294 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,294 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,294 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,296 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:32,303 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 40683
}
],
 "errors":[]
}
2024-06-20 16:45:32,304 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 40683}]
2024-06-20 16:45:32,304 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40683
2024-06-20 16:45:32,304 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/40683/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,305 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40683/tables/defaultnode/columns)
2024-06-20 16:45:32,311 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:32,312 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:32,312 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:45:32,312 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,313 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,313 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:32,318 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:32,318 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:32,318 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:32,318 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,318 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:45:32,364 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:32,365 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:45:32,365 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,366 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,366 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:32,371 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:32,371 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:32,371 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:32,371 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,372 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,372 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,372 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:32,379 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 40683
}
],
 "errors":[]
}
2024-06-20 16:45:32,379 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 40683}]
2024-06-20 16:45:32,379 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40683
2024-06-20 16:45:32,380 [DEBUG] py4...: ǀǀCalling get_selected_node_count(40683, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,380 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40683, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,380 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,381 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,386 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,386 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,387 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40683
2024-06-20 16:45:32,387 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40683/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,387 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40683/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:32,392 [DEBUG] py4...: ǀǀǀOK[200], content: [40769,40899,40774,40779,40784,40789,40794,40924,40799,40804,40934,40809,40874,40939,40814,40819,40759,40954,40764,40894]
2024-06-20 16:45:32,393 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40769, 40899, 40774, 40779, 40784, 40789, 40794, 40924, 40799, 40804, 40934, 40809, 40874, 40939, 40814, 40819, 40759, 40954, 40764, 40894]
2024-06-20 16:45:32,393 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 20
2024-06-20 16:45:32,393 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/40683/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,393 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40683/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:32,399 [DEBUG] py4...: ǀǀOK[200], content: [40769,40899,40774,40779,40784,40789,40794,40924,40799,40804,40934,40809,40874,40939,40814,40819,40759,40954,40764,40894]
2024-06-20 16:45:32,400 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40769, 40899, 40774, 40779, 40784, 40789, 40794, 40924, 40799, 40804, 40934, 40809, 40874, 40939, 40814, 40819, 40759, 40954, 40764, 40894]
2024-06-20 16:45:32,400 [DEBUG] py4...: ǀǀCalling get_table_columns('node', ['name'], 'default', 40683, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,400 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40683, 'http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,400 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,400 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,405 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,405 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,405 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40683
2024-06-20 16:45:32,406 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=40683, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,406 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(40683, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,406 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,406 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,410 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,411 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,411 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 40683
2024-06-20 16:45:32,411 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/40683/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,412 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40683/tables/defaultnode/columns)
2024-06-20 16:45:32,416 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:32,417 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:32,417 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'ChEBI': 'String', 'uniprot': 'String'}
2024-06-20 16:45:32,417 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40683/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,417 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40683/tables/defaultnode/columns/SUID)
2024-06-20 16:45:32,422 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[40759,40764,40769,40774,40779,40784,40789,40794,40799,40804,40809,40814,40819,40824,40829,40834,40839,40844,40849,40854,40859,40864,40869,40874,40879,40884,40889,40894,40899,40904,40909,40914,40919,40924,40929,40934,40939,40944,40949,40954,40959]}
2024-06-20 16:45:32,422 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [40759, 40764, 40769, 40774, 40779, 40784, 40789, 40794, 40799, 40804, 40809, 40814, 40819, 40824, 40829, 40834, 40839, 40844, 40849, 40854, 40859, 40864, 40869, 40874, 40879, 40884, 40889, 40894, 40899, 40904, 40909, 40914, 40919, 40924, 40929, 40934, 40939, 40944, 40949, 40954, 40959]}
2024-06-20 16:45:32,423 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40683/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,423 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40683/tables/defaultnode/columns/name)
2024-06-20 16:45:32,429 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"name","values":[null,null,null,null,null,null,null,null,"Ligands","group_PLCB2_PLCB3_PLCB4_PLCB1","group_GRIA3_GRIA2_GRIA4_GRIA1","group","group_GNA15_GNAQ_GNA11_GNA14","ATP2B2","GRIA4","GRIA3","GNA15","GNA14","GNA11","PLCB4","PLCB3","PLCB2","PDK1","PIP2","PRKCG","CA8","PLCB1","DAG","IP3R1","CACNA1A","GRIA1","GRM1","GNAQ","Ca2+","TRPC3","PI(3,4,5)P3","IP3","RYR3","HOMER3","Na+","GRIA2"]}
2024-06-20 16:45:32,429 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'name', 'values': [None, None, None, None, None, None, None, None, 'Ligands', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'group', 'group_GNA15_GNAQ_GNA11_GNA14', 'ATP2B2', 'GRIA4', 'GRIA3', 'GNA15', 'GNA14', 'GNA11', 'PLCB4', 'PLCB3', 'PLCB2', 'PDK1', 'PIP2', 'PRKCG', 'CA8', 'PLCB1', 'DAG', 'IP3R1', 'CACNA1A', 'GRIA1', 'GRM1', 'GNAQ', 'Ca2+', 'TRPC3', 'PI(3,4,5)P3', 'IP3', 'RYR3', 'HOMER3', 'Na+', 'GRIA2']}
2024-06-20 16:45:32,430 [DEBUG] py4...: ǀǀReturning 'get_table_columns':                                 name
40759                           None
40764                           None
40769                           None
40774                           None
40779                           None
40784                           None
40789                           None
40794                           None
40799                        Ligands
40804  group_PLCB2_PLCB3_PLCB4_PLCB1
40809  group_GRIA3_GRIA2_GRIA4_GRIA1
40814                          group
40819   group_GNA15_GNAQ_GNA11_GNA14
40824                         ATP2B2
40829                          GRIA4
40834                          GRIA3
40839                          GNA15
40844                          GNA14
40849                          GNA11
40854                          PLCB4
40859                          PLCB3
40864                          PLCB2
40869                           PDK1
40874                           PIP2
40879                          PRKCG
40884                            CA8
40889                          PLCB1
40894                            DAG
40899                          IP3R1
40904                        CACNA1A
40909                          GRIA1
40914                           GRM1
40919                           GNAQ
40924                           Ca2+
40929                          TRPC3
40934                    PI(3,4,5)P3
40939                            IP3
40944                           RYR3
40949                         HOMER3
40954                            Na+
40959                          GRIA2
2024-06-20 16:45:32,432 [DEBUG] py4...: ǀReturning 'get_selected_nodes': [None, 'IP3R1', None, None, None, None, None, 'Ca2+', 'Ligands', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'PI(3,4,5)P3', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'PIP2', 'IP3', 'group', 'group_GNA15_GNAQ_GNA11_GNA14', None, 'Na+', None, 'DAG']
2024-06-20 16:45:32,432 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,432 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,432 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,432 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:32,437 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 40683
}
],
 "errors":[]
}
2024-06-20 16:45:32,437 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 40683}]
2024-06-20 16:45:32,438 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40683
2024-06-20 16:45:32,438 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(40683, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,438 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40683, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,438 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,439 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,445 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,446 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,446 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40683
2024-06-20 16:45:32,446 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40683/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,446 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40683/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:32,451 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:32,451 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:32,451 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:32,451 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:32,452 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': [None, 'IP3R1', None, None, None, None, None, 'Ca2+', 'Ligands', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'PI(3,4,5)P3', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'PIP2', 'IP3', 'group', 'group_GNA15_GNAQ_GNA11_GNA14', None, 'Na+', None, 'DAG'], 'edges': None}
2024-06-20 16:45:32,452 [DEBUG] py4...: --------------------
2024-06-20 16:45:32,453 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:32,453 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,453 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,453 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:32,461 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:32,461 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:32,462 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:32,462 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,462 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,463 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,463 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:32,468 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:32,468 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:32,468 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:45:32,469 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,469 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:32,476 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:32,476 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:32,476 [DEBUG] py4...: ǀReturning 'get_network_suid': 40096
2024-06-20 16:45:32,477 [DEBUG] py4...: ǀCalling set_current_network(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,477 [DEBUG] py4...: ǀǀCalling get_network_suid(40096)
2024-06-20 16:45:32,477 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,478 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,484 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,484 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,484 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:32,485 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:40096"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,485 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:40096'}
2024-06-20 16:45:32,572 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:32,573 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:32,573 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:32,573 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"40096"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,574 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:40096'}
2024-06-20 16:45:32,587 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:32,587 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:32,588 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,588 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,588 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:32,596 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:32,597 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:32,597 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:32,598 [DEBUG] py4...: ǀCalling get_selected_nodes(network=40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,598 [DEBUG] py4...: ǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,599 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,599 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,606 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,606 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,607 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:32,607 [DEBUG] py4...: ǀǀCalling get_selected_node_count(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,607 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,608 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,608 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,614 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,615 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,615 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:32,615 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,615 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:32,621 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:32,622 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:32,622 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:45:32,622 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:45:32,622 [DEBUG] py4...: ǀCalling get_selected_edges(network=40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,622 [DEBUG] py4...: ǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,624 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,624 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,630 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,630 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,631 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:32,631 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,631 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,631 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,632 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:32,636 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:32,637 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:32,637 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:32,637 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,638 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:32,643 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:32,643 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:32,644 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:32,644 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:32,644 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:45:32,644 [DEBUG] py4...: --------------------
2024-06-20 16:45:32,644 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:32,645 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,645 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,645 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,646 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:32,651 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:32,651 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:32,651 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:45:32,652 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:32,652 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:32,652 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:32,658 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:32,659 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:32,660 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:45:32,660 [DEBUG] py4...: --------------------
2024-06-20 16:45:36,168 [DEBUG] py4...: Calling commands_run('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="Wikipathways WP4760 network uniprot" species="Homo sapiens"')
2024-06-20 16:45:36,168 [DEBUG] py4...: ǀCalling commands_get('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="Wikipathways WP4760 network uniprot" species="Homo sapiens"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:36,169 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/stringify), params: {'colDisplayName': 'name', 'column': 'uniprot', 'compoundQuery': 'false', 'includeNotMapped': 'false', 'networkNoGui': 'Wikipathways WP4760 network uniprot', 'species': 'Homo sapiens'}
2024-06-20 16:45:36,181 [DEBUG] py4...: ǀInternal Server Error[500], content: Failed: Cannot invoke "org.cytoscape.model.CyColumn.getValues(java.lang.Class)" because "col" is null
2024-06-20 16:45:36,181 [DEBUG] py4...: ǀ'commands_get' exception CyError('In commands_get(): Failed: Cannot invoke "org.cytoscape.model.CyColumn.getValues(java.lang.Class)" because "col" is null')
2024-06-20 16:45:36,182 [DEBUG] py4...: 'commands_run' exception CyError('In commands_get(): Failed: Cannot invoke "org.cytoscape.model.CyColumn.getValues(java.lang.Class)" because "col" is null')
2024-06-20 16:45:36,182 [DEBUG] py4...: --------------------
2024-06-20 16:45:41,731 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=0, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:41,731 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="0" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:41,732 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '0', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:45:41,744 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:45:41,745 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns')
2024-06-20 16:45:41,746 [DEBUG] py4...: 'load_table_data_from_file' exception CyError('In commands_post(): Task Cancelled. Could not validate Tunable inputs: The primary key column needs to be selected. Please select values from 1 to the number of columns')
2024-06-20 16:45:41,747 [DEBUG] py4...: --------------------
2024-06-20 16:45:45,437 [DEBUG] py4...: Calling load_table_data_from_file('wikipathway_to_uniprot_sca.xlsx', first_row_as_column_names=True, data_key_column_index=1, network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:45,437 [DEBUG] py4...: ǀCalling commands_post('table import file file="C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx" firstRowAsColumnNames="True" startLoadRow="1" delimiters="\\,,\t" keyColumnIndex="1" dataTypeTargetForNetworkCollection="Node Table Columns" keyColumnForMapping="shared name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:45,438 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/table/import%20file), json: {'file': 'C:\\Users\\emmab\\PycharmProjects\\bachelor_project_2024\\thesis_comparing_neurodegenerative_disorders\\comparisondisorders\\automated workflows\\spinocerebellar ataxia\\wikipathway_to_uniprot_sca.xlsx', 'firstRowAsColumnNames': 'True', 'startLoadRow': '1', 'delimiters': '\\,,\t', 'keyColumnIndex': '1', 'dataTypeTargetForNetworkCollection': 'Node Table Columns', 'keyColumnForMapping': 'shared name'}
2024-06-20 16:45:45,521 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"mappedTables":[
  40067,
  40105
]},
 "errors":[]
}
2024-06-20 16:45:45,522 [DEBUG] py4...: ǀReturning 'commands_post': {'mappedTables': [40067, 40105]}
2024-06-20 16:45:45,523 [DEBUG] py4...: Returning 'load_table_data_from_file': {'mappedTables': [40067, 40105]}
2024-06-20 16:45:45,523 [DEBUG] py4...: --------------------
2024-06-20 16:45:47,028 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without uniprot', column='uniprot', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:45:47,028 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,028 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:45:47,030 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,030 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:47,036 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:47,037 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:47,037 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,037 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:40096"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,037 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:40096'}
2024-06-20 16:45:47,044 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:47,045 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:47,045 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:47,045 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,045 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,047 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,047 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:47,057 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:47,058 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:47,058 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,058 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/40096/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,059 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/tables/defaultnode/columns)
2024-06-20 16:45:47,064 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:47,064 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:47,064 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:45:47,065 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,065 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,065 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:47,069 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:47,070 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:47,070 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:47,070 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,071 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without uniprot', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "uniprot", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:45:47,115 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:47,115 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:45:47,115 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,115 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,116 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:47,120 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:47,122 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:47,123 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:47,123 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,124 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,124 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,124 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:47,132 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:47,132 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:47,133 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,133 [DEBUG] py4...: ǀǀCalling get_selected_node_count(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,133 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,134 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,134 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,140 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,140 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,141 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,141 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,141 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:47,146 [DEBUG] py4...: ǀǀǀOK[200], content: [40323,40326,40329,40332,40206,40335,40338,40341,40215,40344,40218,40347,40287,40224,40298,40301,40239,40242,40312,40254]
2024-06-20 16:45:47,147 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40323, 40326, 40329, 40332, 40206, 40335, 40338, 40341, 40215, 40344, 40218, 40347, 40287, 40224, 40298, 40301, 40239, 40242, 40312, 40254]
2024-06-20 16:45:47,147 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 20
2024-06-20 16:45:47,147 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/40096/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,147 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:47,152 [DEBUG] py4...: ǀǀOK[200], content: [40323,40326,40329,40332,40206,40335,40338,40341,40215,40344,40218,40347,40287,40224,40298,40301,40239,40242,40312,40254]
2024-06-20 16:45:47,152 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40323, 40326, 40329, 40332, 40206, 40335, 40338, 40341, 40215, 40344, 40218, 40347, 40287, 40224, 40298, 40301, 40239, 40242, 40312, 40254]
2024-06-20 16:45:47,153 [DEBUG] py4...: ǀǀCalling get_table_columns('node', ['name'], 'default', 40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,153 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40096, 'http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,153 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,153 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,158 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,159 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,159 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,159 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,160 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,160 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,160 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,164 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,164 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,165 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,165 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/40096/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,165 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/tables/defaultnode/columns)
2024-06-20 16:45:47,169 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:47,169 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:47,170 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'ChEBI': 'String', 'uniprot': 'String'}
2024-06-20 16:45:47,170 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,170 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/tables/defaultnode/columns/SUID)
2024-06-20 16:45:47,175 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[40203,40206,40209,40212,40215,40218,40221,40224,40227,40230,40233,40236,40239,40242,40245,40248,40251,40254,40257,40260,40263,40266,40269,40272,40275,40278,40281,40284,40287,40298,40301,40312,40323,40326,40329,40332,40335,40338,40341,40344,40347]}
2024-06-20 16:45:47,175 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [40203, 40206, 40209, 40212, 40215, 40218, 40221, 40224, 40227, 40230, 40233, 40236, 40239, 40242, 40245, 40248, 40251, 40254, 40257, 40260, 40263, 40266, 40269, 40272, 40275, 40278, 40281, 40284, 40287, 40298, 40301, 40312, 40323, 40326, 40329, 40332, 40335, 40338, 40341, 40344, 40347]}
2024-06-20 16:45:47,176 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,176 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/tables/defaultnode/columns/name)
2024-06-20 16:45:47,181 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"name","values":["GRIA2","Na+","HOMER3","RYR3","IP3","PI(3,4,5)P3","TRPC3","Ca2+","GNAQ","GRM1","GRIA1","CACNA1A","IP3R1","DAG","PLCB1","CA8","PRKCG","PIP2","PDK1","PLCB2","PLCB3","PLCB4","GNA11","GNA14","GNA15","GRIA3","GRIA4","ATP2B2","group_GNA15_GNAQ_GNA11_GNA14","group","group_GRIA3_GRIA2_GRIA4_GRIA1","group_PLCB2_PLCB3_PLCB4_PLCB1","Ligands",null,null,null,null,null,null,null,null]}
2024-06-20 16:45:47,181 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['GRIA2', 'Na+', 'HOMER3', 'RYR3', 'IP3', 'PI(3,4,5)P3', 'TRPC3', 'Ca2+', 'GNAQ', 'GRM1', 'GRIA1', 'CACNA1A', 'IP3R1', 'DAG', 'PLCB1', 'CA8', 'PRKCG', 'PIP2', 'PDK1', 'PLCB2', 'PLCB3', 'PLCB4', 'GNA11', 'GNA14', 'GNA15', 'GRIA3', 'GRIA4', 'ATP2B2', 'group_GNA15_GNAQ_GNA11_GNA14', 'group', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'Ligands', None, None, None, None, None, None, None, None]}
2024-06-20 16:45:47,183 [DEBUG] py4...: ǀǀReturning 'get_table_columns':                                 name
40203                          GRIA2
40206                            Na+
40209                         HOMER3
40212                           RYR3
40215                            IP3
40218                    PI(3,4,5)P3
40221                          TRPC3
40224                           Ca2+
40227                           GNAQ
40230                           GRM1
40233                          GRIA1
40236                        CACNA1A
40239                          IP3R1
40242                            DAG
40245                          PLCB1
40248                            CA8
40251                          PRKCG
40254                           PIP2
40257                           PDK1
40260                          PLCB2
40263                          PLCB3
40266                          PLCB4
40269                          GNA11
40272                          GNA14
40275                          GNA15
40278                          GRIA3
40281                          GRIA4
40284                         ATP2B2
40287   group_GNA15_GNAQ_GNA11_GNA14
40298                          group
40301  group_GRIA3_GRIA2_GRIA4_GRIA1
40312  group_PLCB2_PLCB3_PLCB4_PLCB1
40323                        Ligands
40326                           None
40329                           None
40332                           None
40335                           None
40338                           None
40341                           None
40344                           None
40347                           None
2024-06-20 16:45:47,183 [DEBUG] py4...: ǀReturning 'get_selected_nodes': ['Ligands', None, None, None, 'Na+', None, None, None, 'IP3', None, 'PI(3,4,5)P3', None, 'group_GNA15_GNAQ_GNA11_GNA14', 'Ca2+', 'group', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'IP3R1', 'DAG', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'PIP2']
2024-06-20 16:45:47,183 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,183 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,184 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,184 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:47,190 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:47,190 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:47,190 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,190 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,190 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,191 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,191 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,195 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,195 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,196 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,196 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,196 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:47,201 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:47,201 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:47,201 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:47,202 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:47,202 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': ['Ligands', None, None, None, 'Na+', None, None, None, 'IP3', None, 'PI(3,4,5)P3', None, 'group_GNA15_GNAQ_GNA11_GNA14', 'Ca2+', 'group', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'IP3R1', 'DAG', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'PIP2'], 'edges': None}
2024-06-20 16:45:47,202 [DEBUG] py4...: --------------------
2024-06-20 16:45:47,203 [DEBUG] py4...: Calling apply_filter('Columns without uniprot', network='Wikipathways WP4760 network uniprot')
2024-06-20 16:45:47,203 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,203 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,203 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:45:47,208 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot"],
 "errors":[]
}
2024-06-20 16:45:47,209 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:47,209 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot']
2024-06-20 16:45:47,209 [DEBUG] py4...: ǀCalling get_network_suid('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,210 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,210 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,210 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:47,214 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:47,215 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:47,215 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:45:47,215 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="Wikipathways WP4760 network uniprot" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,215 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network uniprot', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:47,222 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 40096
}
],
 "errors":[]
}
2024-06-20 16:45:47,222 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 40096}]
2024-06-20 16:45:47,222 [DEBUG] py4...: ǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,223 [DEBUG] py4...: ǀCalling set_current_network(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,223 [DEBUG] py4...: ǀǀCalling get_network_suid(40096)
2024-06-20 16:45:47,223 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,224 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,229 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,230 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,230 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,230 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:40096"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,230 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:40096'}
2024-06-20 16:45:47,236 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:47,236 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:45:47,237 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:45:47,237 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without uniprot" network=SUID:"40096"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,237 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without uniprot', 'network': 'SUID:40096'}
2024-06-20 16:45:47,246 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:45:47,247 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:45:47,247 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,248 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,248 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:45:47,253 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:45:47,253 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:45:47,253 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:45:47,254 [DEBUG] py4...: ǀCalling get_selected_nodes(network=40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,254 [DEBUG] py4...: ǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,254 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,254 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,259 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,260 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,260 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,260 [DEBUG] py4...: ǀǀCalling get_selected_node_count(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,260 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,261 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,261 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,266 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,267 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,267 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,267 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,267 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:47,274 [DEBUG] py4...: ǀǀǀOK[200], content: [40323,40326,40329,40332,40206,40335,40338,40341,40215,40344,40218,40347,40287,40224,40298,40301,40239,40242,40312,40254]
2024-06-20 16:45:47,275 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40323, 40326, 40329, 40332, 40206, 40335, 40338, 40341, 40215, 40344, 40218, 40347, 40287, 40224, 40298, 40301, 40239, 40242, 40312, 40254]
2024-06-20 16:45:47,275 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 20
2024-06-20 16:45:47,275 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/40096/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,275 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:47,280 [DEBUG] py4...: ǀǀOK[200], content: [40323,40326,40329,40332,40206,40335,40338,40341,40215,40344,40218,40347,40287,40224,40298,40301,40239,40242,40312,40254]
2024-06-20 16:45:47,280 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40323, 40326, 40329, 40332, 40206, 40335, 40338, 40341, 40215, 40344, 40218, 40347, 40287, 40224, 40298, 40301, 40239, 40242, 40312, 40254]
2024-06-20 16:45:47,281 [DEBUG] py4...: ǀǀCalling get_table_columns('node', ['name'], 'default', 40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,281 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40096, 'http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,281 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,281 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,285 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,285 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,285 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,286 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,286 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,286 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,286 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,291 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,291 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,292 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,292 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/40096/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,292 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/tables/defaultnode/columns)
2024-06-20 16:45:47,297 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:45:47,297 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:45:47,298 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'ChEBI': 'String', 'uniprot': 'String'}
2024-06-20 16:45:47,298 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,298 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/tables/defaultnode/columns/SUID)
2024-06-20 16:45:47,304 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[40203,40206,40209,40212,40215,40218,40221,40224,40227,40230,40233,40236,40239,40242,40245,40248,40251,40254,40257,40260,40263,40266,40269,40272,40275,40278,40281,40284,40287,40298,40301,40312,40323,40326,40329,40332,40335,40338,40341,40344,40347]}
2024-06-20 16:45:47,304 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [40203, 40206, 40209, 40212, 40215, 40218, 40221, 40224, 40227, 40230, 40233, 40236, 40239, 40242, 40245, 40248, 40251, 40254, 40257, 40260, 40263, 40266, 40269, 40272, 40275, 40278, 40281, 40284, 40287, 40298, 40301, 40312, 40323, 40326, 40329, 40332, 40335, 40338, 40341, 40344, 40347]}
2024-06-20 16:45:47,305 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,305 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/tables/defaultnode/columns/name)
2024-06-20 16:45:47,310 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"name","values":["GRIA2","Na+","HOMER3","RYR3","IP3","PI(3,4,5)P3","TRPC3","Ca2+","GNAQ","GRM1","GRIA1","CACNA1A","IP3R1","DAG","PLCB1","CA8","PRKCG","PIP2","PDK1","PLCB2","PLCB3","PLCB4","GNA11","GNA14","GNA15","GRIA3","GRIA4","ATP2B2","group_GNA15_GNAQ_GNA11_GNA14","group","group_GRIA3_GRIA2_GRIA4_GRIA1","group_PLCB2_PLCB3_PLCB4_PLCB1","Ligands",null,null,null,null,null,null,null,null]}
2024-06-20 16:45:47,310 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['GRIA2', 'Na+', 'HOMER3', 'RYR3', 'IP3', 'PI(3,4,5)P3', 'TRPC3', 'Ca2+', 'GNAQ', 'GRM1', 'GRIA1', 'CACNA1A', 'IP3R1', 'DAG', 'PLCB1', 'CA8', 'PRKCG', 'PIP2', 'PDK1', 'PLCB2', 'PLCB3', 'PLCB4', 'GNA11', 'GNA14', 'GNA15', 'GRIA3', 'GRIA4', 'ATP2B2', 'group_GNA15_GNAQ_GNA11_GNA14', 'group', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'Ligands', None, None, None, None, None, None, None, None]}
2024-06-20 16:45:47,312 [DEBUG] py4...: ǀǀReturning 'get_table_columns':                                 name
40203                          GRIA2
40206                            Na+
40209                         HOMER3
40212                           RYR3
40215                            IP3
40218                    PI(3,4,5)P3
40221                          TRPC3
40224                           Ca2+
40227                           GNAQ
40230                           GRM1
40233                          GRIA1
40236                        CACNA1A
40239                          IP3R1
40242                            DAG
40245                          PLCB1
40248                            CA8
40251                          PRKCG
40254                           PIP2
40257                           PDK1
40260                          PLCB2
40263                          PLCB3
40266                          PLCB4
40269                          GNA11
40272                          GNA14
40275                          GNA15
40278                          GRIA3
40281                          GRIA4
40284                         ATP2B2
40287   group_GNA15_GNAQ_GNA11_GNA14
40298                          group
40301  group_GRIA3_GRIA2_GRIA4_GRIA1
40312  group_PLCB2_PLCB3_PLCB4_PLCB1
40323                        Ligands
40326                           None
40329                           None
40332                           None
40335                           None
40338                           None
40341                           None
40344                           None
40347                           None
2024-06-20 16:45:47,312 [DEBUG] py4...: ǀReturning 'get_selected_nodes': ['Ligands', None, None, None, 'Na+', None, None, None, 'IP3', None, 'PI(3,4,5)P3', None, 'group_GNA15_GNAQ_GNA11_GNA14', 'Ca2+', 'group', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'IP3R1', 'DAG', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'PIP2']
2024-06-20 16:45:47,313 [DEBUG] py4...: ǀCalling get_selected_edges(network=40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,313 [DEBUG] py4...: ǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,313 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,313 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,317 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,318 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,318 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,318 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,318 [DEBUG] py4...: ǀǀǀCalling get_network_suid(40096, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,319 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,319 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:45:47,323 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,26235,40683,21981]
2024-06-20 16:45:47,324 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 26235, 40683, 21981]
2024-06-20 16:45:47,324 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 40096
2024-06-20 16:45:47,324 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/40096/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,325 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/40096/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:45:47,329 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:45:47,329 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:45:47,329 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:45:47,329 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:45:47,330 [DEBUG] py4...: Returning 'apply_filter': {'nodes': ['Ligands', None, None, None, 'Na+', None, None, None, 'IP3', None, 'PI(3,4,5)P3', None, 'group_GNA15_GNAQ_GNA11_GNA14', 'Ca2+', 'group', 'group_GRIA3_GRIA2_GRIA4_GRIA1', 'IP3R1', 'DAG', 'group_PLCB2_PLCB3_PLCB4_PLCB1', 'PIP2'], 'edges': None}
2024-06-20 16:45:47,330 [DEBUG] py4...: --------------------
2024-06-20 16:45:47,330 [DEBUG] py4...: Calling delete_selected_nodes('Wikipathways WP4760 network uniprot')
2024-06-20 16:45:47,330 [DEBUG] py4...: ǀCalling get_network_name('Wikipathways WP4760 network uniprot', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,330 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,331 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,331 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:45:47,335 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:45:47,335 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:45:47,336 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:45:47,336 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network uniprot'
2024-06-20 16:45:47,336 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network uniprot"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:47,336 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network uniprot'}
2024-06-20 16:45:47,349 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"nodes":[
  40323,
  40224,
  40341,
  40206,
  40239,
  40312,
  40338,
  40347,
  40332,
  40326,
  40215,
  40301,
  40287,
  40329,
  40344,
  40242,
  40218,
  40298,
  40335,
  40254
], "edges":[
  40431,
  40303,
  40368,
  40305,
  40434,
  40371,
  40307,
  40437,
  40309,
  40374,
  40440,
  40377,
  40314,
  40443,
  40380,
  40316,
  40446,
  40318,
  40383,
  40320,
  40386,
  40389,
  40392,
  40395,
  40398,
  40401,
  40404,
  40407,
  40410,
  40413,
  40350,
  40416,
  40353,
  40289,
  40419,
  40291,
  40293,
  40422,
  40295,
  40425,
  40362,
  40428,
  40365
]},
 "errors":[]
}
2024-06-20 16:45:47,350 [DEBUG] py4...: ǀReturning 'commands_post': {'nodes': [40323, 40224, 40341, 40206, 40239, 40312, 40338, 40347, 40332, 40326, 40215, 40301, 40287, 40329, 40344, 40242, 40218, 40298, 40335, 40254], 'edges': [40431, 40303, 40368, 40305, 40434, 40371, 40307, 40437, 40309, 40374, 40440, 40377, 40314, 40443, 40380, 40316, 40446, 40318, 40383, 40320, 40386, 40389, 40392, 40395, 40398, 40401, 40404, 40407, 40410, 40413, 40350, 40416, 40353, 40289, 40419, 40291, 40293, 40422, 40295, 40425, 40362, 40428, 40365]}
2024-06-20 16:45:47,350 [DEBUG] py4...: Returning 'delete_selected_nodes': {'nodes': [40323, 40224, 40341, 40206, 40239, 40312, 40338, 40347, 40332, 40326, 40215, 40301, 40287, 40329, 40344, 40242, 40218, 40298, 40335, 40254], 'edges': [40431, 40303, 40368, 40305, 40434, 40371, 40307, 40437, 40309, 40374, 40440, 40377, 40314, 40443, 40380, 40316, 40446, 40318, 40383, 40320, 40386, 40389, 40392, 40395, 40398, 40401, 40404, 40407, 40410, 40413, 40350, 40416, 40353, 40289, 40419, 40291, 40293, 40422, 40295, 40425, 40362, 40428, 40365]}
2024-06-20 16:45:47,351 [DEBUG] py4...: --------------------
2024-06-20 16:45:52,715 [DEBUG] py4...: Calling commands_run('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="Wikipathways WP4760 network uniprot" species="Homo sapiens"')
2024-06-20 16:45:52,716 [DEBUG] py4...: ǀCalling commands_get('string stringify colDisplayName="name" column="uniprot" compoundQuery="false" includeNotMapped="false" networkNoGui="Wikipathways WP4760 network uniprot" species="Homo sapiens"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:52,716 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/stringify), params: {'colDisplayName': 'name', 'column': 'uniprot', 'compoundQuery': 'false', 'includeNotMapped': 'false', 'networkNoGui': 'Wikipathways WP4760 network uniprot', 'species': 'Homo sapiens'}
2024-06-20 16:45:55,462 [DEBUG] py4...: ǀOK[200], content: Set network 'Wikipathways WP4760 network uniprot as STRING network
Finished

2024-06-20 16:45:55,463 [DEBUG] py4...: ǀReturning 'commands_get': ["Set network 'Wikipathways WP4760 network uniprot as STRING network"]
2024-06-20 16:45:55,463 [DEBUG] py4...: Returning 'commands_run': ["Set network 'Wikipathways WP4760 network uniprot as STRING network"]
2024-06-20 16:45:55,464 [DEBUG] py4...: --------------------
2024-06-20 16:45:55,464 [DEBUG] py4...: Calling rename_network('Wikipathways WP4760 network stringified')
2024-06-20 16:45:55,465 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:55,465 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:55,466 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:45:55,480 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 41686
}
],
 "errors":[]
}
2024-06-20 16:45:55,480 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 41686}]
2024-06-20 16:45:55,481 [DEBUG] py4...: ǀReturning 'get_network_suid': 41686
2024-06-20 16:45:55,481 [DEBUG] py4...: ǀCalling commands_post('network rename name="Wikipathways WP4760 network stringified" sourceNetwork="SUID:41686"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:55,481 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Wikipathways WP4760 network stringified', 'sourceNetwork': 'SUID:41686'}
2024-06-20 16:45:55,491 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":41686, "title":"Wikipathways WP4760 network stringified"},
 "errors":[]
}
2024-06-20 16:45:55,492 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 41686, 'title': 'Wikipathways WP4760 network stringified'}
2024-06-20 16:45:55,493 [DEBUG] py4...: Returning 'rename_network': {'network': 41686, 'title': 'Wikipathways WP4760 network stringified'}
2024-06-20 16:45:55,493 [DEBUG] py4...: --------------------
2024-06-20 16:45:58,858 [DEBUG] py4...: Calling commands_run('string change confidence confidence=0.4 network="Wikipathways WP4760 network stringified"')
2024-06-20 16:45:58,859 [DEBUG] py4...: ǀCalling commands_get('string change confidence confidence=0.4 network="Wikipathways WP4760 network stringified"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:45:58,859 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/change%20confidence), params: {'confidence': '0.4', 'network': 'Wikipathways WP4760 network stringified'}
2024-06-20 16:45:59,471 [DEBUG] py4...: ǀOK[200], content: 
Finished

2024-06-20 16:45:59,472 [DEBUG] py4...: ǀReturning 'commands_get': ['']
2024-06-20 16:45:59,472 [DEBUG] py4...: Returning 'commands_run': ['']
2024-06-20 16:45:59,472 [DEBUG] py4...: --------------------
2024-06-20 16:46:04,743 [DEBUG] py4...: Calling commands_run('string disease query disease="doid:0050954" species="Homo sapiens" limit=2000 cutoff=0.4')
2024-06-20 16:46:04,744 [DEBUG] py4...: ǀCalling commands_get('string disease query disease="doid:0050954" species="Homo sapiens" limit=2000 cutoff=0.4', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:46:04,744 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/disease%20query), params: {'disease': 'doid:0050954', 'species': 'Homo sapiens', 'limit': '2000', 'cutoff': '0.4'}
2024-06-20 16:46:13,724 [DEBUG] py4...: ǀOK[200], content: Loaded network 'STRING network - spinocerebellar ataxia type 1' with 734 nodes and 15961 edges
Finished

2024-06-20 16:46:13,724 [DEBUG] py4...: ǀReturning 'commands_get': ["Loaded network 'STRING network - spinocerebellar ataxia type 1' with 734 nodes and 15961 edges"]
2024-06-20 16:46:13,724 [DEBUG] py4...: Returning 'commands_run': ["Loaded network 'STRING network - spinocerebellar ataxia type 1' with 734 nodes and 15961 edges"]
2024-06-20 16:46:13,724 [DEBUG] py4...: --------------------
2024-06-20 16:46:13,724 [DEBUG] py4...: Calling rename_network('STRING 0050954 network C0.4')
2024-06-20 16:46:13,725 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:46:13,725 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:46:13,725 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:46:13,732 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 42582
}
],
 "errors":[]
}
2024-06-20 16:46:13,733 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 42582}]
2024-06-20 16:46:13,733 [DEBUG] py4...: ǀReturning 'get_network_suid': 42582
2024-06-20 16:46:13,733 [DEBUG] py4...: ǀCalling commands_post('network rename name="STRING 0050954 network C0.4" sourceNetwork="SUID:42582"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:46:13,733 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'STRING 0050954 network C0.4', 'sourceNetwork': 'SUID:42582'}
2024-06-20 16:46:13,741 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":42582, "title":"STRING 0050954 network C0.4"},
 "errors":[]
}
2024-06-20 16:46:13,742 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 42582, 'title': 'STRING 0050954 network C0.4'}
2024-06-20 16:46:13,742 [DEBUG] py4...: Returning 'rename_network': {'network': 42582, 'title': 'STRING 0050954 network C0.4'}
2024-06-20 16:46:13,742 [DEBUG] py4...: --------------------
2024-06-20 16:47:52,561 [DEBUG] py4...: Calling get_network_list()
2024-06-20 16:47:52,562 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:47:52,562 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:47:52,569 [DEBUG] py4...: ǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:47:52,570 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:47:52,570 [DEBUG] py4...: Returning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:47:52,570 [DEBUG] py4...: --------------------
2024-06-20 16:47:52,570 [DEBUG] py4...: Calling get_network_suid('KEGG hsa05017 network stringified')
2024-06-20 16:47:52,572 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:47:52,572 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:47:52,573 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:47:52,579 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:47:52,580 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:47:52,580 [DEBUG] py4...: ǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:47:52,580 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="KEGG hsa05017 network stringified" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:47:52,581 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'KEGG hsa05017 network stringified', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:47:52,587 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 26235
}
],
 "errors":[]
}
2024-06-20 16:47:52,587 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 26235}]
2024-06-20 16:47:52,588 [DEBUG] py4...: Returning 'get_network_suid': 26235
2024-06-20 16:47:52,588 [DEBUG] py4...: --------------------
2024-06-20 16:47:52,588 [DEBUG] py4...: Calling get_network_suid('Wikipathways WP470 network stringified')
2024-06-20 16:47:52,588 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:47:52,589 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:47:52,589 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:47:52,594 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:47:52,594 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:47:52,595 [DEBUG] py4...: ǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:47:52,595 [DEBUG] py4...: 'get_network_suid' exception CyError('In get_network_suid(): Network does not exist for name "Wikipathways WP470 network stringified"')
2024-06-20 16:47:52,595 [DEBUG] py4...: --------------------
2024-06-20 16:48:32,986 [DEBUG] py4...: Calling get_network_list()
2024-06-20 16:48:32,986 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:32,986 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:48:32,992 [DEBUG] py4...: ǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:48:32,993 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:48:32,993 [DEBUG] py4...: Returning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:48:32,994 [DEBUG] py4...: --------------------
2024-06-20 16:48:32,994 [DEBUG] py4...: Calling get_network_suid('KEGG hsa05017 network stringified')
2024-06-20 16:48:32,994 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:32,995 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:32,995 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:48:33,000 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:48:33,001 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:48:33,001 [DEBUG] py4...: ǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:48:33,001 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="KEGG hsa05017 network stringified" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:33,002 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'KEGG hsa05017 network stringified', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:33,010 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 26235
}
],
 "errors":[]
}
2024-06-20 16:48:33,011 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 26235}]
2024-06-20 16:48:33,011 [DEBUG] py4...: Returning 'get_network_suid': 26235
2024-06-20 16:48:33,011 [DEBUG] py4...: --------------------
2024-06-20 16:48:33,012 [DEBUG] py4...: Calling get_network_suid('Wikipathways WP4760 network stringified')
2024-06-20 16:48:33,012 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:33,012 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:33,013 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:48:33,019 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:48:33,019 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:48:33,020 [DEBUG] py4...: ǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:48:33,020 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Wikipathways WP4760 network stringified" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:33,020 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Wikipathways WP4760 network stringified', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:33,027 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 41686
}
],
 "errors":[]
}
2024-06-20 16:48:33,028 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 41686}]
2024-06-20 16:48:33,028 [DEBUG] py4...: Returning 'get_network_suid': 41686
2024-06-20 16:48:33,028 [DEBUG] py4...: --------------------
2024-06-20 16:48:33,029 [DEBUG] py4...: Calling get_network_suid('STRING 0050954 network C0.4')
2024-06-20 16:48:33,029 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:33,029 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:33,029 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:48:33,034 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981}]
2024-06-20 16:48:33,035 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}]
2024-06-20 16:48:33,035 [DEBUG] py4...: ǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network']
2024-06-20 16:48:33,036 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="STRING 0050954 network C0.4" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:33,036 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'STRING 0050954 network C0.4', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:33,043 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 42582
}
],
 "errors":[]
}
2024-06-20 16:48:33,044 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 42582}]
2024-06-20 16:48:33,044 [DEBUG] py4...: Returning 'get_network_suid': 42582
2024-06-20 16:48:33,044 [DEBUG] py4...: --------------------
2024-06-20 16:48:40,978 [DEBUG] py4...: Calling get_all_nodes(26235)
2024-06-20 16:48:40,979 [DEBUG] py4...: ǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:40,979 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:40,979 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:40,984 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:40,985 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:40,986 [DEBUG] py4...: ǀReturning 'get_network_suid': 26235
2024-06-20 16:48:40,986 [DEBUG] py4...: ǀCalling get_node_count(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:40,986 [DEBUG] py4...: ǀǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:40,987 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:40,987 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:40,992 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:40,993 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:40,993 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:40,993 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/26235/nodes/count', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:40,994 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/26235/nodes/count)
2024-06-20 16:48:40,998 [DEBUG] py4...: ǀǀOK[200], content: {"count":141}
2024-06-20 16:48:40,999 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'count': 141}
2024-06-20 16:48:40,999 [DEBUG] py4...: ǀReturning 'get_node_count': 141
2024-06-20 16:48:40,999 [DEBUG] py4...: ǀCalling cyrest_get('networks/26235/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,000 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/26235/tables/defaultnode/columns/name)
2024-06-20 16:48:41,004 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["9606.ENSP00000288828","9606.ENSP00000223321","9606.ENSP00000500582","9606.ENSP00000230354","9606.ENSP00000501150","9606.ENSP00000496695","9606.ENSP00000271308","9606.ENSP00000306253","9606.ENSP00000329357","9606.ENSP00000458663","9606.ENSP00000428994","9606.ENSP00000432568","9606.ENSP00000338173","9606.ENSP00000359531","9606.ENSP00000261479","9606.ENSP00000357876","9606.ENSP00000440185","9606.ENSP00000440485","9606.ENSP00000354681","9606.ENSP00000443631","9606.ENSP00000252934","9606.ENSP00000414359","9606.ENSP00000440045","9606.ENSP00000362144","9606.ENSP00000215071","9606.ENSP00000434241","9606.ENSP00000353072","9606.ENSP00000366475","9606.ENSP00000219313","9606.ENSP00000401445","9606.ENSP00000370808","9606.ENSP00000281456","9606.ENSP00000348442","9606.ENSP00000311121","9606.ENSP00000234389","9606.ENSP00000355325","9606.ENSP00000309474","9606.ENSP00000442793","9606.ENSP00000309595","9606.ENSP00000371532","9606.ENSP00000496129","9606.ENSP00000262139","9606.ENSP00000363435","9606.ENSP00000431926","9606.ENSP00000044462","9606.ENSP00000277746","9606.ENSP00000341243","9606.ENSP00000222254","9606.ENSP00000368966","9606.ENSP00000324560","9606.ENSP00000477455","9606.ENSP00000365301","9606.ENSP00000157812","9606.ENSP00000349205","9606.ENSP00000481029","9606.ENSP00000352608","9606.ENSP00000367762","9606.ENSP00000369996","9606.ENSP00000263269","9606.ENSP00000378974","9606.ENSP00000345206","9606.ENSP00000260402","9606.ENSP00000432412","9606.ENSP00000353010","9606.ENSP00000428845","9606.ENSP00000355155","9606.ENSP00000259457","9606.ENSP00000361635","9606.ENSP00000489829","9606.ENSP00000415822","9606.ENSP00000237264","9606.ENSP00000310129","9606.ENSP00000354558","9606.ENSP00000488361","9606.ENSP00000247219","9606.ENSP00000351908","9606.ENSP00000481021","9606.ENSP00000340330","9606.ENSP00000483688","9606.ENSP00000370589","9606.ENSP00000360608","9606.ENSP00000370744","9606.ENSP00000286548","9606.ENSP00000281154","9606.ENSP00000264639","9606.ENSP00000360270","9606.ENSP00000261523","9606.ENSP00000290541","9606.ENSP00000221742","9606.ENSP00000391723","9606.ENSP00000247178","9606.ENSP00000408695","9606.ENSP00000250003","9606.ENSP00000293190","9606.ENSP00000269143","9606.ENSP00000263967","9606.ENSP00000386541","9606.ENSP00000261303","9606.ENSP00000262193","9606.ENSP00000307786","9606.ENSP00000296526","9606.ENSP00000375892","9606.ENSP00000216455","9606.ENSP00000378487","9606.ENSP00000025008","9606.ENSP00000332549","9606.ENSP00000366563","9606.ENSP00000360671","9606.ENSP00000391211","9606.ENSP00000216037","9606.ENSP00000262741","9606.ENSP00000362334","9606.ENSP00000338990","9606.ENSP00000378917","9606.ENSP00000263431","9606.ENSP00000319591","9606.ENSP00000394560","9606.ENSP00000360280","9606.ENSP00000428056","9606.ENSP00000282753","9606.ENSP00000392423","9606.ENSP00000378914","9606.ENSP00000481554","9606.ENSP00000451828","9606.ENSP00000359910","9606.ENSP00000247668","9606.ENSP00000355231","9606.ENSP00000261712","9606.ENSP00000270586","9606.ENSP00000225174","9606.ENSP00000349595","9606.ENSP00000418695","9606.ENSP00000262039","9606.ENSP00000478877","9606.ENSP00000345702","9606.ENSP00000338185","9606.ENSP00000446576","9606.ENSP00000484998","9606.ENSP00000396937","9606.ENSP00000244769","9606.ENSP00000310572"]}
2024-06-20 16:48:41,005 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000288828', '9606.ENSP00000223321', '9606.ENSP00000500582', '9606.ENSP00000230354', '9606.ENSP00000501150', '9606.ENSP00000496695', '9606.ENSP00000271308', '9606.ENSP00000306253', '9606.ENSP00000329357', '9606.ENSP00000458663', '9606.ENSP00000428994', '9606.ENSP00000432568', '9606.ENSP00000338173', '9606.ENSP00000359531', '9606.ENSP00000261479', '9606.ENSP00000357876', '9606.ENSP00000440185', '9606.ENSP00000440485', '9606.ENSP00000354681', '9606.ENSP00000443631', '9606.ENSP00000252934', '9606.ENSP00000414359', '9606.ENSP00000440045', '9606.ENSP00000362144', '9606.ENSP00000215071', '9606.ENSP00000434241', '9606.ENSP00000353072', '9606.ENSP00000366475', '9606.ENSP00000219313', '9606.ENSP00000401445', '9606.ENSP00000370808', '9606.ENSP00000281456', '9606.ENSP00000348442', '9606.ENSP00000311121', '9606.ENSP00000234389', '9606.ENSP00000355325', '9606.ENSP00000309474', '9606.ENSP00000442793', '9606.ENSP00000309595', '9606.ENSP00000371532', '9606.ENSP00000496129', '9606.ENSP00000262139', '9606.ENSP00000363435', '9606.ENSP00000431926', '9606.ENSP00000044462', '9606.ENSP00000277746', '9606.ENSP00000341243', '9606.ENSP00000222254', '9606.ENSP00000368966', '9606.ENSP00000324560', '9606.ENSP00000477455', '9606.ENSP00000365301', '9606.ENSP00000157812', '9606.ENSP00000349205', '9606.ENSP00000481029', '9606.ENSP00000352608', '9606.ENSP00000367762', '9606.ENSP00000369996', '9606.ENSP00000263269', '9606.ENSP00000378974', '9606.ENSP00000345206', '9606.ENSP00000260402', '9606.ENSP00000432412', '9606.ENSP00000353010', '9606.ENSP00000428845', '9606.ENSP00000355155', '9606.ENSP00000259457', '9606.ENSP00000361635', '9606.ENSP00000489829', '9606.ENSP00000415822', '9606.ENSP00000237264', '9606.ENSP00000310129', '9606.ENSP00000354558', '9606.ENSP00000488361', '9606.ENSP00000247219', '9606.ENSP00000351908', '9606.ENSP00000481021', '9606.ENSP00000340330', '9606.ENSP00000483688', '9606.ENSP00000370589', '9606.ENSP00000360608', '9606.ENSP00000370744', '9606.ENSP00000286548', '9606.ENSP00000281154', '9606.ENSP00000264639', '9606.ENSP00000360270', '9606.ENSP00000261523', '9606.ENSP00000290541', '9606.ENSP00000221742', '9606.ENSP00000391723', '9606.ENSP00000247178', '9606.ENSP00000408695', '9606.ENSP00000250003', '9606.ENSP00000293190', '9606.ENSP00000269143', '9606.ENSP00000263967', '9606.ENSP00000386541', '9606.ENSP00000261303', '9606.ENSP00000262193', '9606.ENSP00000307786', '9606.ENSP00000296526', '9606.ENSP00000375892', '9606.ENSP00000216455', '9606.ENSP00000378487', '9606.ENSP00000025008', '9606.ENSP00000332549', '9606.ENSP00000366563', '9606.ENSP00000360671', '9606.ENSP00000391211', '9606.ENSP00000216037', '9606.ENSP00000262741', '9606.ENSP00000362334', '9606.ENSP00000338990', '9606.ENSP00000378917', '9606.ENSP00000263431', '9606.ENSP00000319591', '9606.ENSP00000394560', '9606.ENSP00000360280', '9606.ENSP00000428056', '9606.ENSP00000282753', '9606.ENSP00000392423', '9606.ENSP00000378914', '9606.ENSP00000481554', '9606.ENSP00000451828', '9606.ENSP00000359910', '9606.ENSP00000247668', '9606.ENSP00000355231', '9606.ENSP00000261712', '9606.ENSP00000270586', '9606.ENSP00000225174', '9606.ENSP00000349595', '9606.ENSP00000418695', '9606.ENSP00000262039', '9606.ENSP00000478877', '9606.ENSP00000345702', '9606.ENSP00000338185', '9606.ENSP00000446576', '9606.ENSP00000484998', '9606.ENSP00000396937', '9606.ENSP00000244769', '9606.ENSP00000310572']}
2024-06-20 16:48:41,005 [DEBUG] py4...: Returning 'get_all_nodes': ['9606.ENSP00000288828', '9606.ENSP00000223321', '9606.ENSP00000500582', '9606.ENSP00000230354', '9606.ENSP00000501150', '9606.ENSP00000496695', '9606.ENSP00000271308', '9606.ENSP00000306253', '9606.ENSP00000329357', '9606.ENSP00000458663', '9606.ENSP00000428994', '9606.ENSP00000432568', '9606.ENSP00000338173', '9606.ENSP00000359531', '9606.ENSP00000261479', '9606.ENSP00000357876', '9606.ENSP00000440185', '9606.ENSP00000440485', '9606.ENSP00000354681', '9606.ENSP00000443631', '9606.ENSP00000252934', '9606.ENSP00000414359', '9606.ENSP00000440045', '9606.ENSP00000362144', '9606.ENSP00000215071', '9606.ENSP00000434241', '9606.ENSP00000353072', '9606.ENSP00000366475', '9606.ENSP00000219313', '9606.ENSP00000401445', '9606.ENSP00000370808', '9606.ENSP00000281456', '9606.ENSP00000348442', '9606.ENSP00000311121', '9606.ENSP00000234389', '9606.ENSP00000355325', '9606.ENSP00000309474', '9606.ENSP00000442793', '9606.ENSP00000309595', '9606.ENSP00000371532', '9606.ENSP00000496129', '9606.ENSP00000262139', '9606.ENSP00000363435', '9606.ENSP00000431926', '9606.ENSP00000044462', '9606.ENSP00000277746', '9606.ENSP00000341243', '9606.ENSP00000222254', '9606.ENSP00000368966', '9606.ENSP00000324560', '9606.ENSP00000477455', '9606.ENSP00000365301', '9606.ENSP00000157812', '9606.ENSP00000349205', '9606.ENSP00000481029', '9606.ENSP00000352608', '9606.ENSP00000367762', '9606.ENSP00000369996', '9606.ENSP00000263269', '9606.ENSP00000378974', '9606.ENSP00000345206', '9606.ENSP00000260402', '9606.ENSP00000432412', '9606.ENSP00000353010', '9606.ENSP00000428845', '9606.ENSP00000355155', '9606.ENSP00000259457', '9606.ENSP00000361635', '9606.ENSP00000489829', '9606.ENSP00000415822', '9606.ENSP00000237264', '9606.ENSP00000310129', '9606.ENSP00000354558', '9606.ENSP00000488361', '9606.ENSP00000247219', '9606.ENSP00000351908', '9606.ENSP00000481021', '9606.ENSP00000340330', '9606.ENSP00000483688', '9606.ENSP00000370589', '9606.ENSP00000360608', '9606.ENSP00000370744', '9606.ENSP00000286548', '9606.ENSP00000281154', '9606.ENSP00000264639', '9606.ENSP00000360270', '9606.ENSP00000261523', '9606.ENSP00000290541', '9606.ENSP00000221742', '9606.ENSP00000391723', '9606.ENSP00000247178', '9606.ENSP00000408695', '9606.ENSP00000250003', '9606.ENSP00000293190', '9606.ENSP00000269143', '9606.ENSP00000263967', '9606.ENSP00000386541', '9606.ENSP00000261303', '9606.ENSP00000262193', '9606.ENSP00000307786', '9606.ENSP00000296526', '9606.ENSP00000375892', '9606.ENSP00000216455', '9606.ENSP00000378487', '9606.ENSP00000025008', '9606.ENSP00000332549', '9606.ENSP00000366563', '9606.ENSP00000360671', '9606.ENSP00000391211', '9606.ENSP00000216037', '9606.ENSP00000262741', '9606.ENSP00000362334', '9606.ENSP00000338990', '9606.ENSP00000378917', '9606.ENSP00000263431', '9606.ENSP00000319591', '9606.ENSP00000394560', '9606.ENSP00000360280', '9606.ENSP00000428056', '9606.ENSP00000282753', '9606.ENSP00000392423', '9606.ENSP00000378914', '9606.ENSP00000481554', '9606.ENSP00000451828', '9606.ENSP00000359910', '9606.ENSP00000247668', '9606.ENSP00000355231', '9606.ENSP00000261712', '9606.ENSP00000270586', '9606.ENSP00000225174', '9606.ENSP00000349595', '9606.ENSP00000418695', '9606.ENSP00000262039', '9606.ENSP00000478877', '9606.ENSP00000345702', '9606.ENSP00000338185', '9606.ENSP00000446576', '9606.ENSP00000484998', '9606.ENSP00000396937', '9606.ENSP00000244769', '9606.ENSP00000310572']
2024-06-20 16:48:41,005 [DEBUG] py4...: --------------------
2024-06-20 16:48:41,006 [DEBUG] py4...: Calling get_all_nodes(41686)
2024-06-20 16:48:41,007 [DEBUG] py4...: ǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,007 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,007 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:41,011 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:41,012 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:41,012 [DEBUG] py4...: ǀReturning 'get_network_suid': 41686
2024-06-20 16:48:41,012 [DEBUG] py4...: ǀCalling get_node_count(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,012 [DEBUG] py4...: ǀǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,013 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,013 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:41,017 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:41,017 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:41,017 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:41,017 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/41686/nodes/count', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,018 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/41686/nodes/count)
2024-06-20 16:48:41,021 [DEBUG] py4...: ǀǀOK[200], content: {"count":21}
2024-06-20 16:48:41,022 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'count': 21}
2024-06-20 16:48:41,022 [DEBUG] py4...: ǀReturning 'get_node_count': 21
2024-06-20 16:48:41,022 [DEBUG] py4...: ǀCalling cyrest_get('networks/41686/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,022 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/41686/tables/defaultnode/columns/name)
2024-06-20 16:48:41,026 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["9606.ENSP00000365807","9606.ENSP00000314407","9606.ENSP00000443631","9606.ENSP00000376352","9606.ENSP00000489262","9606.ENSP00000296526","9606.ENSP00000368966","9606.ENSP00000428994","9606.ENSP00000367762","9606.ENSP00000263431","9606.ENSP00000078429","9606.ENSP00000282499","9606.ENSP00000338185","9606.ENSP00000489829","9606.ENSP00000353414","9606.ENSP00000282753","9606.ENSP00000439937","9606.ENSP00000262958","9606.ENSP00000286548","9606.ENSP00000260402","9606.ENSP00000481554"]}
2024-06-20 16:48:41,026 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000365807', '9606.ENSP00000314407', '9606.ENSP00000443631', '9606.ENSP00000376352', '9606.ENSP00000489262', '9606.ENSP00000296526', '9606.ENSP00000368966', '9606.ENSP00000428994', '9606.ENSP00000367762', '9606.ENSP00000263431', '9606.ENSP00000078429', '9606.ENSP00000282499', '9606.ENSP00000338185', '9606.ENSP00000489829', '9606.ENSP00000353414', '9606.ENSP00000282753', '9606.ENSP00000439937', '9606.ENSP00000262958', '9606.ENSP00000286548', '9606.ENSP00000260402', '9606.ENSP00000481554']}
2024-06-20 16:48:41,027 [DEBUG] py4...: Returning 'get_all_nodes': ['9606.ENSP00000365807', '9606.ENSP00000314407', '9606.ENSP00000443631', '9606.ENSP00000376352', '9606.ENSP00000489262', '9606.ENSP00000296526', '9606.ENSP00000368966', '9606.ENSP00000428994', '9606.ENSP00000367762', '9606.ENSP00000263431', '9606.ENSP00000078429', '9606.ENSP00000282499', '9606.ENSP00000338185', '9606.ENSP00000489829', '9606.ENSP00000353414', '9606.ENSP00000282753', '9606.ENSP00000439937', '9606.ENSP00000262958', '9606.ENSP00000286548', '9606.ENSP00000260402', '9606.ENSP00000481554']
2024-06-20 16:48:41,027 [DEBUG] py4...: --------------------
2024-06-20 16:48:41,028 [DEBUG] py4...: Calling get_all_nodes(42582)
2024-06-20 16:48:41,028 [DEBUG] py4...: ǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,028 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,028 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:41,033 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:41,033 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:41,034 [DEBUG] py4...: ǀReturning 'get_network_suid': 42582
2024-06-20 16:48:41,034 [DEBUG] py4...: ǀCalling get_node_count(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,034 [DEBUG] py4...: ǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,034 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,034 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:41,038 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:41,039 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:41,039 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:41,039 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/42582/nodes/count', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,039 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/nodes/count)
2024-06-20 16:48:41,045 [DEBUG] py4...: ǀǀOK[200], content: {"count":734}
2024-06-20 16:48:41,045 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'count': 734}
2024-06-20 16:48:41,045 [DEBUG] py4...: ǀReturning 'get_node_count': 734
2024-06-20 16:48:41,045 [DEBUG] py4...: ǀCalling cyrest_get('networks/42582/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:41,045 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns/name)
2024-06-20 16:48:41,053 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["9606.ENSP00000263160","9606.ENSP00000227507","9606.ENSP00000400142","9606.ENSP00000252804","9606.ENSP00000371985","9606.ENSP00000418447","9606.ENSP00000342056","9606.ENSP00000362014","9606.ENSP00000265459","9606.ENSP00000258106","9606.ENSP00000263038","9606.ENSP00000326366","9606.ENSP00000450873","9606.ENSP00000354929","9606.ENSP00000221996","9606.ENSP00000478887","9606.ENSP00000331040","9606.ENSP00000408526","9606.hsa-miR-155-5p","9606.ENSP00000477437","9606.ENSP00000246914","9606.ENSP00000359095","9606.ENSP00000299001","9606.ENSP00000432568","9606.ENSP00000220420","9606.ENSP00000380903","9606.ENSP00000392423","9606.ENSP00000498362","9606.hsa-miR-132-3p","9606.ENSP00000374354","9606.ENSP00000355231","9606.ENSP00000354923","9606.ENSP00000378394","9606.ENSP00000351777","9606.ENSP00000336712","9606.ENSP00000260665","9606.ENSP00000215095","9606.ENSP00000390941","9606.hsa-miR-106b-5p","9606.ENSP00000443631","9606.ENSP00000442920","9606.ENSP00000484060","9606.ENSP00000312987","9606.ENSP00000224140","9606.ENSP00000473623","9606.ENSP00000295987","9606.ENSP00000262039","9606.ENSP00000419243","9606.ENSP00000323511","9606.ENSP00000358283","9606.ENSP00000321455","9606.ENSP00000364204","9606.ENSP00000264335","9606.ENSP00000287713","9606.ENSP00000252482","9606.ENSP00000282020","9606.ENSP00000265421","9606.ENSP00000282146","9606.ENSP00000244769","9606.ENSP00000364210","9606.ENSP00000303709","9606.ENSP00000430432","9606.ENSP00000278616","9606.hsa-miR-1909-3p","9606.ENSP00000354497","9606.ENSP00000352738","9606.ENSP00000378284","9606.ENSP00000228872","9606.ENSP00000470248","9606.ENSP00000398698","9606.ENSP00000480050","9606.ENSP00000337353","9606.hsa-miR-760","9606.ENSP00000406293","9606.ENSP00000356790","9606.ENSP00000260116","9606.ENSP00000230354","9606.ENSP00000442793","9606.ENSP00000255631","9606.ENSP00000489624","9606.hsa-miR-144-3p","9606.ENSP00000464342","9606.ENSP00000252486","9606.ENSP00000285419","9606.ENSP00000369689","9606.ENSP00000286628","9606.ENSP00000343001","9606.ENSP00000391942","9606.hsa-miR-130a-3p","9606.ENSP00000441685","9606.ENSP00000302967","9606.ENSP00000490614","9606.ENSP00000263257","9606.ENSP00000358155","9606.ENSP00000428994","9606.ENSP00000383199","9606.ENSP00000359890","9606.ENSP00000340989","9606.ENSP00000265431","9606.ENSP00000292246","9606.ENSP00000354125","9606.ENSP00000295756","9606.ENSP00000358967","9606.ENSP00000358151","9606.ENSP00000310585","9606.ENSP00000362399","9606.ENSP00000357876","9606.ENSP00000363123","9606.ENSP00000417864","9606.ENSP00000295757","9606.ENSP00000354360","9606.ENSP00000040584","9606.ENSP00000492363","9606.ENSP00000365301","9606.ENSP00000219476","9606.ENSP00000386229","9606.ENSP00000291700","9606.ENSP00000287820","9606.ENSP00000368007","9606.ENSP00000263754","9606.ENSP00000288490","9606.ENSP00000284551","9606.ENSP00000434241","9606.ENSP00000302108","9606.ENSP00000403343","9606.ENSP00000385142","9606.ENSP00000264036","9606.ENSP00000283228","9606.ENSP00000391381","9606.ENSP00000406286","9606.hsa-miR-548ae","9606.ENSP00000479719","9606.ENSP00000320347","9606.ENSP00000264606","9606.ENSP00000258962","9606.ENSP00000337103","9606.ENSP00000424566","9606.ENSP00000270142","9606.ENSP00000426503","9606.ENSP00000272444","9606.ENSP00000402257","9606.ENSP00000298910","9606.ENSP00000264276","9606.ENSP00000341826","9606.ENSP00000269601","9606.ENSP00000345195","9606.ENSP00000366070","9606.ENSP00000294435","9606.ENSP00000277120","9606.ENSP00000480916","9606.ENSP00000391269","9606.ENSP00000357292","9606.ENSP00000480012","9606.ENSP00000303356","9606.ENSP00000494538","9606.ENSP00000323046","9606.ENSP00000220592","9606.ENSP00000053867","9606.ENSP00000354111","9606.ENSP00000387593","9606.ENSP00000415676","9606.ENSP00000282486","9606.ENSP00000240185","9606.ENSP00000391723","9606.ENSP00000497806","9606.ENSP00000351742","9606.ENSP00000496959","9606.ENSP00000376322","9606.ENSP00000254488","9606.ENSP00000335153","9606.ENSP00000266594","9606.ENSP00000261667","9606.ENSP00000435466","9606.ENSP00000263967","9606.ENSP00000313829","9606.ENSP00000487785","9606.ENSP00000265381","9606.ENSP00000410769","9606.ENSP00000345997","9606.ENSP00000261427","9606.ENSP00000265379","9606.ENSP00000257290","9606.ENSP00000225916","9606.ENSP00000246186","9606.ENSP00000481593","9606.ENSP00000500386","9606.ENSP00000439937","9606.ENSP00000313007","9606.ENSP00000370571","9606.ENSP00000295897","9606.ENSP00000297261","9606.ENSP00000362299","9606.ENSP00000310561","9606.ENSP00000295777","9606.ENSP00000354346","9606.ENSP00000345064","9606.ENSP00000282928","9606.ENSP00000387699","9606.ENSP00000309457","9606.ENSP00000258149","9606.ENSP00000381488","9606.ENSP00000364118","9606.ENSP00000298596","9606.ENSP00000272317","9606.ENSP00000267890","9606.ENSP00000497594","9606.ENSP00000379287","9606.ENSP00000497112","9606.ENSP00000360660","9606.ENSP00000397259","9606.ENSP00000266682","9606.ENSP00000477999","9606.ENSP00000265351","9606.ENSP00000282356","9606.ENSP00000301727","9606.ENSP00000351614","9606.ENSP00000369127","9606.ENSP00000313377","9606.ENSP00000370589","9606.ENSP00000339867","9606.ENSP00000302814","9606.ENSP00000228644","9606.ENSP00000343690","9606.ENSP00000410759","9606.ENSP00000264498","9606.ENSP00000356982","9606.ENSP00000264255","9606.NEAT1","9606.ENSP00000436679","9606.ENSP00000381382","9606.FAM41C","9606.ENSP00000379181","9606.ENSP00000324806","9606.ENSP00000435412","9606.ENSP00000469455","9606.ENSP00000436864","9606.ENSP00000354335","9606.ENSP00000401633","9606.ENSP00000361405","9606.ENSP00000386710","9606.ENSP00000384625","9606.ENSP00000265171","9606.ENSP00000489189","9606.ENSP00000259727","9606.ENSP00000332549","9606.ENSP00000340278","9606.ENSP00000231004","9606.ENSP00000343552","9606.ENSP00000494750","9606.ENSP00000260950","9606.ENSP00000264033","9606.ENSP00000369145","9606.ENSP00000363822","9606.ENSP00000409007","9606.ENSP00000254108","9606.ENSP00000354558","9606.ENSP00000425561","9606.ENSP00000482753","9606.ENSP00000370119","9606.ENSP00000355645","9606.ENSP00000319591","9606.ENSP00000354553","9606.ENSP00000340292","9606.ENSP00000370125","9606.ENSP00000265113","9606.ENSP00000375810","9606.ENSP00000355657","9606.ENSP00000352257","9606.ENSP00000451828","9606.ENSP00000382104","9606.ENSP00000401371","9606.ENSP00000222330","9606.hsa-miR-559","9606.ENSP00000308533","9606.ENSP00000377681","9606.hsa-miR-134-5p","9606.ENSP00000250113","9606.ENSP00000221485","9606.ENSP00000254719","9606.ENSP00000222574","9606.hsa-miR-433-3p","9606.ENSP00000352252","9606.ENSP00000418994","9606.hsa-miR-107","9606.ENSP00000306920","9606.ENSP00000364813","9606.ENSP00000365458","9606.ENSP00000352011","9606.ENSP00000397297","9606.hsa-miR-9-5p","9606.ENSP00000497217","9606.ENSP00000343535","9606.ENSP00000216200","9606.ENSP00000425979","9606.ENSP00000365576","9606.ENSP00000419395","9606.ENSP00000368966","9606.ENSP00000492795","9606.ENSP00000261366","9606.ENSP00000395535","9606.ENSP00000329918","9606.hsa-miR-101-3p","9606.hsa-miR-520c-3p","9606.ENSP00000291568","9606.ENSP00000368970","9606.ENSP00000262904","9606.ENSP00000405327","9606.ENSP00000467262","9606.ENSP00000261367","9606.ENSP00000371101","9606.ENSP00000489829","9606.ENSP00000392028","9606.ENSP00000471191","9606.ENSP00000221233","9606.ENSP00000305702","9606.ENSP00000481554","9606.ENSP00000379616","9606.ENSP00000467024","9606.ENSP00000374049","9606.ENSP00000355511","9606.ENSP00000250003","9606.ENSP00000332772","9606.ENSP00000339835","9606.ENSP00000362649","9606.ENSP00000338629","9606.ENSP00000360108","9606.ENSP00000365227","9606.ENSP00000353331","9606.ENSP00000301587","9606.ENSP00000222584","9606.ENSP00000380602","9606.ENSP00000259708","9606.ENSP00000327513","9606.ENSP00000447537","9606.ENSP00000340820","9606.ENSP00000246672","9606.ENSP00000254722","9606.ENSP00000311816","9606.ENSP00000499501","9606.ENSP00000320650","9606.ENSP00000498653","9606.hsa-miR-124-3p","9606.ENSP00000284240","9606.ENSP00000361433","9606.ENSP00000439585","9606.ENSP00000316032","9606.ENSP00000368984","9606.hsa-miR-17-5p","9606.ENSP00000366563","9606.ENSP00000419260","9606.ENSP00000237014","9606.AC007879.5","9606.ENSP00000323148","9606.ENSP00000446576","9606.ENSP00000263431","9606.ENSP00000355747","9606.ENSP00000405674","9606.ENSP00000354416","9606.ENSP00000338512","9606.ENSP00000356953","9606.ENSP00000399376","9606.ENSP00000359489","9606.ENSP00000298556","9606.ENSP00000355865","9606.ENSP00000226382","9606.ENSP00000355741","9606.ENSP00000346483","9606.ENSP00000246548","9606.ENSP00000304643","9606.ENSP00000373413","9606.ENSP00000254810","9606.ENSP00000376921","9606.ENSP00000302100","9606.ENSP00000350170","9606.ENSP00000252996","9606.hsa-miR-29a-3p","9606.ENSP00000366330","9606.ENSP00000248600","9606.ENSP00000216218","9606.ENSP00000306138","9606.ENSP00000288943","9606.ENSP00000202625","9606.ENSP00000349748","9606.ENSP00000245451","9606.ENSP00000366452","9606.ENSP00000360231","9606.hsa-miR-93-5p","9606.ENSP00000471851","9606.ENSP00000364270","9606.ENSP00000340125","9606.ENSP00000302216","9606.ENSP00000343515","9606.ENSP00000221801","9606.ENSP00000501150","9606.ENSP00000413035","9606.ENSP00000265164","9606.ENSP00000359804","9606.ENSP00000259711","9606.ENSP00000415579","9606.ENSP00000306253","9606.ENSP00000273320","9606.ENSP00000305288","9606.ENSP00000418721","9606.ENSP00000458663","9606.ENSP00000307900","9606.ENSP00000329357","9606.ENSP00000496695","9606.ENSP00000318585","9606.ENSP00000418960","9606.ENSP00000478249","9606.ENSP00000303540","9606.ENSP00000393379","9606.ENSP00000240316","9606.ENSP00000457205","9606.ENSP00000260386","9606.ENSP00000288135","9606.ENSP00000368884","9606.ENSP00000458537","9606.ENSP00000454852","9606.ENSP00000338173","9606.ENSP00000285667","9606.ENSP00000380070","9606.ENSP00000368881","9606.ENSP00000359019","9606.ENSP00000477715","9606.ENSP00000417901","9606.ENSP00000221930","9606.ENSP00000490107","9606.ENSP00000332194","9606.ENSP00000219197","9606.ENSP00000180166","9606.ENSP00000381185","9606.ENSP00000316842","9606.ENSP00000254079","9606.ENSP00000296271","9606.ENSP00000362300","9606.ENSP00000264867","9606.ENSP00000349298","9606.ENSP00000311032","9606.ENSP00000295900","9606.ENSP00000293288","9606.SNORD58B","9606.hsa-miR-34c-5p","9606.ENSP00000306561","9606.ENSP00000500990","9606.ENSP00000256261","9606.ENSP00000295589","9606.ENSP00000419081","9606.ENSP00000475626","9606.ENSP00000479667","9606.ENSP00000233813","9606.hsa-miR-1225-3p","9606.ENSP00000406209","9606.ENSP00000455698","9606.ENSP00000348645","9606.ENSP00000321835","9606.ENSP00000216127","9606.ENSP00000371133","9606.ENSP00000369863","9606.ENSP00000261601","9606.ENSP00000300213","9606.ENSP00000225504","9606.ENSP00000264552","9606.ENSP00000308610","9606.ENSP00000495360","9606.ENSP00000421339","9606.ENSP00000240100","9606.ENSP00000381057","9606.ENSP00000334002","9606.ENSP00000411355","9606.ENSP00000333277","9606.ENSP00000295910","9606.ENSP00000438574","9606.ENSP00000340467","9606.ENSP00000377372","9606.ENSP00000477141","9606.ENSP00000463653","9606.ENSP00000360493","9606.ENSP00000310036","9606.ENSP00000385410","9606.ENSP00000249396","9606.ENSP00000294702","9606.ENSP00000357583","9606.ENSP00000349168","9606.ENSP00000276654","9606.ENSP00000215832","9606.ENSP00000216254","9606.ENSP00000261731","9606.ENSP00000324560","9606.ENSP00000362680","9606.ENSP00000346694","9606.ENSP00000353414","9606.ENSP00000437125","9606.ENSP00000409279","9606.ENSP00000349722","9606.ENSP00000350386","9606.ENSP00000283195","9606.ENSP00000339004","9606.ENSP00000264689","9606.ENSP00000321606","9606.ENSP00000369996","9606.ENSP00000414856","9606.ENSP00000323588","9606.ENSP00000248975","9606.ENSP00000181796","9606.ENSP00000371267","9606.ENSP00000378338","9606.ENSP00000370058","9606.ENSP00000239231","9606.ENSP00000315299","9606.ENSP00000378699","9606.ENSP00000415822","9606.ENSP00000333262","9606.ENSP00000370193","9606.ENSP00000483254","9606.ENSP00000422435","9606.ENSP00000482169","9606.ENSP00000258415","9606.ENSP00000380432","9606.ENSP00000349156","9606.ENSP00000253408","9606.ENSP00000384474","9606.HTT-AS","9606.ENSP00000358784","9606.ENSP00000265195","9606.ENSP00000440045","9606.ENSP00000378476","9606.ENSP00000362205","9606.ENSP00000252934","9606.ENSP00000250495","9606.ENSP00000340330","9606.ENSP00000247225","9606.ENSP00000310129","9606.ENSP00000360266","9606.ENSP00000296755","9606.ENSP00000359719","9606.ENSP00000499387","9606.ENSP00000358089","9606.ENSP00000230321","9606.ENSP00000377936","9606.ENSP00000329403","9606.ENSP00000216144","9606.ENSP00000314173","9606.ENSP00000430241","9606.ENSP00000319060","9606.ENSP00000354859","9606.ENSP00000430000","9606.ENSP00000325863","9606.ENSP00000258302","9606.ENSP00000476119","9606.ENSP00000366488","9606.ENSP00000481848","9606.ENSP00000234389","9606.ENSP00000437256","9606.ENSP00000279488","9606.ENSP00000363435","9606.ENSP00000366249","9606.ENSP00000398632","9606.ENSP00000477455","9606.ENSP00000254976","9606.ENSP00000316357","9606.ENSP00000216714","9606.ENSP00000347896","9606.ENSP00000269305","9606.ENSP00000320821","9606.ENSP00000264657","9606.ENSP00000353646","9606.ENSP00000397563","9606.ENSP00000263205","9606.ENSP00000353767","9606.ENSP00000353864","9606.ENSP00000345347","9606.ENSP00000265081","9606.ENSP00000318635","9606.ENSP00000408617","9606.ENSP00000364639","9606.ENSP00000223129","9606.ENSP00000370744","9606.ENSP00000307786","9606.FMR1-AS1","9606.ENSP00000428426","9606.ENSP00000305480","9606.ENSP00000291295","9606.ENSP00000453858","9606.ENSP00000245255","9606.ENSP00000261523","9606.ENSP00000377015","9606.ENSP00000453170","9606.ENSP00000244061","9606.ENSP00000293190","9606.ENSP00000276079","9606.ENSP00000269143","9606.ENSP00000355028","9606.ENSP00000370083","9606.ENSP00000268058","9606.ENSP00000263209","9606.ENSP00000278379","9606.ENSP00000347184","9606.hsa-miR-150-5p","9606.ENSP00000365601","9606.ENSP00000307604","9606.ENSP00000357206","9606.hsa-miR-9-3p","9606.ENSP00000361021","9606.ENSP00000334463","9606.ENSP00000348056","9606.ENSP00000386786","9606.ENSP00000357565","9606.ENSP00000332706","9606.ENSP00000296526","9606.ENSP00000458065","9606.ENSP00000385675","9606.ENSP00000305422","9606.ENSP00000359727","9606.ENSP00000362578","9606.ENSP00000365861","9606.ENSP00000356231","9606.ENSP00000306330","9606.ENSP00000361027","9606.ENSP00000378487","9606.ENSP00000431162","9606.hsa-miR-548g-3p","9606.ENSP00000371729","9606.hsa-miR-320d","9606.ENSP00000304331","9606.ENSP00000013807","9606.ENSP00000435637","9606.ENSP00000385216","9606.ENSP00000346671","9606.ENSP00000427900","9606.MIR17HG","9606.ENSP00000350928","9606.ENSP00000360280","9606.AC006129.1","9606.ENSP00000219548","9606.ENSP00000282753","9606.ENSP00000216727","9606.ENSP00000284262","9606.ENSP00000261837","9606.ATXN8OS","9606.ENSP00000368314","9606.ENSP00000374552","9606.ENSP00000256079","9606.hsa-miR-128-3p","9606.hsa-miR-4305","9606.ENSP00000315137","9606.ENSP00000347997","9606.ENSP00000261712","9606.ENSP00000376753","9606.ENSP00000406549","9606.ENSP00000317333","9606.ENSP00000399851","9606.ENSP00000369531","9606.ENSP00000358886","9606.ENSP00000383042","9606.ENSP00000403397","9606.ENSP00000359978","9606.ENSP00000374455","9606.ENSP00000429763","9606.ENSP00000438886","9606.hsa-miR-379-3p","9606.ENSP00000262367","9606.ENSP00000353072","9606.ENSP00000376637","9606.ENSP00000369895","9606.ENSP00000376197","9606.ENSP00000462298","9606.ENSP00000262241","9606.ENSP00000355370","9606.ENSP00000225577","9606.ENSP00000333363","9606.ENSP00000376077","9606.ENSP00000347170","9606.ENSP00000358525","9606.ENSP00000302961","9606.ENSP00000324173","9606.ENSP00000309591","9606.ENSP00000419782","9606.ENSP00000345571","9606.ENSP00000418572","9606.ENSP00000495557","9606.ENSP00000327687","9606.ENSP00000309595","9606.ENSP00000365514","9606.ENSP00000361930","9606.ENSP00000270225","9606.ENSP00000290649","9606.ENSP00000362485","9606.ENSP00000309477","9606.ENSP00000386458","9606.ENSP00000345575","9606.ENSP00000388638","9606.ENSP00000346534","9606.ENSP00000270349","9606.ENSP00000368332","9606.ENSP00000212015","9606.ENSP00000405965","9606.ENSP00000284981","9606.ENSP00000345206","9606.ENSP00000282561","9606.ENSP00000493382","9606.ENSP00000498255","9606.ENSP00000263025","9606.ENSP00000478877","9606.hsa-miR-548w","9606.hsa-miR-133b","9606.ENSP00000462745","9606.ENSP00000352516","9606.ENSP00000358518","9606.ENSP00000405388","9606.ENSP00000268712","9606.ENSP00000359085","9606.ENSP00000360609","9606.ENSP00000362131","9606.hsa-miR-659-3p","9606.ENSP00000499582","9606.ENSP00000422185","9606.ENSP00000454229","9606.ENSP00000221742","9606.ENSP00000489407","9606.ENSP00000359506","9606.ENSP00000444433","9606.ENSP00000414303","9606.ENSP00000391803","9606.ENSP00000379350","9606.ENSP00000399403","9606.hsa-miR-106a-5p","9606.ENSP00000379915","9606.ENSP00000254322","9606.ENSP00000269228","9606.ENSP00000403888","9606.ENSP00000306894","9606.ENSP00000254325","9606.ENSP00000307863"]}
2024-06-20 16:48:41,053 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000263160', '9606.ENSP00000227507', '9606.ENSP00000400142', '9606.ENSP00000252804', '9606.ENSP00000371985', '9606.ENSP00000418447', '9606.ENSP00000342056', '9606.ENSP00000362014', '9606.ENSP00000265459', '9606.ENSP00000258106', '9606.ENSP00000263038', '9606.ENSP00000326366', '9606.ENSP00000450873', '9606.ENSP00000354929', '9606.ENSP00000221996', '9606.ENSP00000478887', '9606.ENSP00000331040', '9606.ENSP00000408526', '9606.hsa-miR-155-5p', '9606.ENSP00000477437', '9606.ENSP00000246914', '9606.ENSP00000359095', '9606.ENSP00000299001', '9606.ENSP00000432568', '9606.ENSP00000220420', '9606.ENSP00000380903', '9606.ENSP00000392423', '9606.ENSP00000498362', '9606.hsa-miR-132-3p', '9606.ENSP00000374354', '9606.ENSP00000355231', '9606.ENSP00000354923', '9606.ENSP00000378394', '9606.ENSP00000351777', '9606.ENSP00000336712', '9606.ENSP00000260665', '9606.ENSP00000215095', '9606.ENSP00000390941', '9606.hsa-miR-106b-5p', '9606.ENSP00000443631', '9606.ENSP00000442920', '9606.ENSP00000484060', '9606.ENSP00000312987', '9606.ENSP00000224140', '9606.ENSP00000473623', '9606.ENSP00000295987', '9606.ENSP00000262039', '9606.ENSP00000419243', '9606.ENSP00000323511', '9606.ENSP00000358283', '9606.ENSP00000321455', '9606.ENSP00000364204', '9606.ENSP00000264335', '9606.ENSP00000287713', '9606.ENSP00000252482', '9606.ENSP00000282020', '9606.ENSP00000265421', '9606.ENSP00000282146', '9606.ENSP00000244769', '9606.ENSP00000364210', '9606.ENSP00000303709', '9606.ENSP00000430432', '9606.ENSP00000278616', '9606.hsa-miR-1909-3p', '9606.ENSP00000354497', '9606.ENSP00000352738', '9606.ENSP00000378284', '9606.ENSP00000228872', '9606.ENSP00000470248', '9606.ENSP00000398698', '9606.ENSP00000480050', '9606.ENSP00000337353', '9606.hsa-miR-760', '9606.ENSP00000406293', '9606.ENSP00000356790', '9606.ENSP00000260116', '9606.ENSP00000230354', '9606.ENSP00000442793', '9606.ENSP00000255631', '9606.ENSP00000489624', '9606.hsa-miR-144-3p', '9606.ENSP00000464342', '9606.ENSP00000252486', '9606.ENSP00000285419', '9606.ENSP00000369689', '9606.ENSP00000286628', '9606.ENSP00000343001', '9606.ENSP00000391942', '9606.hsa-miR-130a-3p', '9606.ENSP00000441685', '9606.ENSP00000302967', '9606.ENSP00000490614', '9606.ENSP00000263257', '9606.ENSP00000358155', '9606.ENSP00000428994', '9606.ENSP00000383199', '9606.ENSP00000359890', '9606.ENSP00000340989', '9606.ENSP00000265431', '9606.ENSP00000292246', '9606.ENSP00000354125', '9606.ENSP00000295756', '9606.ENSP00000358967', '9606.ENSP00000358151', '9606.ENSP00000310585', '9606.ENSP00000362399', '9606.ENSP00000357876', '9606.ENSP00000363123', '9606.ENSP00000417864', '9606.ENSP00000295757', '9606.ENSP00000354360', '9606.ENSP00000040584', '9606.ENSP00000492363', '9606.ENSP00000365301', '9606.ENSP00000219476', '9606.ENSP00000386229', '9606.ENSP00000291700', '9606.ENSP00000287820', '9606.ENSP00000368007', '9606.ENSP00000263754', '9606.ENSP00000288490', '9606.ENSP00000284551', '9606.ENSP00000434241', '9606.ENSP00000302108', '9606.ENSP00000403343', '9606.ENSP00000385142', '9606.ENSP00000264036', '9606.ENSP00000283228', '9606.ENSP00000391381', '9606.ENSP00000406286', '9606.hsa-miR-548ae', '9606.ENSP00000479719', '9606.ENSP00000320347', '9606.ENSP00000264606', '9606.ENSP00000258962', '9606.ENSP00000337103', '9606.ENSP00000424566', '9606.ENSP00000270142', '9606.ENSP00000426503', '9606.ENSP00000272444', '9606.ENSP00000402257', '9606.ENSP00000298910', '9606.ENSP00000264276', '9606.ENSP00000341826', '9606.ENSP00000269601', '9606.ENSP00000345195', '9606.ENSP00000366070', '9606.ENSP00000294435', '9606.ENSP00000277120', '9606.ENSP00000480916', '9606.ENSP00000391269', '9606.ENSP00000357292', '9606.ENSP00000480012', '9606.ENSP00000303356', '9606.ENSP00000494538', '9606.ENSP00000323046', '9606.ENSP00000220592', '9606.ENSP00000053867', '9606.ENSP00000354111', '9606.ENSP00000387593', '9606.ENSP00000415676', '9606.ENSP00000282486', '9606.ENSP00000240185', '9606.ENSP00000391723', '9606.ENSP00000497806', '9606.ENSP00000351742', '9606.ENSP00000496959', '9606.ENSP00000376322', '9606.ENSP00000254488', '9606.ENSP00000335153', '9606.ENSP00000266594', '9606.ENSP00000261667', '9606.ENSP00000435466', '9606.ENSP00000263967', '9606.ENSP00000313829', '9606.ENSP00000487785', '9606.ENSP00000265381', '9606.ENSP00000410769', '9606.ENSP00000345997', '9606.ENSP00000261427', '9606.ENSP00000265379', '9606.ENSP00000257290', '9606.ENSP00000225916', '9606.ENSP00000246186', '9606.ENSP00000481593', '9606.ENSP00000500386', '9606.ENSP00000439937', '9606.ENSP00000313007', '9606.ENSP00000370571', '9606.ENSP00000295897', '9606.ENSP00000297261', '9606.ENSP00000362299', '9606.ENSP00000310561', '9606.ENSP00000295777', '9606.ENSP00000354346', '9606.ENSP00000345064', '9606.ENSP00000282928', '9606.ENSP00000387699', '9606.ENSP00000309457', '9606.ENSP00000258149', '9606.ENSP00000381488', '9606.ENSP00000364118', '9606.ENSP00000298596', '9606.ENSP00000272317', '9606.ENSP00000267890', '9606.ENSP00000497594', '9606.ENSP00000379287', '9606.ENSP00000497112', '9606.ENSP00000360660', '9606.ENSP00000397259', '9606.ENSP00000266682', '9606.ENSP00000477999', '9606.ENSP00000265351', '9606.ENSP00000282356', '9606.ENSP00000301727', '9606.ENSP00000351614', '9606.ENSP00000369127', '9606.ENSP00000313377', '9606.ENSP00000370589', '9606.ENSP00000339867', '9606.ENSP00000302814', '9606.ENSP00000228644', '9606.ENSP00000343690', '9606.ENSP00000410759', '9606.ENSP00000264498', '9606.ENSP00000356982', '9606.ENSP00000264255', '9606.NEAT1', '9606.ENSP00000436679', '9606.ENSP00000381382', '9606.FAM41C', '9606.ENSP00000379181', '9606.ENSP00000324806', '9606.ENSP00000435412', '9606.ENSP00000469455', '9606.ENSP00000436864', '9606.ENSP00000354335', '9606.ENSP00000401633', '9606.ENSP00000361405', '9606.ENSP00000386710', '9606.ENSP00000384625', '9606.ENSP00000265171', '9606.ENSP00000489189', '9606.ENSP00000259727', '9606.ENSP00000332549', '9606.ENSP00000340278', '9606.ENSP00000231004', '9606.ENSP00000343552', '9606.ENSP00000494750', '9606.ENSP00000260950', '9606.ENSP00000264033', '9606.ENSP00000369145', '9606.ENSP00000363822', '9606.ENSP00000409007', '9606.ENSP00000254108', '9606.ENSP00000354558', '9606.ENSP00000425561', '9606.ENSP00000482753', '9606.ENSP00000370119', '9606.ENSP00000355645', '9606.ENSP00000319591', '9606.ENSP00000354553', '9606.ENSP00000340292', '9606.ENSP00000370125', '9606.ENSP00000265113', '9606.ENSP00000375810', '9606.ENSP00000355657', '9606.ENSP00000352257', '9606.ENSP00000451828', '9606.ENSP00000382104', '9606.ENSP00000401371', '9606.ENSP00000222330', '9606.hsa-miR-559', '9606.ENSP00000308533', '9606.ENSP00000377681', '9606.hsa-miR-134-5p', '9606.ENSP00000250113', '9606.ENSP00000221485', '9606.ENSP00000254719', '9606.ENSP00000222574', '9606.hsa-miR-433-3p', '9606.ENSP00000352252', '9606.ENSP00000418994', '9606.hsa-miR-107', '9606.ENSP00000306920', '9606.ENSP00000364813', '9606.ENSP00000365458', '9606.ENSP00000352011', '9606.ENSP00000397297', '9606.hsa-miR-9-5p', '9606.ENSP00000497217', '9606.ENSP00000343535', '9606.ENSP00000216200', '9606.ENSP00000425979', '9606.ENSP00000365576', '9606.ENSP00000419395', '9606.ENSP00000368966', '9606.ENSP00000492795', '9606.ENSP00000261366', '9606.ENSP00000395535', '9606.ENSP00000329918', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.ENSP00000291568', '9606.ENSP00000368970', '9606.ENSP00000262904', '9606.ENSP00000405327', '9606.ENSP00000467262', '9606.ENSP00000261367', '9606.ENSP00000371101', '9606.ENSP00000489829', '9606.ENSP00000392028', '9606.ENSP00000471191', '9606.ENSP00000221233', '9606.ENSP00000305702', '9606.ENSP00000481554', '9606.ENSP00000379616', '9606.ENSP00000467024', '9606.ENSP00000374049', '9606.ENSP00000355511', '9606.ENSP00000250003', '9606.ENSP00000332772', '9606.ENSP00000339835', '9606.ENSP00000362649', '9606.ENSP00000338629', '9606.ENSP00000360108', '9606.ENSP00000365227', '9606.ENSP00000353331', '9606.ENSP00000301587', '9606.ENSP00000222584', '9606.ENSP00000380602', '9606.ENSP00000259708', '9606.ENSP00000327513', '9606.ENSP00000447537', '9606.ENSP00000340820', '9606.ENSP00000246672', '9606.ENSP00000254722', '9606.ENSP00000311816', '9606.ENSP00000499501', '9606.ENSP00000320650', '9606.ENSP00000498653', '9606.hsa-miR-124-3p', '9606.ENSP00000284240', '9606.ENSP00000361433', '9606.ENSP00000439585', '9606.ENSP00000316032', '9606.ENSP00000368984', '9606.hsa-miR-17-5p', '9606.ENSP00000366563', '9606.ENSP00000419260', '9606.ENSP00000237014', '9606.AC007879.5', '9606.ENSP00000323148', '9606.ENSP00000446576', '9606.ENSP00000263431', '9606.ENSP00000355747', '9606.ENSP00000405674', '9606.ENSP00000354416', '9606.ENSP00000338512', '9606.ENSP00000356953', '9606.ENSP00000399376', '9606.ENSP00000359489', '9606.ENSP00000298556', '9606.ENSP00000355865', '9606.ENSP00000226382', '9606.ENSP00000355741', '9606.ENSP00000346483', '9606.ENSP00000246548', '9606.ENSP00000304643', '9606.ENSP00000373413', '9606.ENSP00000254810', '9606.ENSP00000376921', '9606.ENSP00000302100', '9606.ENSP00000350170', '9606.ENSP00000252996', '9606.hsa-miR-29a-3p', '9606.ENSP00000366330', '9606.ENSP00000248600', '9606.ENSP00000216218', '9606.ENSP00000306138', '9606.ENSP00000288943', '9606.ENSP00000202625', '9606.ENSP00000349748', '9606.ENSP00000245451', '9606.ENSP00000366452', '9606.ENSP00000360231', '9606.hsa-miR-93-5p', '9606.ENSP00000471851', '9606.ENSP00000364270', '9606.ENSP00000340125', '9606.ENSP00000302216', '9606.ENSP00000343515', '9606.ENSP00000221801', '9606.ENSP00000501150', '9606.ENSP00000413035', '9606.ENSP00000265164', '9606.ENSP00000359804', '9606.ENSP00000259711', '9606.ENSP00000415579', '9606.ENSP00000306253', '9606.ENSP00000273320', '9606.ENSP00000305288', '9606.ENSP00000418721', '9606.ENSP00000458663', '9606.ENSP00000307900', '9606.ENSP00000329357', '9606.ENSP00000496695', '9606.ENSP00000318585', '9606.ENSP00000418960', '9606.ENSP00000478249', '9606.ENSP00000303540', '9606.ENSP00000393379', '9606.ENSP00000240316', '9606.ENSP00000457205', '9606.ENSP00000260386', '9606.ENSP00000288135', '9606.ENSP00000368884', '9606.ENSP00000458537', '9606.ENSP00000454852', '9606.ENSP00000338173', '9606.ENSP00000285667', '9606.ENSP00000380070', '9606.ENSP00000368881', '9606.ENSP00000359019', '9606.ENSP00000477715', '9606.ENSP00000417901', '9606.ENSP00000221930', '9606.ENSP00000490107', '9606.ENSP00000332194', '9606.ENSP00000219197', '9606.ENSP00000180166', '9606.ENSP00000381185', '9606.ENSP00000316842', '9606.ENSP00000254079', '9606.ENSP00000296271', '9606.ENSP00000362300', '9606.ENSP00000264867', '9606.ENSP00000349298', '9606.ENSP00000311032', '9606.ENSP00000295900', '9606.ENSP00000293288', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.ENSP00000306561', '9606.ENSP00000500990', '9606.ENSP00000256261', '9606.ENSP00000295589', '9606.ENSP00000419081', '9606.ENSP00000475626', '9606.ENSP00000479667', '9606.ENSP00000233813', '9606.hsa-miR-1225-3p', '9606.ENSP00000406209', '9606.ENSP00000455698', '9606.ENSP00000348645', '9606.ENSP00000321835', '9606.ENSP00000216127', '9606.ENSP00000371133', '9606.ENSP00000369863', '9606.ENSP00000261601', '9606.ENSP00000300213', '9606.ENSP00000225504', '9606.ENSP00000264552', '9606.ENSP00000308610', '9606.ENSP00000495360', '9606.ENSP00000421339', '9606.ENSP00000240100', '9606.ENSP00000381057', '9606.ENSP00000334002', '9606.ENSP00000411355', '9606.ENSP00000333277', '9606.ENSP00000295910', '9606.ENSP00000438574', '9606.ENSP00000340467', '9606.ENSP00000377372', '9606.ENSP00000477141', '9606.ENSP00000463653', '9606.ENSP00000360493', '9606.ENSP00000310036', '9606.ENSP00000385410', '9606.ENSP00000249396', '9606.ENSP00000294702', '9606.ENSP00000357583', '9606.ENSP00000349168', '9606.ENSP00000276654', '9606.ENSP00000215832', '9606.ENSP00000216254', '9606.ENSP00000261731', '9606.ENSP00000324560', '9606.ENSP00000362680', '9606.ENSP00000346694', '9606.ENSP00000353414', '9606.ENSP00000437125', '9606.ENSP00000409279', '9606.ENSP00000349722', '9606.ENSP00000350386', '9606.ENSP00000283195', '9606.ENSP00000339004', '9606.ENSP00000264689', '9606.ENSP00000321606', '9606.ENSP00000369996', '9606.ENSP00000414856', '9606.ENSP00000323588', '9606.ENSP00000248975', '9606.ENSP00000181796', '9606.ENSP00000371267', '9606.ENSP00000378338', '9606.ENSP00000370058', '9606.ENSP00000239231', '9606.ENSP00000315299', '9606.ENSP00000378699', '9606.ENSP00000415822', '9606.ENSP00000333262', '9606.ENSP00000370193', '9606.ENSP00000483254', '9606.ENSP00000422435', '9606.ENSP00000482169', '9606.ENSP00000258415', '9606.ENSP00000380432', '9606.ENSP00000349156', '9606.ENSP00000253408', '9606.ENSP00000384474', '9606.HTT-AS', '9606.ENSP00000358784', '9606.ENSP00000265195', '9606.ENSP00000440045', '9606.ENSP00000378476', '9606.ENSP00000362205', '9606.ENSP00000252934', '9606.ENSP00000250495', '9606.ENSP00000340330', '9606.ENSP00000247225', '9606.ENSP00000310129', '9606.ENSP00000360266', '9606.ENSP00000296755', '9606.ENSP00000359719', '9606.ENSP00000499387', '9606.ENSP00000358089', '9606.ENSP00000230321', '9606.ENSP00000377936', '9606.ENSP00000329403', '9606.ENSP00000216144', '9606.ENSP00000314173', '9606.ENSP00000430241', '9606.ENSP00000319060', '9606.ENSP00000354859', '9606.ENSP00000430000', '9606.ENSP00000325863', '9606.ENSP00000258302', '9606.ENSP00000476119', '9606.ENSP00000366488', '9606.ENSP00000481848', '9606.ENSP00000234389', '9606.ENSP00000437256', '9606.ENSP00000279488', '9606.ENSP00000363435', '9606.ENSP00000366249', '9606.ENSP00000398632', '9606.ENSP00000477455', '9606.ENSP00000254976', '9606.ENSP00000316357', '9606.ENSP00000216714', '9606.ENSP00000347896', '9606.ENSP00000269305', '9606.ENSP00000320821', '9606.ENSP00000264657', '9606.ENSP00000353646', '9606.ENSP00000397563', '9606.ENSP00000263205', '9606.ENSP00000353767', '9606.ENSP00000353864', '9606.ENSP00000345347', '9606.ENSP00000265081', '9606.ENSP00000318635', '9606.ENSP00000408617', '9606.ENSP00000364639', '9606.ENSP00000223129', '9606.ENSP00000370744', '9606.ENSP00000307786', '9606.FMR1-AS1', '9606.ENSP00000428426', '9606.ENSP00000305480', '9606.ENSP00000291295', '9606.ENSP00000453858', '9606.ENSP00000245255', '9606.ENSP00000261523', '9606.ENSP00000377015', '9606.ENSP00000453170', '9606.ENSP00000244061', '9606.ENSP00000293190', '9606.ENSP00000276079', '9606.ENSP00000269143', '9606.ENSP00000355028', '9606.ENSP00000370083', '9606.ENSP00000268058', '9606.ENSP00000263209', '9606.ENSP00000278379', '9606.ENSP00000347184', '9606.hsa-miR-150-5p', '9606.ENSP00000365601', '9606.ENSP00000307604', '9606.ENSP00000357206', '9606.hsa-miR-9-3p', '9606.ENSP00000361021', '9606.ENSP00000334463', '9606.ENSP00000348056', '9606.ENSP00000386786', '9606.ENSP00000357565', '9606.ENSP00000332706', '9606.ENSP00000296526', '9606.ENSP00000458065', '9606.ENSP00000385675', '9606.ENSP00000305422', '9606.ENSP00000359727', '9606.ENSP00000362578', '9606.ENSP00000365861', '9606.ENSP00000356231', '9606.ENSP00000306330', '9606.ENSP00000361027', '9606.ENSP00000378487', '9606.ENSP00000431162', '9606.hsa-miR-548g-3p', '9606.ENSP00000371729', '9606.hsa-miR-320d', '9606.ENSP00000304331', '9606.ENSP00000013807', '9606.ENSP00000435637', '9606.ENSP00000385216', '9606.ENSP00000346671', '9606.ENSP00000427900', '9606.MIR17HG', '9606.ENSP00000350928', '9606.ENSP00000360280', '9606.AC006129.1', '9606.ENSP00000219548', '9606.ENSP00000282753', '9606.ENSP00000216727', '9606.ENSP00000284262', '9606.ENSP00000261837', '9606.ATXN8OS', '9606.ENSP00000368314', '9606.ENSP00000374552', '9606.ENSP00000256079', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.ENSP00000315137', '9606.ENSP00000347997', '9606.ENSP00000261712', '9606.ENSP00000376753', '9606.ENSP00000406549', '9606.ENSP00000317333', '9606.ENSP00000399851', '9606.ENSP00000369531', '9606.ENSP00000358886', '9606.ENSP00000383042', '9606.ENSP00000403397', '9606.ENSP00000359978', '9606.ENSP00000374455', '9606.ENSP00000429763', '9606.ENSP00000438886', '9606.hsa-miR-379-3p', '9606.ENSP00000262367', '9606.ENSP00000353072', '9606.ENSP00000376637', '9606.ENSP00000369895', '9606.ENSP00000376197', '9606.ENSP00000462298', '9606.ENSP00000262241', '9606.ENSP00000355370', '9606.ENSP00000225577', '9606.ENSP00000333363', '9606.ENSP00000376077', '9606.ENSP00000347170', '9606.ENSP00000358525', '9606.ENSP00000302961', '9606.ENSP00000324173', '9606.ENSP00000309591', '9606.ENSP00000419782', '9606.ENSP00000345571', '9606.ENSP00000418572', '9606.ENSP00000495557', '9606.ENSP00000327687', '9606.ENSP00000309595', '9606.ENSP00000365514', '9606.ENSP00000361930', '9606.ENSP00000270225', '9606.ENSP00000290649', '9606.ENSP00000362485', '9606.ENSP00000309477', '9606.ENSP00000386458', '9606.ENSP00000345575', '9606.ENSP00000388638', '9606.ENSP00000346534', '9606.ENSP00000270349', '9606.ENSP00000368332', '9606.ENSP00000212015', '9606.ENSP00000405965', '9606.ENSP00000284981', '9606.ENSP00000345206', '9606.ENSP00000282561', '9606.ENSP00000493382', '9606.ENSP00000498255', '9606.ENSP00000263025', '9606.ENSP00000478877', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.ENSP00000462745', '9606.ENSP00000352516', '9606.ENSP00000358518', '9606.ENSP00000405388', '9606.ENSP00000268712', '9606.ENSP00000359085', '9606.ENSP00000360609', '9606.ENSP00000362131', '9606.hsa-miR-659-3p', '9606.ENSP00000499582', '9606.ENSP00000422185', '9606.ENSP00000454229', '9606.ENSP00000221742', '9606.ENSP00000489407', '9606.ENSP00000359506', '9606.ENSP00000444433', '9606.ENSP00000414303', '9606.ENSP00000391803', '9606.ENSP00000379350', '9606.ENSP00000399403', '9606.hsa-miR-106a-5p', '9606.ENSP00000379915', '9606.ENSP00000254322', '9606.ENSP00000269228', '9606.ENSP00000403888', '9606.ENSP00000306894', '9606.ENSP00000254325', '9606.ENSP00000307863']}
2024-06-20 16:48:41,053 [DEBUG] py4...: Returning 'get_all_nodes': ['9606.ENSP00000263160', '9606.ENSP00000227507', '9606.ENSP00000400142', '9606.ENSP00000252804', '9606.ENSP00000371985', '9606.ENSP00000418447', '9606.ENSP00000342056', '9606.ENSP00000362014', '9606.ENSP00000265459', '9606.ENSP00000258106', '9606.ENSP00000263038', '9606.ENSP00000326366', '9606.ENSP00000450873', '9606.ENSP00000354929', '9606.ENSP00000221996', '9606.ENSP00000478887', '9606.ENSP00000331040', '9606.ENSP00000408526', '9606.hsa-miR-155-5p', '9606.ENSP00000477437', '9606.ENSP00000246914', '9606.ENSP00000359095', '9606.ENSP00000299001', '9606.ENSP00000432568', '9606.ENSP00000220420', '9606.ENSP00000380903', '9606.ENSP00000392423', '9606.ENSP00000498362', '9606.hsa-miR-132-3p', '9606.ENSP00000374354', '9606.ENSP00000355231', '9606.ENSP00000354923', '9606.ENSP00000378394', '9606.ENSP00000351777', '9606.ENSP00000336712', '9606.ENSP00000260665', '9606.ENSP00000215095', '9606.ENSP00000390941', '9606.hsa-miR-106b-5p', '9606.ENSP00000443631', '9606.ENSP00000442920', '9606.ENSP00000484060', '9606.ENSP00000312987', '9606.ENSP00000224140', '9606.ENSP00000473623', '9606.ENSP00000295987', '9606.ENSP00000262039', '9606.ENSP00000419243', '9606.ENSP00000323511', '9606.ENSP00000358283', '9606.ENSP00000321455', '9606.ENSP00000364204', '9606.ENSP00000264335', '9606.ENSP00000287713', '9606.ENSP00000252482', '9606.ENSP00000282020', '9606.ENSP00000265421', '9606.ENSP00000282146', '9606.ENSP00000244769', '9606.ENSP00000364210', '9606.ENSP00000303709', '9606.ENSP00000430432', '9606.ENSP00000278616', '9606.hsa-miR-1909-3p', '9606.ENSP00000354497', '9606.ENSP00000352738', '9606.ENSP00000378284', '9606.ENSP00000228872', '9606.ENSP00000470248', '9606.ENSP00000398698', '9606.ENSP00000480050', '9606.ENSP00000337353', '9606.hsa-miR-760', '9606.ENSP00000406293', '9606.ENSP00000356790', '9606.ENSP00000260116', '9606.ENSP00000230354', '9606.ENSP00000442793', '9606.ENSP00000255631', '9606.ENSP00000489624', '9606.hsa-miR-144-3p', '9606.ENSP00000464342', '9606.ENSP00000252486', '9606.ENSP00000285419', '9606.ENSP00000369689', '9606.ENSP00000286628', '9606.ENSP00000343001', '9606.ENSP00000391942', '9606.hsa-miR-130a-3p', '9606.ENSP00000441685', '9606.ENSP00000302967', '9606.ENSP00000490614', '9606.ENSP00000263257', '9606.ENSP00000358155', '9606.ENSP00000428994', '9606.ENSP00000383199', '9606.ENSP00000359890', '9606.ENSP00000340989', '9606.ENSP00000265431', '9606.ENSP00000292246', '9606.ENSP00000354125', '9606.ENSP00000295756', '9606.ENSP00000358967', '9606.ENSP00000358151', '9606.ENSP00000310585', '9606.ENSP00000362399', '9606.ENSP00000357876', '9606.ENSP00000363123', '9606.ENSP00000417864', '9606.ENSP00000295757', '9606.ENSP00000354360', '9606.ENSP00000040584', '9606.ENSP00000492363', '9606.ENSP00000365301', '9606.ENSP00000219476', '9606.ENSP00000386229', '9606.ENSP00000291700', '9606.ENSP00000287820', '9606.ENSP00000368007', '9606.ENSP00000263754', '9606.ENSP00000288490', '9606.ENSP00000284551', '9606.ENSP00000434241', '9606.ENSP00000302108', '9606.ENSP00000403343', '9606.ENSP00000385142', '9606.ENSP00000264036', '9606.ENSP00000283228', '9606.ENSP00000391381', '9606.ENSP00000406286', '9606.hsa-miR-548ae', '9606.ENSP00000479719', '9606.ENSP00000320347', '9606.ENSP00000264606', '9606.ENSP00000258962', '9606.ENSP00000337103', '9606.ENSP00000424566', '9606.ENSP00000270142', '9606.ENSP00000426503', '9606.ENSP00000272444', '9606.ENSP00000402257', '9606.ENSP00000298910', '9606.ENSP00000264276', '9606.ENSP00000341826', '9606.ENSP00000269601', '9606.ENSP00000345195', '9606.ENSP00000366070', '9606.ENSP00000294435', '9606.ENSP00000277120', '9606.ENSP00000480916', '9606.ENSP00000391269', '9606.ENSP00000357292', '9606.ENSP00000480012', '9606.ENSP00000303356', '9606.ENSP00000494538', '9606.ENSP00000323046', '9606.ENSP00000220592', '9606.ENSP00000053867', '9606.ENSP00000354111', '9606.ENSP00000387593', '9606.ENSP00000415676', '9606.ENSP00000282486', '9606.ENSP00000240185', '9606.ENSP00000391723', '9606.ENSP00000497806', '9606.ENSP00000351742', '9606.ENSP00000496959', '9606.ENSP00000376322', '9606.ENSP00000254488', '9606.ENSP00000335153', '9606.ENSP00000266594', '9606.ENSP00000261667', '9606.ENSP00000435466', '9606.ENSP00000263967', '9606.ENSP00000313829', '9606.ENSP00000487785', '9606.ENSP00000265381', '9606.ENSP00000410769', '9606.ENSP00000345997', '9606.ENSP00000261427', '9606.ENSP00000265379', '9606.ENSP00000257290', '9606.ENSP00000225916', '9606.ENSP00000246186', '9606.ENSP00000481593', '9606.ENSP00000500386', '9606.ENSP00000439937', '9606.ENSP00000313007', '9606.ENSP00000370571', '9606.ENSP00000295897', '9606.ENSP00000297261', '9606.ENSP00000362299', '9606.ENSP00000310561', '9606.ENSP00000295777', '9606.ENSP00000354346', '9606.ENSP00000345064', '9606.ENSP00000282928', '9606.ENSP00000387699', '9606.ENSP00000309457', '9606.ENSP00000258149', '9606.ENSP00000381488', '9606.ENSP00000364118', '9606.ENSP00000298596', '9606.ENSP00000272317', '9606.ENSP00000267890', '9606.ENSP00000497594', '9606.ENSP00000379287', '9606.ENSP00000497112', '9606.ENSP00000360660', '9606.ENSP00000397259', '9606.ENSP00000266682', '9606.ENSP00000477999', '9606.ENSP00000265351', '9606.ENSP00000282356', '9606.ENSP00000301727', '9606.ENSP00000351614', '9606.ENSP00000369127', '9606.ENSP00000313377', '9606.ENSP00000370589', '9606.ENSP00000339867', '9606.ENSP00000302814', '9606.ENSP00000228644', '9606.ENSP00000343690', '9606.ENSP00000410759', '9606.ENSP00000264498', '9606.ENSP00000356982', '9606.ENSP00000264255', '9606.NEAT1', '9606.ENSP00000436679', '9606.ENSP00000381382', '9606.FAM41C', '9606.ENSP00000379181', '9606.ENSP00000324806', '9606.ENSP00000435412', '9606.ENSP00000469455', '9606.ENSP00000436864', '9606.ENSP00000354335', '9606.ENSP00000401633', '9606.ENSP00000361405', '9606.ENSP00000386710', '9606.ENSP00000384625', '9606.ENSP00000265171', '9606.ENSP00000489189', '9606.ENSP00000259727', '9606.ENSP00000332549', '9606.ENSP00000340278', '9606.ENSP00000231004', '9606.ENSP00000343552', '9606.ENSP00000494750', '9606.ENSP00000260950', '9606.ENSP00000264033', '9606.ENSP00000369145', '9606.ENSP00000363822', '9606.ENSP00000409007', '9606.ENSP00000254108', '9606.ENSP00000354558', '9606.ENSP00000425561', '9606.ENSP00000482753', '9606.ENSP00000370119', '9606.ENSP00000355645', '9606.ENSP00000319591', '9606.ENSP00000354553', '9606.ENSP00000340292', '9606.ENSP00000370125', '9606.ENSP00000265113', '9606.ENSP00000375810', '9606.ENSP00000355657', '9606.ENSP00000352257', '9606.ENSP00000451828', '9606.ENSP00000382104', '9606.ENSP00000401371', '9606.ENSP00000222330', '9606.hsa-miR-559', '9606.ENSP00000308533', '9606.ENSP00000377681', '9606.hsa-miR-134-5p', '9606.ENSP00000250113', '9606.ENSP00000221485', '9606.ENSP00000254719', '9606.ENSP00000222574', '9606.hsa-miR-433-3p', '9606.ENSP00000352252', '9606.ENSP00000418994', '9606.hsa-miR-107', '9606.ENSP00000306920', '9606.ENSP00000364813', '9606.ENSP00000365458', '9606.ENSP00000352011', '9606.ENSP00000397297', '9606.hsa-miR-9-5p', '9606.ENSP00000497217', '9606.ENSP00000343535', '9606.ENSP00000216200', '9606.ENSP00000425979', '9606.ENSP00000365576', '9606.ENSP00000419395', '9606.ENSP00000368966', '9606.ENSP00000492795', '9606.ENSP00000261366', '9606.ENSP00000395535', '9606.ENSP00000329918', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.ENSP00000291568', '9606.ENSP00000368970', '9606.ENSP00000262904', '9606.ENSP00000405327', '9606.ENSP00000467262', '9606.ENSP00000261367', '9606.ENSP00000371101', '9606.ENSP00000489829', '9606.ENSP00000392028', '9606.ENSP00000471191', '9606.ENSP00000221233', '9606.ENSP00000305702', '9606.ENSP00000481554', '9606.ENSP00000379616', '9606.ENSP00000467024', '9606.ENSP00000374049', '9606.ENSP00000355511', '9606.ENSP00000250003', '9606.ENSP00000332772', '9606.ENSP00000339835', '9606.ENSP00000362649', '9606.ENSP00000338629', '9606.ENSP00000360108', '9606.ENSP00000365227', '9606.ENSP00000353331', '9606.ENSP00000301587', '9606.ENSP00000222584', '9606.ENSP00000380602', '9606.ENSP00000259708', '9606.ENSP00000327513', '9606.ENSP00000447537', '9606.ENSP00000340820', '9606.ENSP00000246672', '9606.ENSP00000254722', '9606.ENSP00000311816', '9606.ENSP00000499501', '9606.ENSP00000320650', '9606.ENSP00000498653', '9606.hsa-miR-124-3p', '9606.ENSP00000284240', '9606.ENSP00000361433', '9606.ENSP00000439585', '9606.ENSP00000316032', '9606.ENSP00000368984', '9606.hsa-miR-17-5p', '9606.ENSP00000366563', '9606.ENSP00000419260', '9606.ENSP00000237014', '9606.AC007879.5', '9606.ENSP00000323148', '9606.ENSP00000446576', '9606.ENSP00000263431', '9606.ENSP00000355747', '9606.ENSP00000405674', '9606.ENSP00000354416', '9606.ENSP00000338512', '9606.ENSP00000356953', '9606.ENSP00000399376', '9606.ENSP00000359489', '9606.ENSP00000298556', '9606.ENSP00000355865', '9606.ENSP00000226382', '9606.ENSP00000355741', '9606.ENSP00000346483', '9606.ENSP00000246548', '9606.ENSP00000304643', '9606.ENSP00000373413', '9606.ENSP00000254810', '9606.ENSP00000376921', '9606.ENSP00000302100', '9606.ENSP00000350170', '9606.ENSP00000252996', '9606.hsa-miR-29a-3p', '9606.ENSP00000366330', '9606.ENSP00000248600', '9606.ENSP00000216218', '9606.ENSP00000306138', '9606.ENSP00000288943', '9606.ENSP00000202625', '9606.ENSP00000349748', '9606.ENSP00000245451', '9606.ENSP00000366452', '9606.ENSP00000360231', '9606.hsa-miR-93-5p', '9606.ENSP00000471851', '9606.ENSP00000364270', '9606.ENSP00000340125', '9606.ENSP00000302216', '9606.ENSP00000343515', '9606.ENSP00000221801', '9606.ENSP00000501150', '9606.ENSP00000413035', '9606.ENSP00000265164', '9606.ENSP00000359804', '9606.ENSP00000259711', '9606.ENSP00000415579', '9606.ENSP00000306253', '9606.ENSP00000273320', '9606.ENSP00000305288', '9606.ENSP00000418721', '9606.ENSP00000458663', '9606.ENSP00000307900', '9606.ENSP00000329357', '9606.ENSP00000496695', '9606.ENSP00000318585', '9606.ENSP00000418960', '9606.ENSP00000478249', '9606.ENSP00000303540', '9606.ENSP00000393379', '9606.ENSP00000240316', '9606.ENSP00000457205', '9606.ENSP00000260386', '9606.ENSP00000288135', '9606.ENSP00000368884', '9606.ENSP00000458537', '9606.ENSP00000454852', '9606.ENSP00000338173', '9606.ENSP00000285667', '9606.ENSP00000380070', '9606.ENSP00000368881', '9606.ENSP00000359019', '9606.ENSP00000477715', '9606.ENSP00000417901', '9606.ENSP00000221930', '9606.ENSP00000490107', '9606.ENSP00000332194', '9606.ENSP00000219197', '9606.ENSP00000180166', '9606.ENSP00000381185', '9606.ENSP00000316842', '9606.ENSP00000254079', '9606.ENSP00000296271', '9606.ENSP00000362300', '9606.ENSP00000264867', '9606.ENSP00000349298', '9606.ENSP00000311032', '9606.ENSP00000295900', '9606.ENSP00000293288', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.ENSP00000306561', '9606.ENSP00000500990', '9606.ENSP00000256261', '9606.ENSP00000295589', '9606.ENSP00000419081', '9606.ENSP00000475626', '9606.ENSP00000479667', '9606.ENSP00000233813', '9606.hsa-miR-1225-3p', '9606.ENSP00000406209', '9606.ENSP00000455698', '9606.ENSP00000348645', '9606.ENSP00000321835', '9606.ENSP00000216127', '9606.ENSP00000371133', '9606.ENSP00000369863', '9606.ENSP00000261601', '9606.ENSP00000300213', '9606.ENSP00000225504', '9606.ENSP00000264552', '9606.ENSP00000308610', '9606.ENSP00000495360', '9606.ENSP00000421339', '9606.ENSP00000240100', '9606.ENSP00000381057', '9606.ENSP00000334002', '9606.ENSP00000411355', '9606.ENSP00000333277', '9606.ENSP00000295910', '9606.ENSP00000438574', '9606.ENSP00000340467', '9606.ENSP00000377372', '9606.ENSP00000477141', '9606.ENSP00000463653', '9606.ENSP00000360493', '9606.ENSP00000310036', '9606.ENSP00000385410', '9606.ENSP00000249396', '9606.ENSP00000294702', '9606.ENSP00000357583', '9606.ENSP00000349168', '9606.ENSP00000276654', '9606.ENSP00000215832', '9606.ENSP00000216254', '9606.ENSP00000261731', '9606.ENSP00000324560', '9606.ENSP00000362680', '9606.ENSP00000346694', '9606.ENSP00000353414', '9606.ENSP00000437125', '9606.ENSP00000409279', '9606.ENSP00000349722', '9606.ENSP00000350386', '9606.ENSP00000283195', '9606.ENSP00000339004', '9606.ENSP00000264689', '9606.ENSP00000321606', '9606.ENSP00000369996', '9606.ENSP00000414856', '9606.ENSP00000323588', '9606.ENSP00000248975', '9606.ENSP00000181796', '9606.ENSP00000371267', '9606.ENSP00000378338', '9606.ENSP00000370058', '9606.ENSP00000239231', '9606.ENSP00000315299', '9606.ENSP00000378699', '9606.ENSP00000415822', '9606.ENSP00000333262', '9606.ENSP00000370193', '9606.ENSP00000483254', '9606.ENSP00000422435', '9606.ENSP00000482169', '9606.ENSP00000258415', '9606.ENSP00000380432', '9606.ENSP00000349156', '9606.ENSP00000253408', '9606.ENSP00000384474', '9606.HTT-AS', '9606.ENSP00000358784', '9606.ENSP00000265195', '9606.ENSP00000440045', '9606.ENSP00000378476', '9606.ENSP00000362205', '9606.ENSP00000252934', '9606.ENSP00000250495', '9606.ENSP00000340330', '9606.ENSP00000247225', '9606.ENSP00000310129', '9606.ENSP00000360266', '9606.ENSP00000296755', '9606.ENSP00000359719', '9606.ENSP00000499387', '9606.ENSP00000358089', '9606.ENSP00000230321', '9606.ENSP00000377936', '9606.ENSP00000329403', '9606.ENSP00000216144', '9606.ENSP00000314173', '9606.ENSP00000430241', '9606.ENSP00000319060', '9606.ENSP00000354859', '9606.ENSP00000430000', '9606.ENSP00000325863', '9606.ENSP00000258302', '9606.ENSP00000476119', '9606.ENSP00000366488', '9606.ENSP00000481848', '9606.ENSP00000234389', '9606.ENSP00000437256', '9606.ENSP00000279488', '9606.ENSP00000363435', '9606.ENSP00000366249', '9606.ENSP00000398632', '9606.ENSP00000477455', '9606.ENSP00000254976', '9606.ENSP00000316357', '9606.ENSP00000216714', '9606.ENSP00000347896', '9606.ENSP00000269305', '9606.ENSP00000320821', '9606.ENSP00000264657', '9606.ENSP00000353646', '9606.ENSP00000397563', '9606.ENSP00000263205', '9606.ENSP00000353767', '9606.ENSP00000353864', '9606.ENSP00000345347', '9606.ENSP00000265081', '9606.ENSP00000318635', '9606.ENSP00000408617', '9606.ENSP00000364639', '9606.ENSP00000223129', '9606.ENSP00000370744', '9606.ENSP00000307786', '9606.FMR1-AS1', '9606.ENSP00000428426', '9606.ENSP00000305480', '9606.ENSP00000291295', '9606.ENSP00000453858', '9606.ENSP00000245255', '9606.ENSP00000261523', '9606.ENSP00000377015', '9606.ENSP00000453170', '9606.ENSP00000244061', '9606.ENSP00000293190', '9606.ENSP00000276079', '9606.ENSP00000269143', '9606.ENSP00000355028', '9606.ENSP00000370083', '9606.ENSP00000268058', '9606.ENSP00000263209', '9606.ENSP00000278379', '9606.ENSP00000347184', '9606.hsa-miR-150-5p', '9606.ENSP00000365601', '9606.ENSP00000307604', '9606.ENSP00000357206', '9606.hsa-miR-9-3p', '9606.ENSP00000361021', '9606.ENSP00000334463', '9606.ENSP00000348056', '9606.ENSP00000386786', '9606.ENSP00000357565', '9606.ENSP00000332706', '9606.ENSP00000296526', '9606.ENSP00000458065', '9606.ENSP00000385675', '9606.ENSP00000305422', '9606.ENSP00000359727', '9606.ENSP00000362578', '9606.ENSP00000365861', '9606.ENSP00000356231', '9606.ENSP00000306330', '9606.ENSP00000361027', '9606.ENSP00000378487', '9606.ENSP00000431162', '9606.hsa-miR-548g-3p', '9606.ENSP00000371729', '9606.hsa-miR-320d', '9606.ENSP00000304331', '9606.ENSP00000013807', '9606.ENSP00000435637', '9606.ENSP00000385216', '9606.ENSP00000346671', '9606.ENSP00000427900', '9606.MIR17HG', '9606.ENSP00000350928', '9606.ENSP00000360280', '9606.AC006129.1', '9606.ENSP00000219548', '9606.ENSP00000282753', '9606.ENSP00000216727', '9606.ENSP00000284262', '9606.ENSP00000261837', '9606.ATXN8OS', '9606.ENSP00000368314', '9606.ENSP00000374552', '9606.ENSP00000256079', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.ENSP00000315137', '9606.ENSP00000347997', '9606.ENSP00000261712', '9606.ENSP00000376753', '9606.ENSP00000406549', '9606.ENSP00000317333', '9606.ENSP00000399851', '9606.ENSP00000369531', '9606.ENSP00000358886', '9606.ENSP00000383042', '9606.ENSP00000403397', '9606.ENSP00000359978', '9606.ENSP00000374455', '9606.ENSP00000429763', '9606.ENSP00000438886', '9606.hsa-miR-379-3p', '9606.ENSP00000262367', '9606.ENSP00000353072', '9606.ENSP00000376637', '9606.ENSP00000369895', '9606.ENSP00000376197', '9606.ENSP00000462298', '9606.ENSP00000262241', '9606.ENSP00000355370', '9606.ENSP00000225577', '9606.ENSP00000333363', '9606.ENSP00000376077', '9606.ENSP00000347170', '9606.ENSP00000358525', '9606.ENSP00000302961', '9606.ENSP00000324173', '9606.ENSP00000309591', '9606.ENSP00000419782', '9606.ENSP00000345571', '9606.ENSP00000418572', '9606.ENSP00000495557', '9606.ENSP00000327687', '9606.ENSP00000309595', '9606.ENSP00000365514', '9606.ENSP00000361930', '9606.ENSP00000270225', '9606.ENSP00000290649', '9606.ENSP00000362485', '9606.ENSP00000309477', '9606.ENSP00000386458', '9606.ENSP00000345575', '9606.ENSP00000388638', '9606.ENSP00000346534', '9606.ENSP00000270349', '9606.ENSP00000368332', '9606.ENSP00000212015', '9606.ENSP00000405965', '9606.ENSP00000284981', '9606.ENSP00000345206', '9606.ENSP00000282561', '9606.ENSP00000493382', '9606.ENSP00000498255', '9606.ENSP00000263025', '9606.ENSP00000478877', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.ENSP00000462745', '9606.ENSP00000352516', '9606.ENSP00000358518', '9606.ENSP00000405388', '9606.ENSP00000268712', '9606.ENSP00000359085', '9606.ENSP00000360609', '9606.ENSP00000362131', '9606.hsa-miR-659-3p', '9606.ENSP00000499582', '9606.ENSP00000422185', '9606.ENSP00000454229', '9606.ENSP00000221742', '9606.ENSP00000489407', '9606.ENSP00000359506', '9606.ENSP00000444433', '9606.ENSP00000414303', '9606.ENSP00000391803', '9606.ENSP00000379350', '9606.ENSP00000399403', '9606.hsa-miR-106a-5p', '9606.ENSP00000379915', '9606.ENSP00000254322', '9606.ENSP00000269228', '9606.ENSP00000403888', '9606.ENSP00000306894', '9606.ENSP00000254325', '9606.ENSP00000307863']
2024-06-20 16:48:41,054 [DEBUG] py4...: --------------------
2024-06-20 16:48:43,123 [DEBUG] py4...: Calling set_current_network(26235)
2024-06-20 16:48:43,124 [DEBUG] py4...: ǀCalling get_network_suid(26235)
2024-06-20 16:48:43,125 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:43,125 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:43,130 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:43,132 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:43,132 [DEBUG] py4...: ǀReturning 'get_network_suid': 26235
2024-06-20 16:48:43,133 [DEBUG] py4...: ǀCalling commands_post('network set current network="SUID:26235"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:43,133 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:26235'}
2024-06-20 16:48:44,477 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:44,478 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:48:44,478 [DEBUG] py4...: Returning 'set_current_network': {}
2024-06-20 16:48:44,478 [DEBUG] py4...: --------------------
2024-06-20 16:48:44,480 [DEBUG] py4...: Calling load_table_data(              shared name  kegg_db
0    9606.ENSP00000288828        1
1    9606.ENSP00000223321        1
2    9606.ENSP00000500582        1
3    9606.ENSP00000230354        1
4    9606.ENSP00000501150        1
..                    ...      ...
136  9606.ENSP00000446576        1
137  9606.ENSP00000484998        1
138  9606.ENSP00000396937        1
139  9606.ENSP00000244769        1
140  9606.ENSP00000310572        1

[141 rows x 2 columns], data_key_column='shared name', network=26235)
2024-06-20 16:48:44,480 [DEBUG] py4...: ǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,481 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,481 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:44,488 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:44,489 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:44,489 [DEBUG] py4...: ǀReturning 'get_network_suid': 26235
2024-06-20 16:48:44,489 [DEBUG] py4...: ǀCalling get_table_columns(table='node', namespace='default', columns='name', network=26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,489 [DEBUG] py4...: ǀǀCalling get_network_suid(26235, 'http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,490 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,490 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:44,496 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:44,496 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:44,497 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:44,497 [DEBUG] py4...: ǀǀCalling get_table_column_types('node', namespace='default', network=26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,497 [DEBUG] py4...: ǀǀǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,497 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,497 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:44,502 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:44,503 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:44,503 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:44,503 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/26235/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,503 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/26235/tables/defaultnode/columns)
2024-06-20 16:48:44,510 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:48:44,511 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:44,511 [DEBUG] py4...: ǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'stringdb::canonical name': 'String', 'display name': 'String', 'stringdb::full name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', '@id': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'query term': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::imageurl': 'String', 'stringdb::STRING style': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'name.copy': 'String', 'label': 'String', 'link': 'String', 'type': 'String', 'uniprot': 'String'}
2024-06-20 16:48:44,511 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/26235/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,512 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/26235/tables/defaultnode/columns/SUID)
2024-06-20 16:48:44,518 [DEBUG] py4...: ǀǀOK[200], content: {"name":"SUID","values":[26624,26627,26630,26633,26636,26639,26642,26645,26648,26651,26654,26657,26660,26663,26666,26669,26672,26675,26420,26678,26423,26681,26426,26684,26429,26687,26432,26690,26435,26693,26438,26696,26441,26699,26444,26702,26447,26705,26450,26708,26453,26711,26456,26714,26459,26717,26462,26720,26465,26723,26468,26726,26471,26729,26474,26732,26477,26735,26480,26738,26483,26741,26486,26744,26489,26747,26492,26750,26495,26753,26498,26756,26501,26759,26504,26762,26507,26765,26510,26768,26513,26771,26516,26774,26519,26777,26522,26780,26525,26783,26528,26786,26531,26789,26534,26792,26537,26795,26540,26798,26543,26801,26546,26804,26549,26807,26552,26810,26555,26813,26558,26816,26561,26819,26564,26822,26567,26825,26570,26828,26573,26831,26576,26834,26579,26837,26582,26840,26585,26588,26591,26594,26597,26600,26603,26606,26609,26612,26615,26618,26621]}
2024-06-20 16:48:44,518 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [26624, 26627, 26630, 26633, 26636, 26639, 26642, 26645, 26648, 26651, 26654, 26657, 26660, 26663, 26666, 26669, 26672, 26675, 26420, 26678, 26423, 26681, 26426, 26684, 26429, 26687, 26432, 26690, 26435, 26693, 26438, 26696, 26441, 26699, 26444, 26702, 26447, 26705, 26450, 26708, 26453, 26711, 26456, 26714, 26459, 26717, 26462, 26720, 26465, 26723, 26468, 26726, 26471, 26729, 26474, 26732, 26477, 26735, 26480, 26738, 26483, 26741, 26486, 26744, 26489, 26747, 26492, 26750, 26495, 26753, 26498, 26756, 26501, 26759, 26504, 26762, 26507, 26765, 26510, 26768, 26513, 26771, 26516, 26774, 26519, 26777, 26522, 26780, 26525, 26783, 26528, 26786, 26531, 26789, 26534, 26792, 26537, 26795, 26540, 26798, 26543, 26801, 26546, 26804, 26549, 26807, 26552, 26810, 26555, 26813, 26558, 26816, 26561, 26819, 26564, 26822, 26567, 26825, 26570, 26828, 26573, 26831, 26576, 26834, 26579, 26837, 26582, 26840, 26585, 26588, 26591, 26594, 26597, 26600, 26603, 26606, 26609, 26612, 26615, 26618, 26621]}
2024-06-20 16:48:44,520 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/26235/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,520 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/26235/tables/defaultnode/columns/name)
2024-06-20 16:48:44,525 [DEBUG] py4...: ǀǀOK[200], content: {"name":"name","values":["9606.ENSP00000288828","9606.ENSP00000223321","9606.ENSP00000500582","9606.ENSP00000230354","9606.ENSP00000501150","9606.ENSP00000496695","9606.ENSP00000271308","9606.ENSP00000306253","9606.ENSP00000329357","9606.ENSP00000458663","9606.ENSP00000428994","9606.ENSP00000432568","9606.ENSP00000338173","9606.ENSP00000359531","9606.ENSP00000261479","9606.ENSP00000357876","9606.ENSP00000440185","9606.ENSP00000440485","9606.ENSP00000354681","9606.ENSP00000443631","9606.ENSP00000252934","9606.ENSP00000414359","9606.ENSP00000440045","9606.ENSP00000362144","9606.ENSP00000215071","9606.ENSP00000434241","9606.ENSP00000353072","9606.ENSP00000366475","9606.ENSP00000219313","9606.ENSP00000401445","9606.ENSP00000370808","9606.ENSP00000281456","9606.ENSP00000348442","9606.ENSP00000311121","9606.ENSP00000234389","9606.ENSP00000355325","9606.ENSP00000309474","9606.ENSP00000442793","9606.ENSP00000309595","9606.ENSP00000371532","9606.ENSP00000496129","9606.ENSP00000262139","9606.ENSP00000363435","9606.ENSP00000431926","9606.ENSP00000044462","9606.ENSP00000277746","9606.ENSP00000341243","9606.ENSP00000222254","9606.ENSP00000368966","9606.ENSP00000324560","9606.ENSP00000477455","9606.ENSP00000365301","9606.ENSP00000157812","9606.ENSP00000349205","9606.ENSP00000481029","9606.ENSP00000352608","9606.ENSP00000367762","9606.ENSP00000369996","9606.ENSP00000263269","9606.ENSP00000378974","9606.ENSP00000345206","9606.ENSP00000260402","9606.ENSP00000432412","9606.ENSP00000353010","9606.ENSP00000428845","9606.ENSP00000355155","9606.ENSP00000259457","9606.ENSP00000361635","9606.ENSP00000489829","9606.ENSP00000415822","9606.ENSP00000237264","9606.ENSP00000310129","9606.ENSP00000354558","9606.ENSP00000488361","9606.ENSP00000247219","9606.ENSP00000351908","9606.ENSP00000481021","9606.ENSP00000340330","9606.ENSP00000483688","9606.ENSP00000370589","9606.ENSP00000360608","9606.ENSP00000370744","9606.ENSP00000286548","9606.ENSP00000281154","9606.ENSP00000264639","9606.ENSP00000360270","9606.ENSP00000261523","9606.ENSP00000290541","9606.ENSP00000221742","9606.ENSP00000391723","9606.ENSP00000247178","9606.ENSP00000408695","9606.ENSP00000250003","9606.ENSP00000293190","9606.ENSP00000269143","9606.ENSP00000263967","9606.ENSP00000386541","9606.ENSP00000261303","9606.ENSP00000262193","9606.ENSP00000307786","9606.ENSP00000296526","9606.ENSP00000375892","9606.ENSP00000216455","9606.ENSP00000378487","9606.ENSP00000025008","9606.ENSP00000332549","9606.ENSP00000366563","9606.ENSP00000360671","9606.ENSP00000391211","9606.ENSP00000216037","9606.ENSP00000262741","9606.ENSP00000362334","9606.ENSP00000338990","9606.ENSP00000378917","9606.ENSP00000263431","9606.ENSP00000319591","9606.ENSP00000394560","9606.ENSP00000360280","9606.ENSP00000428056","9606.ENSP00000282753","9606.ENSP00000392423","9606.ENSP00000378914","9606.ENSP00000481554","9606.ENSP00000451828","9606.ENSP00000359910","9606.ENSP00000247668","9606.ENSP00000355231","9606.ENSP00000261712","9606.ENSP00000270586","9606.ENSP00000225174","9606.ENSP00000349595","9606.ENSP00000418695","9606.ENSP00000262039","9606.ENSP00000478877","9606.ENSP00000345702","9606.ENSP00000338185","9606.ENSP00000446576","9606.ENSP00000484998","9606.ENSP00000396937","9606.ENSP00000244769","9606.ENSP00000310572"]}
2024-06-20 16:48:44,525 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000288828', '9606.ENSP00000223321', '9606.ENSP00000500582', '9606.ENSP00000230354', '9606.ENSP00000501150', '9606.ENSP00000496695', '9606.ENSP00000271308', '9606.ENSP00000306253', '9606.ENSP00000329357', '9606.ENSP00000458663', '9606.ENSP00000428994', '9606.ENSP00000432568', '9606.ENSP00000338173', '9606.ENSP00000359531', '9606.ENSP00000261479', '9606.ENSP00000357876', '9606.ENSP00000440185', '9606.ENSP00000440485', '9606.ENSP00000354681', '9606.ENSP00000443631', '9606.ENSP00000252934', '9606.ENSP00000414359', '9606.ENSP00000440045', '9606.ENSP00000362144', '9606.ENSP00000215071', '9606.ENSP00000434241', '9606.ENSP00000353072', '9606.ENSP00000366475', '9606.ENSP00000219313', '9606.ENSP00000401445', '9606.ENSP00000370808', '9606.ENSP00000281456', '9606.ENSP00000348442', '9606.ENSP00000311121', '9606.ENSP00000234389', '9606.ENSP00000355325', '9606.ENSP00000309474', '9606.ENSP00000442793', '9606.ENSP00000309595', '9606.ENSP00000371532', '9606.ENSP00000496129', '9606.ENSP00000262139', '9606.ENSP00000363435', '9606.ENSP00000431926', '9606.ENSP00000044462', '9606.ENSP00000277746', '9606.ENSP00000341243', '9606.ENSP00000222254', '9606.ENSP00000368966', '9606.ENSP00000324560', '9606.ENSP00000477455', '9606.ENSP00000365301', '9606.ENSP00000157812', '9606.ENSP00000349205', '9606.ENSP00000481029', '9606.ENSP00000352608', '9606.ENSP00000367762', '9606.ENSP00000369996', '9606.ENSP00000263269', '9606.ENSP00000378974', '9606.ENSP00000345206', '9606.ENSP00000260402', '9606.ENSP00000432412', '9606.ENSP00000353010', '9606.ENSP00000428845', '9606.ENSP00000355155', '9606.ENSP00000259457', '9606.ENSP00000361635', '9606.ENSP00000489829', '9606.ENSP00000415822', '9606.ENSP00000237264', '9606.ENSP00000310129', '9606.ENSP00000354558', '9606.ENSP00000488361', '9606.ENSP00000247219', '9606.ENSP00000351908', '9606.ENSP00000481021', '9606.ENSP00000340330', '9606.ENSP00000483688', '9606.ENSP00000370589', '9606.ENSP00000360608', '9606.ENSP00000370744', '9606.ENSP00000286548', '9606.ENSP00000281154', '9606.ENSP00000264639', '9606.ENSP00000360270', '9606.ENSP00000261523', '9606.ENSP00000290541', '9606.ENSP00000221742', '9606.ENSP00000391723', '9606.ENSP00000247178', '9606.ENSP00000408695', '9606.ENSP00000250003', '9606.ENSP00000293190', '9606.ENSP00000269143', '9606.ENSP00000263967', '9606.ENSP00000386541', '9606.ENSP00000261303', '9606.ENSP00000262193', '9606.ENSP00000307786', '9606.ENSP00000296526', '9606.ENSP00000375892', '9606.ENSP00000216455', '9606.ENSP00000378487', '9606.ENSP00000025008', '9606.ENSP00000332549', '9606.ENSP00000366563', '9606.ENSP00000360671', '9606.ENSP00000391211', '9606.ENSP00000216037', '9606.ENSP00000262741', '9606.ENSP00000362334', '9606.ENSP00000338990', '9606.ENSP00000378917', '9606.ENSP00000263431', '9606.ENSP00000319591', '9606.ENSP00000394560', '9606.ENSP00000360280', '9606.ENSP00000428056', '9606.ENSP00000282753', '9606.ENSP00000392423', '9606.ENSP00000378914', '9606.ENSP00000481554', '9606.ENSP00000451828', '9606.ENSP00000359910', '9606.ENSP00000247668', '9606.ENSP00000355231', '9606.ENSP00000261712', '9606.ENSP00000270586', '9606.ENSP00000225174', '9606.ENSP00000349595', '9606.ENSP00000418695', '9606.ENSP00000262039', '9606.ENSP00000478877', '9606.ENSP00000345702', '9606.ENSP00000338185', '9606.ENSP00000446576', '9606.ENSP00000484998', '9606.ENSP00000396937', '9606.ENSP00000244769', '9606.ENSP00000310572']}
2024-06-20 16:48:44,527 [DEBUG] py4...: ǀReturning 'get_table_columns':                        name
26624  9606.ENSP00000288828
26627  9606.ENSP00000223321
26630  9606.ENSP00000500582
26633  9606.ENSP00000230354
26636  9606.ENSP00000501150
...                     ...
26609  9606.ENSP00000446576
26612  9606.ENSP00000484998
26615  9606.ENSP00000396937
26618  9606.ENSP00000244769
26621  9606.ENSP00000310572

[141 rows x 1 columns]
2024-06-20 16:48:44,530 [DEBUG] py4...: ǀCalling get_table_column_names('node', 'default', 26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,530 [DEBUG] py4...: ǀǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,530 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,531 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:44,536 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:44,536 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:44,537 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:44,537 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/26235/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,537 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/26235/tables/defaultnode/columns)
2024-06-20 16:48:44,543 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:48:44,544 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:44,545 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'stringdb::canonical name', 'display name', 'stringdb::full name', 'stringdb::database identifier', 'stringdb::description', '@id', 'stringdb::namespace', 'stringdb::node type', 'query term', 'stringdb::sequence', 'stringdb::species', 'stringdb::imageurl', 'stringdb::STRING style', 'stringdb::enhancedLabel Passthrough', 'compartment::cytoskeleton', 'compartment::cytosol', 'compartment::endoplasmic reticulum', 'compartment::endosome', 'compartment::extracellular', 'compartment::golgi apparatus', 'compartment::lysosome', 'compartment::mitochondrion', 'compartment::nucleus', 'compartment::peroxisome', 'compartment::plasma membrane', 'stringdb::structures', 'target::development level', 'target::family', 'tissue::adrenal gland', 'tissue::blood', 'tissue::bone', 'tissue::bone marrow', 'tissue::eye', 'tissue::gall bladder', 'tissue::heart', 'tissue::intestine', 'tissue::kidney', 'tissue::liver', 'tissue::lung', 'tissue::muscle', 'tissue::nervous system', 'tissue::pancreas', 'tissue::saliva', 'tissue::skin', 'tissue::spleen', 'tissue::stomach', 'tissue::thyroid gland', 'tissue::urine', 'name.copy', 'label', 'link', 'type', 'uniprot']
2024-06-20 16:48:44,545 [DEBUG] py4...: ǀCalling cyrest_post('networks/26235/tables/defaultnode/columns', body={'name': 'kegg_db', 'type': 'Integer'}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,546 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/networks/26235/tables/defaultnode/columns), json: {'name': 'kegg_db', 'type': 'Integer'}
2024-06-20 16:48:44,614 [DEBUG] py4...: ǀCreated[201], content: 
2024-06-20 16:48:44,614 [DEBUG] py4...: ǀReturning 'cyrest_post': ''
2024-06-20 16:48:44,614 [DEBUG] py4...: ǀCalling cyrest_put('networks/26235/tables/defaultnode', body={'key': 'name', 'dataKey': 'shared name', 'data': [{'shared name': '9606.ENSP00000288828', 'kegg_db': 1}, {'shared name': '9606.ENSP00000223321', 'kegg_db': 1}, {'shared name': '9606.ENSP00000500582', 'kegg_db': 1}, {'shared name': '9606.ENSP00000230354', 'kegg_db': 1}, {'shared name': '9606.ENSP00000501150', 'kegg_db': 1}, {'shared name': '9606.ENSP00000496695', 'kegg_db': 1}, {'shared name': '9606.ENSP00000271308', 'kegg_db': 1}, {'shared name': '9606.ENSP00000306253', 'kegg_db': 1}, {'shared name': '9606.ENSP00000329357', 'kegg_db': 1}, {'shared name': '9606.ENSP00000458663', 'kegg_db': 1}, {'shared name': '9606.ENSP00000428994', 'kegg_db': 1}, {'shared name': '9606.ENSP00000432568', 'kegg_db': 1}, {'shared name': '9606.ENSP00000338173', 'kegg_db': 1}, {'shared name': '9606.ENSP00000359531', 'kegg_db': 1}, {'shared name': '9606.ENSP00000261479', 'kegg_db': 1}, {'shared name': '9606.ENSP00000357876', 'kegg_db': 1}, {'shared name': '9606.ENSP00000440185', 'kegg_db': 1}, {'shared name': '9606.ENSP00000440485', 'kegg_db': 1}, {'shared name': '9606.ENSP00000354681', 'kegg_db': 1}, {'shared name': '9606.ENSP00000443631', 'kegg_db': 1}, {'shared name': '9606.ENSP00000252934', 'kegg_db': 1}, {'shared name': '9606.ENSP00000414359', 'kegg_db': 1}, {'shared name': '9606.ENSP00000440045', 'kegg_db': 1}, {'shared name': '9606.ENSP00000362144', 'kegg_db': 1}, {'shared name': '9606.ENSP00000215071', 'kegg_db': 1}, {'shared name': '9606.ENSP00000434241', 'kegg_db': 1}, {'shared name': '9606.ENSP00000353072', 'kegg_db': 1}, {'shared name': '9606.ENSP00000366475', 'kegg_db': 1}, {'shared name': '9606.ENSP00000219313', 'kegg_db': 1}, {'shared name': '9606.ENSP00000401445', 'kegg_db': 1}, {'shared name': '9606.ENSP00000370808', 'kegg_db': 1}, {'shared name': '9606.ENSP00000281456', 'kegg_db': 1}, {'shared name': '9606.ENSP00000348442', 'kegg_db': 1}, {'shared name': '9606.ENSP00000311121', 'kegg_db': 1}, {'shared name': '9606.ENSP00000234389', 'kegg_db': 1}, {'shared name': '9606.ENSP00000355325', 'kegg_db': 1}, {'shared name': '9606.ENSP00000309474', 'kegg_db': 1}, {'shared name': '9606.ENSP00000442793', 'kegg_db': 1}, {'shared name': '9606.ENSP00000309595', 'kegg_db': 1}, {'shared name': '9606.ENSP00000371532', 'kegg_db': 1}, {'shared name': '9606.ENSP00000496129', 'kegg_db': 1}, {'shared name': '9606.ENSP00000262139', 'kegg_db': 1}, {'shared name': '9606.ENSP00000363435', 'kegg_db': 1}, {'shared name': '9606.ENSP00000431926', 'kegg_db': 1}, {'shared name': '9606.ENSP00000044462', 'kegg_db': 1}, {'shared name': '9606.ENSP00000277746', 'kegg_db': 1}, {'shared name': '9606.ENSP00000341243', 'kegg_db': 1}, {'shared name': '9606.ENSP00000222254', 'kegg_db': 1}, {'shared name': '9606.ENSP00000368966', 'kegg_db': 1}, {'shared name': '9606.ENSP00000324560', 'kegg_db': 1}, {'shared name': '9606.ENSP00000477455', 'kegg_db': 1}, {'shared name': '9606.ENSP00000365301', 'kegg_db': 1}, {'shared name': '9606.ENSP00000157812', 'kegg_db': 1}, {'shared name': '9606.ENSP00000349205', 'kegg_db': 1}, {'shared name': '9606.ENSP00000481029', 'kegg_db': 1}, {'shared name': '9606.ENSP00000352608', 'kegg_db': 1}, {'shared name': '9606.ENSP00000367762', 'kegg_db': 1}, {'shared name': '9606.ENSP00000369996', 'kegg_db': 1}, {'shared name': '9606.ENSP00000263269', 'kegg_db': 1}, {'shared name': '9606.ENSP00000378974', 'kegg_db': 1}, {'shared name': '9606.ENSP00000345206', 'kegg_db': 1}, {'shared name': '9606.ENSP00000260402', 'kegg_db': 1}, {'shared name': '9606.ENSP00000432412', 'kegg_db': 1}, {'shared name': '9606.ENSP00000353010', 'kegg_db': 1}, {'shared name': '9606.ENSP00000428845', 'kegg_db': 1}, {'shared name': '9606.ENSP00000355155', 'kegg_db': 1}, {'shared name': '9606.ENSP00000259457', 'kegg_db': 1}, {'shared name': '9606.ENSP00000361635', 'kegg_db': 1}, {'shared name': '9606.ENSP00000489829', 'kegg_db': 1}, {'shared name': '9606.ENSP00000415822', 'kegg_db': 1}, {'shared name': '9606.ENSP00000237264', 'kegg_db': 1}, {'shared name': '9606.ENSP00000310129', 'kegg_db': 1}, {'shared name': '9606.ENSP00000354558', 'kegg_db': 1}, {'shared name': '9606.ENSP00000488361', 'kegg_db': 1}, {'shared name': '9606.ENSP00000247219', 'kegg_db': 1}, {'shared name': '9606.ENSP00000351908', 'kegg_db': 1}, {'shared name': '9606.ENSP00000481021', 'kegg_db': 1}, {'shared name': '9606.ENSP00000340330', 'kegg_db': 1}, {'shared name': '9606.ENSP00000483688', 'kegg_db': 1}, {'shared name': '9606.ENSP00000370589', 'kegg_db': 1}, {'shared name': '9606.ENSP00000360608', 'kegg_db': 1}, {'shared name': '9606.ENSP00000370744', 'kegg_db': 1}, {'shared name': '9606.ENSP00000286548', 'kegg_db': 1}, {'shared name': '9606.ENSP00000281154', 'kegg_db': 1}, {'shared name': '9606.ENSP00000264639', 'kegg_db': 1}, {'shared name': '9606.ENSP00000360270', 'kegg_db': 1}, {'shared name': '9606.ENSP00000261523', 'kegg_db': 1}, {'shared name': '9606.ENSP00000290541', 'kegg_db': 1}, {'shared name': '9606.ENSP00000221742', 'kegg_db': 1}, {'shared name': '9606.ENSP00000391723', 'kegg_db': 1}, {'shared name': '9606.ENSP00000247178', 'kegg_db': 1}, {'shared name': '9606.ENSP00000408695', 'kegg_db': 1}, {'shared name': '9606.ENSP00000250003', 'kegg_db': 1}, {'shared name': '9606.ENSP00000293190', 'kegg_db': 1}, {'shared name': '9606.ENSP00000269143', 'kegg_db': 1}, {'shared name': '9606.ENSP00000263967', 'kegg_db': 1}, {'shared name': '9606.ENSP00000386541', 'kegg_db': 1}, {'shared name': '9606.ENSP00000261303', 'kegg_db': 1}, {'shared name': '9606.ENSP00000262193', 'kegg_db': 1}, {'shared name': '9606.ENSP00000307786', 'kegg_db': 1}, {'shared name': '9606.ENSP00000296526', 'kegg_db': 1}, {'shared name': '9606.ENSP00000375892', 'kegg_db': 1}, {'shared name': '9606.ENSP00000216455', 'kegg_db': 1}, {'shared name': '9606.ENSP00000378487', 'kegg_db': 1}, {'shared name': '9606.ENSP00000025008', 'kegg_db': 1}, {'shared name': '9606.ENSP00000332549', 'kegg_db': 1}, {'shared name': '9606.ENSP00000366563', 'kegg_db': 1}, {'shared name': '9606.ENSP00000360671', 'kegg_db': 1}, {'shared name': '9606.ENSP00000391211', 'kegg_db': 1}, {'shared name': '9606.ENSP00000216037', 'kegg_db': 1}, {'shared name': '9606.ENSP00000262741', 'kegg_db': 1}, {'shared name': '9606.ENSP00000362334', 'kegg_db': 1}, {'shared name': '9606.ENSP00000338990', 'kegg_db': 1}, {'shared name': '9606.ENSP00000378917', 'kegg_db': 1}, {'shared name': '9606.ENSP00000263431', 'kegg_db': 1}, {'shared name': '9606.ENSP00000319591', 'kegg_db': 1}, {'shared name': '9606.ENSP00000394560', 'kegg_db': 1}, {'shared name': '9606.ENSP00000360280', 'kegg_db': 1}, {'shared name': '9606.ENSP00000428056', 'kegg_db': 1}, {'shared name': '9606.ENSP00000282753', 'kegg_db': 1}, {'shared name': '9606.ENSP00000392423', 'kegg_db': 1}, {'shared name': '9606.ENSP00000378914', 'kegg_db': 1}, {'shared name': '9606.ENSP00000481554', 'kegg_db': 1}, {'shared name': '9606.ENSP00000451828', 'kegg_db': 1}, {'shared name': '9606.ENSP00000359910', 'kegg_db': 1}, {'shared name': '9606.ENSP00000247668', 'kegg_db': 1}, {'shared name': '9606.ENSP00000355231', 'kegg_db': 1}, {'shared name': '9606.ENSP00000261712', 'kegg_db': 1}, {'shared name': '9606.ENSP00000270586', 'kegg_db': 1}, {'shared name': '9606.ENSP00000225174', 'kegg_db': 1}, {'shared name': '9606.ENSP00000349595', 'kegg_db': 1}, {'shared name': '9606.ENSP00000418695', 'kegg_db': 1}, {'shared name': '9606.ENSP00000262039', 'kegg_db': 1}, {'shared name': '9606.ENSP00000478877', 'kegg_db': 1}, {'shared name': '9606.ENSP00000345702', 'kegg_db': 1}, {'shared name': '9606.ENSP00000338185', 'kegg_db': 1}, {'shared name': '9606.ENSP00000446576', 'kegg_db': 1}, {'shared name': '9606.ENSP00000484998', 'kegg_db': 1}, {'shared name': '9606.ENSP00000396937', 'kegg_db': 1}, {'shared name': '9606.ENSP00000244769', 'kegg_db': 1}, {'shared name': '9606.ENSP00000310572', 'kegg_db': 1}]}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,615 [DEBUG] py4...: ǀHTTP PUT(http://127.0.0.1:1234/v1/networks/26235/tables/defaultnode), json: {'key': 'name', 'dataKey': 'shared name', 'data': [{'shared name': '9606.ENSP00000288828', 'kegg_db': 1}, {'shared name': '9606.ENSP00000223321', 'kegg_db': 1}, {'shared name': '9606.ENSP00000500582', 'kegg_db': 1}, {'shared name': '9606.ENSP00000230354', 'kegg_db': 1}, {'shared name': '9606.ENSP00000501150', 'kegg_db': 1}, {'shared name': '9606.ENSP00000496695', 'kegg_db': 1}, {'shared name': '9606.ENSP00000271308', 'kegg_db': 1}, {'shared name': '9606.ENSP00000306253', 'kegg_db': 1}, {'shared name': '9606.ENSP00000329357', 'kegg_db': 1}, {'shared name': '9606.ENSP00000458663', 'kegg_db': 1}, {'shared name': '9606.ENSP00000428994', 'kegg_db': 1}, {'shared name': '9606.ENSP00000432568', 'kegg_db': 1}, {'shared name': '9606.ENSP00000338173', 'kegg_db': 1}, {'shared name': '9606.ENSP00000359531', 'kegg_db': 1}, {'shared name': '9606.ENSP00000261479', 'kegg_db': 1}, {'shared name': '9606.ENSP00000357876', 'kegg_db': 1}, {'shared name': '9606.ENSP00000440185', 'kegg_db': 1}, {'shared name': '9606.ENSP00000440485', 'kegg_db': 1}, {'shared name': '9606.ENSP00000354681', 'kegg_db': 1}, {'shared name': '9606.ENSP00000443631', 'kegg_db': 1}, {'shared name': '9606.ENSP00000252934', 'kegg_db': 1}, {'shared name': '9606.ENSP00000414359', 'kegg_db': 1}, {'shared name': '9606.ENSP00000440045', 'kegg_db': 1}, {'shared name': '9606.ENSP00000362144', 'kegg_db': 1}, {'shared name': '9606.ENSP00000215071', 'kegg_db': 1}, {'shared name': '9606.ENSP00000434241', 'kegg_db': 1}, {'shared name': '9606.ENSP00000353072', 'kegg_db': 1}, {'shared name': '9606.ENSP00000366475', 'kegg_db': 1}, {'shared name': '9606.ENSP00000219313', 'kegg_db': 1}, {'shared name': '9606.ENSP00000401445', 'kegg_db': 1}, {'shared name': '9606.ENSP00000370808', 'kegg_db': 1}, {'shared name': '9606.ENSP00000281456', 'kegg_db': 1}, {'shared name': '9606.ENSP00000348442', 'kegg_db': 1}, {'shared name': '9606.ENSP00000311121', 'kegg_db': 1}, {'shared name': '9606.ENSP00000234389', 'kegg_db': 1}, {'shared name': '9606.ENSP00000355325', 'kegg_db': 1}, {'shared name': '9606.ENSP00000309474', 'kegg_db': 1}, {'shared name': '9606.ENSP00000442793', 'kegg_db': 1}, {'shared name': '9606.ENSP00000309595', 'kegg_db': 1}, {'shared name': '9606.ENSP00000371532', 'kegg_db': 1}, {'shared name': '9606.ENSP00000496129', 'kegg_db': 1}, {'shared name': '9606.ENSP00000262139', 'kegg_db': 1}, {'shared name': '9606.ENSP00000363435', 'kegg_db': 1}, {'shared name': '9606.ENSP00000431926', 'kegg_db': 1}, {'shared name': '9606.ENSP00000044462', 'kegg_db': 1}, {'shared name': '9606.ENSP00000277746', 'kegg_db': 1}, {'shared name': '9606.ENSP00000341243', 'kegg_db': 1}, {'shared name': '9606.ENSP00000222254', 'kegg_db': 1}, {'shared name': '9606.ENSP00000368966', 'kegg_db': 1}, {'shared name': '9606.ENSP00000324560', 'kegg_db': 1}, {'shared name': '9606.ENSP00000477455', 'kegg_db': 1}, {'shared name': '9606.ENSP00000365301', 'kegg_db': 1}, {'shared name': '9606.ENSP00000157812', 'kegg_db': 1}, {'shared name': '9606.ENSP00000349205', 'kegg_db': 1}, {'shared name': '9606.ENSP00000481029', 'kegg_db': 1}, {'shared name': '9606.ENSP00000352608', 'kegg_db': 1}, {'shared name': '9606.ENSP00000367762', 'kegg_db': 1}, {'shared name': '9606.ENSP00000369996', 'kegg_db': 1}, {'shared name': '9606.ENSP00000263269', 'kegg_db': 1}, {'shared name': '9606.ENSP00000378974', 'kegg_db': 1}, {'shared name': '9606.ENSP00000345206', 'kegg_db': 1}, {'shared name': '9606.ENSP00000260402', 'kegg_db': 1}, {'shared name': '9606.ENSP00000432412', 'kegg_db': 1}, {'shared name': '9606.ENSP00000353010', 'kegg_db': 1}, {'shared name': '9606.ENSP00000428845', 'kegg_db': 1}, {'shared name': '9606.ENSP00000355155', 'kegg_db': 1}, {'shared name': '9606.ENSP00000259457', 'kegg_db': 1}, {'shared name': '9606.ENSP00000361635', 'kegg_db': 1}, {'shared name': '9606.ENSP00000489829', 'kegg_db': 1}, {'shared name': '9606.ENSP00000415822', 'kegg_db': 1}, {'shared name': '9606.ENSP00000237264', 'kegg_db': 1}, {'shared name': '9606.ENSP00000310129', 'kegg_db': 1}, {'shared name': '9606.ENSP00000354558', 'kegg_db': 1}, {'shared name': '9606.ENSP00000488361', 'kegg_db': 1}, {'shared name': '9606.ENSP00000247219', 'kegg_db': 1}, {'shared name': '9606.ENSP00000351908', 'kegg_db': 1}, {'shared name': '9606.ENSP00000481021', 'kegg_db': 1}, {'shared name': '9606.ENSP00000340330', 'kegg_db': 1}, {'shared name': '9606.ENSP00000483688', 'kegg_db': 1}, {'shared name': '9606.ENSP00000370589', 'kegg_db': 1}, {'shared name': '9606.ENSP00000360608', 'kegg_db': 1}, {'shared name': '9606.ENSP00000370744', 'kegg_db': 1}, {'shared name': '9606.ENSP00000286548', 'kegg_db': 1}, {'shared name': '9606.ENSP00000281154', 'kegg_db': 1}, {'shared name': '9606.ENSP00000264639', 'kegg_db': 1}, {'shared name': '9606.ENSP00000360270', 'kegg_db': 1}, {'shared name': '9606.ENSP00000261523', 'kegg_db': 1}, {'shared name': '9606.ENSP00000290541', 'kegg_db': 1}, {'shared name': '9606.ENSP00000221742', 'kegg_db': 1}, {'shared name': '9606.ENSP00000391723', 'kegg_db': 1}, {'shared name': '9606.ENSP00000247178', 'kegg_db': 1}, {'shared name': '9606.ENSP00000408695', 'kegg_db': 1}, {'shared name': '9606.ENSP00000250003', 'kegg_db': 1}, {'shared name': '9606.ENSP00000293190', 'kegg_db': 1}, {'shared name': '9606.ENSP00000269143', 'kegg_db': 1}, {'shared name': '9606.ENSP00000263967', 'kegg_db': 1}, {'shared name': '9606.ENSP00000386541', 'kegg_db': 1}, {'shared name': '9606.ENSP00000261303', 'kegg_db': 1}, {'shared name': '9606.ENSP00000262193', 'kegg_db': 1}, {'shared name': '9606.ENSP00000307786', 'kegg_db': 1}, {'shared name': '9606.ENSP00000296526', 'kegg_db': 1}, {'shared name': '9606.ENSP00000375892', 'kegg_db': 1}, {'shared name': '9606.ENSP00000216455', 'kegg_db': 1}, {'shared name': '9606.ENSP00000378487', 'kegg_db': 1}, {'shared name': '9606.ENSP00000025008', 'kegg_db': 1}, {'shared name': '9606.ENSP00000332549', 'kegg_db': 1}, {'shared name': '9606.ENSP00000366563', 'kegg_db': 1}, {'shared name': '9606.ENSP00000360671', 'kegg_db': 1}, {'shared name': '9606.ENSP00000391211', 'kegg_db': 1}, {'shared name': '9606.ENSP00000216037', 'kegg_db': 1}, {'shared name': '9606.ENSP00000262741', 'kegg_db': 1}, {'shared name': '9606.ENSP00000362334', 'kegg_db': 1}, {'shared name': '9606.ENSP00000338990', 'kegg_db': 1}, {'shared name': '9606.ENSP00000378917', 'kegg_db': 1}, {'shared name': '9606.ENSP00000263431', 'kegg_db': 1}, {'shared name': '9606.ENSP00000319591', 'kegg_db': 1}, {'shared name': '9606.ENSP00000394560', 'kegg_db': 1}, {'shared name': '9606.ENSP00000360280', 'kegg_db': 1}, {'shared name': '9606.ENSP00000428056', 'kegg_db': 1}, {'shared name': '9606.ENSP00000282753', 'kegg_db': 1}, {'shared name': '9606.ENSP00000392423', 'kegg_db': 1}, {'shared name': '9606.ENSP00000378914', 'kegg_db': 1}, {'shared name': '9606.ENSP00000481554', 'kegg_db': 1}, {'shared name': '9606.ENSP00000451828', 'kegg_db': 1}, {'shared name': '9606.ENSP00000359910', 'kegg_db': 1}, {'shared name': '9606.ENSP00000247668', 'kegg_db': 1}, {'shared name': '9606.ENSP00000355231', 'kegg_db': 1}, {'shared name': '9606.ENSP00000261712', 'kegg_db': 1}, {'shared name': '9606.ENSP00000270586', 'kegg_db': 1}, {'shared name': '9606.ENSP00000225174', 'kegg_db': 1}, {'shared name': '9606.ENSP00000349595', 'kegg_db': 1}, {'shared name': '9606.ENSP00000418695', 'kegg_db': 1}, {'shared name': '9606.ENSP00000262039', 'kegg_db': 1}, {'shared name': '9606.ENSP00000478877', 'kegg_db': 1}, {'shared name': '9606.ENSP00000345702', 'kegg_db': 1}, {'shared name': '9606.ENSP00000338185', 'kegg_db': 1}, {'shared name': '9606.ENSP00000446576', 'kegg_db': 1}, {'shared name': '9606.ENSP00000484998', 'kegg_db': 1}, {'shared name': '9606.ENSP00000396937', 'kegg_db': 1}, {'shared name': '9606.ENSP00000244769', 'kegg_db': 1}, {'shared name': '9606.ENSP00000310572', 'kegg_db': 1}]}
2024-06-20 16:48:44,642 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:48:44,644 [DEBUG] py4...: ǀReturning 'cyrest_put': ''
2024-06-20 16:48:44,645 [DEBUG] py4...: Returning 'load_table_data': 'Success: Data loaded in defaultnode table'
2024-06-20 16:48:44,646 [DEBUG] py4...: --------------------
2024-06-20 16:48:44,646 [DEBUG] py4...: Calling delete_table_column('row.names')
2024-06-20 16:48:44,647 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,647 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,648 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:44,659 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 26235
}
],
 "errors":[]
}
2024-06-20 16:48:44,661 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 26235}]
2024-06-20 16:48:44,661 [DEBUG] py4...: ǀReturning 'get_network_suid': 26235
2024-06-20 16:48:44,662 [DEBUG] py4...: ǀCalling cyrest_delete('networks/26235/tables/defaultnode/columns/row.names', base_url='http://127.0.0.1:1234/v1', require_json=False)
2024-06-20 16:48:44,663 [DEBUG] py4...: ǀHTTP DELETE(http://127.0.0.1:1234/v1/networks/26235/tables/defaultnode/columns/row.names)
2024-06-20 16:48:44,673 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:48:44,674 [DEBUG] py4...: ǀReturning 'cyrest_delete': ''
2024-06-20 16:48:44,675 [DEBUG] py4...: Returning 'delete_table_column': ''
2024-06-20 16:48:44,675 [DEBUG] py4...: --------------------
2024-06-20 16:48:44,676 [DEBUG] py4...: Calling set_current_network(41686)
2024-06-20 16:48:44,676 [DEBUG] py4...: ǀCalling get_network_suid(41686)
2024-06-20 16:48:44,676 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,676 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:44,686 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:44,688 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:44,689 [DEBUG] py4...: ǀReturning 'get_network_suid': 41686
2024-06-20 16:48:44,690 [DEBUG] py4...: ǀCalling commands_post('network set current network="SUID:41686"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:44,690 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:41686'}
2024-06-20 16:48:46,406 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:46,406 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:48:46,407 [DEBUG] py4...: Returning 'set_current_network': {}
2024-06-20 16:48:46,407 [DEBUG] py4...: --------------------
2024-06-20 16:48:46,408 [DEBUG] py4...: Calling load_table_data(             shared name  wiki_db
0   9606.ENSP00000365807        1
1   9606.ENSP00000314407        1
2   9606.ENSP00000443631        1
3   9606.ENSP00000376352        1
4   9606.ENSP00000489262        1
5   9606.ENSP00000296526        1
6   9606.ENSP00000368966        1
7   9606.ENSP00000428994        1
8   9606.ENSP00000367762        1
9   9606.ENSP00000263431        1
10  9606.ENSP00000078429        1
11  9606.ENSP00000282499        1
12  9606.ENSP00000338185        1
13  9606.ENSP00000489829        1
14  9606.ENSP00000353414        1
15  9606.ENSP00000282753        1
16  9606.ENSP00000439937        1
17  9606.ENSP00000262958        1
18  9606.ENSP00000286548        1
19  9606.ENSP00000260402        1
20  9606.ENSP00000481554        1, data_key_column='shared name', network=41686)
2024-06-20 16:48:46,409 [DEBUG] py4...: ǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,409 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,409 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:46,414 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:46,415 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:46,415 [DEBUG] py4...: ǀReturning 'get_network_suid': 41686
2024-06-20 16:48:46,415 [DEBUG] py4...: ǀCalling get_table_columns(table='node', namespace='default', columns='name', network=41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,416 [DEBUG] py4...: ǀǀCalling get_network_suid(41686, 'http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,416 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,416 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:46,423 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:46,424 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:46,424 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:46,424 [DEBUG] py4...: ǀǀCalling get_table_column_types('node', namespace='default', network=41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,424 [DEBUG] py4...: ǀǀǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,425 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,425 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:46,431 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:46,432 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:46,432 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:46,432 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/41686/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,432 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/41686/tables/defaultnode/columns)
2024-06-20 16:48:46,437 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:48:46,438 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:46,438 [DEBUG] py4...: ǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'stringdb::canonical name': 'String', 'display name': 'String', 'stringdb::full name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', '@id': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'query term': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::imageurl': 'String', 'stringdb::STRING style': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'name.copy': 'String', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'ChEBI': 'String', 'uniprot': 'String'}
2024-06-20 16:48:46,438 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/41686/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,438 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/41686/tables/defaultnode/columns/SUID)
2024-06-20 16:48:46,444 [DEBUG] py4...: ǀǀOK[200], content: {"name":"SUID","values":[41871,41874,41877,41880,41883,41886,41889,41892,41895,41898,41901,41904,41907,41910,41913,41916,41919,41922,41925,41928,41931]}
2024-06-20 16:48:46,444 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [41871, 41874, 41877, 41880, 41883, 41886, 41889, 41892, 41895, 41898, 41901, 41904, 41907, 41910, 41913, 41916, 41919, 41922, 41925, 41928, 41931]}
2024-06-20 16:48:46,445 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/41686/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,445 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/41686/tables/defaultnode/columns/name)
2024-06-20 16:48:46,449 [DEBUG] py4...: ǀǀOK[200], content: {"name":"name","values":["9606.ENSP00000365807","9606.ENSP00000314407","9606.ENSP00000443631","9606.ENSP00000376352","9606.ENSP00000489262","9606.ENSP00000296526","9606.ENSP00000368966","9606.ENSP00000428994","9606.ENSP00000367762","9606.ENSP00000263431","9606.ENSP00000078429","9606.ENSP00000282499","9606.ENSP00000338185","9606.ENSP00000489829","9606.ENSP00000353414","9606.ENSP00000282753","9606.ENSP00000439937","9606.ENSP00000262958","9606.ENSP00000286548","9606.ENSP00000260402","9606.ENSP00000481554"]}
2024-06-20 16:48:46,451 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000365807', '9606.ENSP00000314407', '9606.ENSP00000443631', '9606.ENSP00000376352', '9606.ENSP00000489262', '9606.ENSP00000296526', '9606.ENSP00000368966', '9606.ENSP00000428994', '9606.ENSP00000367762', '9606.ENSP00000263431', '9606.ENSP00000078429', '9606.ENSP00000282499', '9606.ENSP00000338185', '9606.ENSP00000489829', '9606.ENSP00000353414', '9606.ENSP00000282753', '9606.ENSP00000439937', '9606.ENSP00000262958', '9606.ENSP00000286548', '9606.ENSP00000260402', '9606.ENSP00000481554']}
2024-06-20 16:48:46,452 [DEBUG] py4...: ǀReturning 'get_table_columns':                        name
41871  9606.ENSP00000365807
41874  9606.ENSP00000314407
41877  9606.ENSP00000443631
41880  9606.ENSP00000376352
41883  9606.ENSP00000489262
41886  9606.ENSP00000296526
41889  9606.ENSP00000368966
41892  9606.ENSP00000428994
41895  9606.ENSP00000367762
41898  9606.ENSP00000263431
41901  9606.ENSP00000078429
41904  9606.ENSP00000282499
41907  9606.ENSP00000338185
41910  9606.ENSP00000489829
41913  9606.ENSP00000353414
41916  9606.ENSP00000282753
41919  9606.ENSP00000439937
41922  9606.ENSP00000262958
41925  9606.ENSP00000286548
41928  9606.ENSP00000260402
41931  9606.ENSP00000481554
2024-06-20 16:48:46,454 [DEBUG] py4...: ǀCalling get_table_column_names('node', 'default', 41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,454 [DEBUG] py4...: ǀǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,455 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,455 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:46,460 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:46,460 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:46,461 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:46,461 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/41686/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,461 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/41686/tables/defaultnode/columns)
2024-06-20 16:48:46,466 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:48:46,467 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:46,467 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'stringdb::canonical name', 'display name', 'stringdb::full name', 'stringdb::database identifier', 'stringdb::description', '@id', 'stringdb::namespace', 'stringdb::node type', 'query term', 'stringdb::sequence', 'stringdb::species', 'stringdb::imageurl', 'stringdb::STRING style', 'stringdb::enhancedLabel Passthrough', 'compartment::cytoskeleton', 'compartment::cytosol', 'compartment::endoplasmic reticulum', 'compartment::endosome', 'compartment::extracellular', 'compartment::golgi apparatus', 'compartment::lysosome', 'compartment::mitochondrion', 'compartment::nucleus', 'compartment::peroxisome', 'compartment::plasma membrane', 'stringdb::structures', 'target::development level', 'target::family', 'tissue::adrenal gland', 'tissue::blood', 'tissue::bone', 'tissue::bone marrow', 'tissue::eye', 'tissue::gall bladder', 'tissue::heart', 'tissue::intestine', 'tissue::kidney', 'tissue::liver', 'tissue::lung', 'tissue::muscle', 'tissue::nervous system', 'tissue::pancreas', 'tissue::saliva', 'tissue::skin', 'tissue::spleen', 'tissue::stomach', 'tissue::thyroid gland', 'tissue::urine', 'name.copy', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'ChEBI', 'uniprot']
2024-06-20 16:48:46,467 [DEBUG] py4...: ǀCalling cyrest_post('networks/41686/tables/defaultnode/columns', body={'name': 'wiki_db', 'type': 'Integer'}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,467 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/networks/41686/tables/defaultnode/columns), json: {'name': 'wiki_db', 'type': 'Integer'}
2024-06-20 16:48:46,516 [DEBUG] py4...: ǀCreated[201], content: 
2024-06-20 16:48:46,516 [DEBUG] py4...: ǀReturning 'cyrest_post': ''
2024-06-20 16:48:46,517 [DEBUG] py4...: ǀCalling cyrest_put('networks/41686/tables/defaultnode', body={'key': 'name', 'dataKey': 'shared name', 'data': [{'shared name': '9606.ENSP00000365807', 'wiki_db': 1}, {'shared name': '9606.ENSP00000314407', 'wiki_db': 1}, {'shared name': '9606.ENSP00000443631', 'wiki_db': 1}, {'shared name': '9606.ENSP00000376352', 'wiki_db': 1}, {'shared name': '9606.ENSP00000489262', 'wiki_db': 1}, {'shared name': '9606.ENSP00000296526', 'wiki_db': 1}, {'shared name': '9606.ENSP00000368966', 'wiki_db': 1}, {'shared name': '9606.ENSP00000428994', 'wiki_db': 1}, {'shared name': '9606.ENSP00000367762', 'wiki_db': 1}, {'shared name': '9606.ENSP00000263431', 'wiki_db': 1}, {'shared name': '9606.ENSP00000078429', 'wiki_db': 1}, {'shared name': '9606.ENSP00000282499', 'wiki_db': 1}, {'shared name': '9606.ENSP00000338185', 'wiki_db': 1}, {'shared name': '9606.ENSP00000489829', 'wiki_db': 1}, {'shared name': '9606.ENSP00000353414', 'wiki_db': 1}, {'shared name': '9606.ENSP00000282753', 'wiki_db': 1}, {'shared name': '9606.ENSP00000439937', 'wiki_db': 1}, {'shared name': '9606.ENSP00000262958', 'wiki_db': 1}, {'shared name': '9606.ENSP00000286548', 'wiki_db': 1}, {'shared name': '9606.ENSP00000260402', 'wiki_db': 1}, {'shared name': '9606.ENSP00000481554', 'wiki_db': 1}]}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,517 [DEBUG] py4...: ǀHTTP PUT(http://127.0.0.1:1234/v1/networks/41686/tables/defaultnode), json: {'key': 'name', 'dataKey': 'shared name', 'data': [{'shared name': '9606.ENSP00000365807', 'wiki_db': 1}, {'shared name': '9606.ENSP00000314407', 'wiki_db': 1}, {'shared name': '9606.ENSP00000443631', 'wiki_db': 1}, {'shared name': '9606.ENSP00000376352', 'wiki_db': 1}, {'shared name': '9606.ENSP00000489262', 'wiki_db': 1}, {'shared name': '9606.ENSP00000296526', 'wiki_db': 1}, {'shared name': '9606.ENSP00000368966', 'wiki_db': 1}, {'shared name': '9606.ENSP00000428994', 'wiki_db': 1}, {'shared name': '9606.ENSP00000367762', 'wiki_db': 1}, {'shared name': '9606.ENSP00000263431', 'wiki_db': 1}, {'shared name': '9606.ENSP00000078429', 'wiki_db': 1}, {'shared name': '9606.ENSP00000282499', 'wiki_db': 1}, {'shared name': '9606.ENSP00000338185', 'wiki_db': 1}, {'shared name': '9606.ENSP00000489829', 'wiki_db': 1}, {'shared name': '9606.ENSP00000353414', 'wiki_db': 1}, {'shared name': '9606.ENSP00000282753', 'wiki_db': 1}, {'shared name': '9606.ENSP00000439937', 'wiki_db': 1}, {'shared name': '9606.ENSP00000262958', 'wiki_db': 1}, {'shared name': '9606.ENSP00000286548', 'wiki_db': 1}, {'shared name': '9606.ENSP00000260402', 'wiki_db': 1}, {'shared name': '9606.ENSP00000481554', 'wiki_db': 1}]}
2024-06-20 16:48:46,527 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:48:46,527 [DEBUG] py4...: ǀReturning 'cyrest_put': ''
2024-06-20 16:48:46,527 [DEBUG] py4...: Returning 'load_table_data': 'Success: Data loaded in defaultnode table'
2024-06-20 16:48:46,528 [DEBUG] py4...: --------------------
2024-06-20 16:48:46,528 [DEBUG] py4...: Calling delete_table_column('row.names')
2024-06-20 16:48:46,528 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,528 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,529 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:46,537 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 41686
}
],
 "errors":[]
}
2024-06-20 16:48:46,538 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 41686}]
2024-06-20 16:48:46,538 [DEBUG] py4...: ǀReturning 'get_network_suid': 41686
2024-06-20 16:48:46,538 [DEBUG] py4...: ǀCalling cyrest_delete('networks/41686/tables/defaultnode/columns/row.names', base_url='http://127.0.0.1:1234/v1', require_json=False)
2024-06-20 16:48:46,539 [DEBUG] py4...: ǀHTTP DELETE(http://127.0.0.1:1234/v1/networks/41686/tables/defaultnode/columns/row.names)
2024-06-20 16:48:46,546 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:48:46,546 [DEBUG] py4...: ǀReturning 'cyrest_delete': ''
2024-06-20 16:48:46,547 [DEBUG] py4...: Returning 'delete_table_column': ''
2024-06-20 16:48:46,547 [DEBUG] py4...: --------------------
2024-06-20 16:48:46,547 [DEBUG] py4...: Calling set_current_network(42582)
2024-06-20 16:48:46,548 [DEBUG] py4...: ǀCalling get_network_suid(42582)
2024-06-20 16:48:46,548 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,548 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:46,554 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:46,555 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:46,555 [DEBUG] py4...: ǀReturning 'get_network_suid': 42582
2024-06-20 16:48:46,555 [DEBUG] py4...: ǀCalling commands_post('network set current network="SUID:42582"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:46,556 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:42582'}
2024-06-20 16:48:47,162 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:47,163 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:48:47,163 [DEBUG] py4...: Returning 'set_current_network': {}
2024-06-20 16:48:47,163 [DEBUG] py4...: --------------------
2024-06-20 16:48:47,165 [DEBUG] py4...: Calling load_table_data(              shared name  string_db
0    9606.ENSP00000263160          1
1    9606.ENSP00000227507          1
2    9606.ENSP00000400142          1
3    9606.ENSP00000252804          1
4    9606.ENSP00000371985          1
..                    ...        ...
729  9606.ENSP00000269228          1
730  9606.ENSP00000403888          1
731  9606.ENSP00000306894          1
732  9606.ENSP00000254325          1
733  9606.ENSP00000307863          1

[734 rows x 2 columns], data_key_column='shared name', network=42582)
2024-06-20 16:48:47,165 [DEBUG] py4...: ǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,166 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,166 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:47,171 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:47,172 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:47,172 [DEBUG] py4...: ǀReturning 'get_network_suid': 42582
2024-06-20 16:48:47,172 [DEBUG] py4...: ǀCalling get_table_columns(table='node', namespace='default', columns='name', network=42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,172 [DEBUG] py4...: ǀǀCalling get_network_suid(42582, 'http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,173 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,173 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:47,178 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:47,178 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:47,178 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:47,178 [DEBUG] py4...: ǀǀCalling get_table_column_types('node', namespace='default', network=42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,178 [DEBUG] py4...: ǀǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,178 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,179 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:47,185 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:47,186 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:47,186 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:47,186 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,187 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns)
2024-06-20 16:48:47,192 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false}]
2024-06-20 16:48:47,193 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:47,193 [DEBUG] py4...: ǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'stringdb::canonical name': 'String', 'display name': 'String', 'stringdb::full name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', '@id': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'query term': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::imageurl': 'String', 'stringdb::STRING style': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'stringdb::disease score': 'Double'}
2024-06-20 16:48:47,193 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,193 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns/SUID)
2024-06-20 16:48:47,199 [DEBUG] py4...: ǀǀOK[200], content: {"name":"SUID","values":[44033,43010,44036,43013,44039,43016,44042,43019,44045,43022,44048,43025,44051,43028,44054,43031,44057,43034,44060,43037,44063,43040,44066,43043,44069,43046,44072,43049,44075,43052,44078,43055,44081,43058,44084,43061,44087,43064,44090,43067,44093,43070,44096,43073,44099,43076,44102,43079,44105,43082,44108,43085,44111,43088,44114,43091,44117,43094,44120,43097,44123,43100,44126,43103,44129,43106,44132,43109,44135,43112,44138,43115,44141,43118,44144,43121,44147,43124,44150,43127,44153,43130,44156,43133,44159,43136,44162,43139,44165,43142,44168,43145,44171,43148,44174,43151,44177,43154,44180,43157,44183,43160,44186,43163,44189,43166,44192,43169,44195,43172,44198,43175,44201,43178,44204,43181,44207,43184,44210,43187,44213,43190,44216,43193,44219,43196,44222,43199,44225,43202,44228,43205,44231,43208,44234,43211,44237,43214,44240,43217,44243,43220,44246,43223,44249,43226,44252,43229,44255,43232,44258,43235,44261,43238,44264,43241,44267,43244,44270,43247,44273,43250,44276,43253,44279,43256,44282,43259,44285,43262,44288,43265,44291,43268,44294,43271,44297,43274,44300,43277,44303,43280,44306,43283,44309,43286,44312,43289,44315,43292,44318,43295,44321,43298,44324,43301,44327,43304,44330,43307,44333,43310,44336,43313,44339,43316,44342,43319,44345,43322,44348,43325,44351,43328,44354,43331,44357,43334,44360,43337,44363,43340,44366,43343,44369,43346,44372,43349,44375,43352,44378,43355,44381,43358,44384,43361,44387,43364,44390,43367,44393,43370,44396,43373,44399,43376,44402,43379,44405,43382,44408,43385,44411,43388,44414,43391,44417,43394,44420,43397,44423,43400,44426,43403,44429,43406,44432,43409,44435,43412,44438,43415,44441,43418,44444,43421,44447,43424,44450,43427,44453,43430,44456,43433,44459,43436,44462,43439,44465,43442,44468,43445,44471,43448,44474,43451,44477,43454,44480,43457,44483,43460,44486,43463,44489,43466,44492,43469,44495,43472,44498,43475,44501,43478,44504,43481,44507,43484,44510,43487,44513,43490,44516,43493,44519,43496,44522,43499,44525,43502,44528,43505,44531,43508,44534,43511,44537,43514,44540,43517,44543,43520,44546,43523,44549,43526,44552,43529,44555,43532,44558,43535,44561,43538,44564,43541,44567,43544,44570,43547,44573,43550,44576,43553,44579,43556,44582,43559,44585,43562,44588,43565,44591,43568,44594,43571,44597,43574,44600,43577,44603,43580,44606,43583,44609,43586,44612,43589,44615,43592,44618,43595,44621,43598,44624,43601,44627,43604,44630,43607,44633,43610,44636,43613,44639,43616,44642,43619,44645,43622,44648,43625,44651,43628,44654,43631,44657,43634,44660,43637,44663,43640,44666,43643,44669,43646,44672,43649,44675,43652,44678,43655,44681,43658,44684,43661,44687,43664,44690,43667,44693,43670,44696,43673,44699,43676,44702,43679,44705,43682,44708,43685,44711,43688,44714,43691,44717,43694,44720,43697,44723,43700,44726,43703,44729,43706,44732,43709,44735,43712,44738,43715,44741,43718,44744,43721,44747,43724,44750,43727,44753,43730,44756,43733,44759,43736,44762,43739,44765,43742,44768,43745,44771,43748,44774,43751,44777,43754,44780,43757,44783,43760,44786,43763,44789,43766,44792,43769,44795,43772,44798,43775,44801,43778,44804,43781,44807,43784,44810,43787,44813,43790,42767,44816,43793,42770,44819,43796,42773,44822,43799,42776,44825,43802,42779,44828,43805,42782,44831,43808,42785,44834,43811,42788,44837,43814,42791,44840,43817,42794,44843,43820,42797,44846,43823,42800,44849,43826,42803,44852,43829,42806,44855,43832,42809,44858,43835,42812,44861,43838,42815,44864,43841,42818,44867,43844,42821,44870,43847,42824,44873,43850,42827,44876,43853,42830,44879,43856,42833,44882,43859,42836,44885,43862,42839,44888,43865,42842,44891,43868,42845,44894,43871,42848,44897,43874,42851,44900,43877,42854,44903,43880,42857,44906,43883,42860,44909,43886,42863,44912,43889,42866,44915,43892,42869,44918,43895,42872,44921,43898,42875,44924,43901,42878,44927,43904,42881,44930,43907,42884,44933,43910,42887,44936,43913,42890,44939,43916,42893,44942,43919,42896,44945,43922,42899,44948,43925,42902,44951,43928,42905,44954,43931,42908,44957,43934,42911,44960,43937,42914,44963,43940,42917,44966,43943,42920,43946,42923,43949,42926,43952,42929,43955,42932,43958,42935,43961,42938,43964,42941,43967,42944,43970,42947,43973,42950,43976,42953,43979,42956,43982,42959,43985,42962,43988,42965,43991,42968,43994,42971,43997,42974,44000,42977,44003,42980,44006,42983,44009,42986,44012,42989,44015,42992,44018,42995,44021,42998,44024,43001,44027,43004,44030,43007]}
2024-06-20 16:48:47,199 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [44033, 43010, 44036, 43013, 44039, 43016, 44042, 43019, 44045, 43022, 44048, 43025, 44051, 43028, 44054, 43031, 44057, 43034, 44060, 43037, 44063, 43040, 44066, 43043, 44069, 43046, 44072, 43049, 44075, 43052, 44078, 43055, 44081, 43058, 44084, 43061, 44087, 43064, 44090, 43067, 44093, 43070, 44096, 43073, 44099, 43076, 44102, 43079, 44105, 43082, 44108, 43085, 44111, 43088, 44114, 43091, 44117, 43094, 44120, 43097, 44123, 43100, 44126, 43103, 44129, 43106, 44132, 43109, 44135, 43112, 44138, 43115, 44141, 43118, 44144, 43121, 44147, 43124, 44150, 43127, 44153, 43130, 44156, 43133, 44159, 43136, 44162, 43139, 44165, 43142, 44168, 43145, 44171, 43148, 44174, 43151, 44177, 43154, 44180, 43157, 44183, 43160, 44186, 43163, 44189, 43166, 44192, 43169, 44195, 43172, 44198, 43175, 44201, 43178, 44204, 43181, 44207, 43184, 44210, 43187, 44213, 43190, 44216, 43193, 44219, 43196, 44222, 43199, 44225, 43202, 44228, 43205, 44231, 43208, 44234, 43211, 44237, 43214, 44240, 43217, 44243, 43220, 44246, 43223, 44249, 43226, 44252, 43229, 44255, 43232, 44258, 43235, 44261, 43238, 44264, 43241, 44267, 43244, 44270, 43247, 44273, 43250, 44276, 43253, 44279, 43256, 44282, 43259, 44285, 43262, 44288, 43265, 44291, 43268, 44294, 43271, 44297, 43274, 44300, 43277, 44303, 43280, 44306, 43283, 44309, 43286, 44312, 43289, 44315, 43292, 44318, 43295, 44321, 43298, 44324, 43301, 44327, 43304, 44330, 43307, 44333, 43310, 44336, 43313, 44339, 43316, 44342, 43319, 44345, 43322, 44348, 43325, 44351, 43328, 44354, 43331, 44357, 43334, 44360, 43337, 44363, 43340, 44366, 43343, 44369, 43346, 44372, 43349, 44375, 43352, 44378, 43355, 44381, 43358, 44384, 43361, 44387, 43364, 44390, 43367, 44393, 43370, 44396, 43373, 44399, 43376, 44402, 43379, 44405, 43382, 44408, 43385, 44411, 43388, 44414, 43391, 44417, 43394, 44420, 43397, 44423, 43400, 44426, 43403, 44429, 43406, 44432, 43409, 44435, 43412, 44438, 43415, 44441, 43418, 44444, 43421, 44447, 43424, 44450, 43427, 44453, 43430, 44456, 43433, 44459, 43436, 44462, 43439, 44465, 43442, 44468, 43445, 44471, 43448, 44474, 43451, 44477, 43454, 44480, 43457, 44483, 43460, 44486, 43463, 44489, 43466, 44492, 43469, 44495, 43472, 44498, 43475, 44501, 43478, 44504, 43481, 44507, 43484, 44510, 43487, 44513, 43490, 44516, 43493, 44519, 43496, 44522, 43499, 44525, 43502, 44528, 43505, 44531, 43508, 44534, 43511, 44537, 43514, 44540, 43517, 44543, 43520, 44546, 43523, 44549, 43526, 44552, 43529, 44555, 43532, 44558, 43535, 44561, 43538, 44564, 43541, 44567, 43544, 44570, 43547, 44573, 43550, 44576, 43553, 44579, 43556, 44582, 43559, 44585, 43562, 44588, 43565, 44591, 43568, 44594, 43571, 44597, 43574, 44600, 43577, 44603, 43580, 44606, 43583, 44609, 43586, 44612, 43589, 44615, 43592, 44618, 43595, 44621, 43598, 44624, 43601, 44627, 43604, 44630, 43607, 44633, 43610, 44636, 43613, 44639, 43616, 44642, 43619, 44645, 43622, 44648, 43625, 44651, 43628, 44654, 43631, 44657, 43634, 44660, 43637, 44663, 43640, 44666, 43643, 44669, 43646, 44672, 43649, 44675, 43652, 44678, 43655, 44681, 43658, 44684, 43661, 44687, 43664, 44690, 43667, 44693, 43670, 44696, 43673, 44699, 43676, 44702, 43679, 44705, 43682, 44708, 43685, 44711, 43688, 44714, 43691, 44717, 43694, 44720, 43697, 44723, 43700, 44726, 43703, 44729, 43706, 44732, 43709, 44735, 43712, 44738, 43715, 44741, 43718, 44744, 43721, 44747, 43724, 44750, 43727, 44753, 43730, 44756, 43733, 44759, 43736, 44762, 43739, 44765, 43742, 44768, 43745, 44771, 43748, 44774, 43751, 44777, 43754, 44780, 43757, 44783, 43760, 44786, 43763, 44789, 43766, 44792, 43769, 44795, 43772, 44798, 43775, 44801, 43778, 44804, 43781, 44807, 43784, 44810, 43787, 44813, 43790, 42767, 44816, 43793, 42770, 44819, 43796, 42773, 44822, 43799, 42776, 44825, 43802, 42779, 44828, 43805, 42782, 44831, 43808, 42785, 44834, 43811, 42788, 44837, 43814, 42791, 44840, 43817, 42794, 44843, 43820, 42797, 44846, 43823, 42800, 44849, 43826, 42803, 44852, 43829, 42806, 44855, 43832, 42809, 44858, 43835, 42812, 44861, 43838, 42815, 44864, 43841, 42818, 44867, 43844, 42821, 44870, 43847, 42824, 44873, 43850, 42827, 44876, 43853, 42830, 44879, 43856, 42833, 44882, 43859, 42836, 44885, 43862, 42839, 44888, 43865, 42842, 44891, 43868, 42845, 44894, 43871, 42848, 44897, 43874, 42851, 44900, 43877, 42854, 44903, 43880, 42857, 44906, 43883, 42860, 44909, 43886, 42863, 44912, 43889, 42866, 44915, 43892, 42869, 44918, 43895, 42872, 44921, 43898, 42875, 44924, 43901, 42878, 44927, 43904, 42881, 44930, 43907, 42884, 44933, 43910, 42887, 44936, 43913, 42890, 44939, 43916, 42893, 44942, 43919, 42896, 44945, 43922, 42899, 44948, 43925, 42902, 44951, 43928, 42905, 44954, 43931, 42908, 44957, 43934, 42911, 44960, 43937, 42914, 44963, 43940, 42917, 44966, 43943, 42920, 43946, 42923, 43949, 42926, 43952, 42929, 43955, 42932, 43958, 42935, 43961, 42938, 43964, 42941, 43967, 42944, 43970, 42947, 43973, 42950, 43976, 42953, 43979, 42956, 43982, 42959, 43985, 42962, 43988, 42965, 43991, 42968, 43994, 42971, 43997, 42974, 44000, 42977, 44003, 42980, 44006, 42983, 44009, 42986, 44012, 42989, 44015, 42992, 44018, 42995, 44021, 42998, 44024, 43001, 44027, 43004, 44030, 43007]}
2024-06-20 16:48:47,200 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,201 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns/name)
2024-06-20 16:48:47,207 [DEBUG] py4...: ǀǀOK[200], content: {"name":"name","values":["9606.ENSP00000263160","9606.ENSP00000227507","9606.ENSP00000400142","9606.ENSP00000252804","9606.ENSP00000371985","9606.ENSP00000418447","9606.ENSP00000342056","9606.ENSP00000362014","9606.ENSP00000265459","9606.ENSP00000258106","9606.ENSP00000263038","9606.ENSP00000326366","9606.ENSP00000450873","9606.ENSP00000354929","9606.ENSP00000221996","9606.ENSP00000478887","9606.ENSP00000331040","9606.ENSP00000408526","9606.hsa-miR-155-5p","9606.ENSP00000477437","9606.ENSP00000246914","9606.ENSP00000359095","9606.ENSP00000299001","9606.ENSP00000432568","9606.ENSP00000220420","9606.ENSP00000380903","9606.ENSP00000392423","9606.ENSP00000498362","9606.hsa-miR-132-3p","9606.ENSP00000374354","9606.ENSP00000355231","9606.ENSP00000354923","9606.ENSP00000378394","9606.ENSP00000351777","9606.ENSP00000336712","9606.ENSP00000260665","9606.ENSP00000215095","9606.ENSP00000390941","9606.hsa-miR-106b-5p","9606.ENSP00000443631","9606.ENSP00000442920","9606.ENSP00000484060","9606.ENSP00000312987","9606.ENSP00000224140","9606.ENSP00000473623","9606.ENSP00000295987","9606.ENSP00000262039","9606.ENSP00000419243","9606.ENSP00000323511","9606.ENSP00000358283","9606.ENSP00000321455","9606.ENSP00000364204","9606.ENSP00000264335","9606.ENSP00000287713","9606.ENSP00000252482","9606.ENSP00000282020","9606.ENSP00000265421","9606.ENSP00000282146","9606.ENSP00000244769","9606.ENSP00000364210","9606.ENSP00000303709","9606.ENSP00000430432","9606.ENSP00000278616","9606.hsa-miR-1909-3p","9606.ENSP00000354497","9606.ENSP00000352738","9606.ENSP00000378284","9606.ENSP00000228872","9606.ENSP00000470248","9606.ENSP00000398698","9606.ENSP00000480050","9606.ENSP00000337353","9606.hsa-miR-760","9606.ENSP00000406293","9606.ENSP00000356790","9606.ENSP00000260116","9606.ENSP00000230354","9606.ENSP00000442793","9606.ENSP00000255631","9606.ENSP00000489624","9606.hsa-miR-144-3p","9606.ENSP00000464342","9606.ENSP00000252486","9606.ENSP00000285419","9606.ENSP00000369689","9606.ENSP00000286628","9606.ENSP00000343001","9606.ENSP00000391942","9606.hsa-miR-130a-3p","9606.ENSP00000441685","9606.ENSP00000302967","9606.ENSP00000490614","9606.ENSP00000263257","9606.ENSP00000358155","9606.ENSP00000428994","9606.ENSP00000383199","9606.ENSP00000359890","9606.ENSP00000340989","9606.ENSP00000265431","9606.ENSP00000292246","9606.ENSP00000354125","9606.ENSP00000295756","9606.ENSP00000358967","9606.ENSP00000358151","9606.ENSP00000310585","9606.ENSP00000362399","9606.ENSP00000357876","9606.ENSP00000363123","9606.ENSP00000417864","9606.ENSP00000295757","9606.ENSP00000354360","9606.ENSP00000040584","9606.ENSP00000492363","9606.ENSP00000365301","9606.ENSP00000219476","9606.ENSP00000386229","9606.ENSP00000291700","9606.ENSP00000287820","9606.ENSP00000368007","9606.ENSP00000263754","9606.ENSP00000288490","9606.ENSP00000284551","9606.ENSP00000434241","9606.ENSP00000302108","9606.ENSP00000403343","9606.ENSP00000385142","9606.ENSP00000264036","9606.ENSP00000283228","9606.ENSP00000391381","9606.ENSP00000406286","9606.hsa-miR-548ae","9606.ENSP00000479719","9606.ENSP00000320347","9606.ENSP00000264606","9606.ENSP00000258962","9606.ENSP00000337103","9606.ENSP00000424566","9606.ENSP00000270142","9606.ENSP00000426503","9606.ENSP00000272444","9606.ENSP00000402257","9606.ENSP00000298910","9606.ENSP00000264276","9606.ENSP00000341826","9606.ENSP00000269601","9606.ENSP00000345195","9606.ENSP00000366070","9606.ENSP00000294435","9606.ENSP00000277120","9606.ENSP00000480916","9606.ENSP00000391269","9606.ENSP00000357292","9606.ENSP00000480012","9606.ENSP00000303356","9606.ENSP00000494538","9606.ENSP00000323046","9606.ENSP00000220592","9606.ENSP00000053867","9606.ENSP00000354111","9606.ENSP00000387593","9606.ENSP00000415676","9606.ENSP00000282486","9606.ENSP00000240185","9606.ENSP00000391723","9606.ENSP00000497806","9606.ENSP00000351742","9606.ENSP00000496959","9606.ENSP00000376322","9606.ENSP00000254488","9606.ENSP00000335153","9606.ENSP00000266594","9606.ENSP00000261667","9606.ENSP00000435466","9606.ENSP00000263967","9606.ENSP00000313829","9606.ENSP00000487785","9606.ENSP00000265381","9606.ENSP00000410769","9606.ENSP00000345997","9606.ENSP00000261427","9606.ENSP00000265379","9606.ENSP00000257290","9606.ENSP00000225916","9606.ENSP00000246186","9606.ENSP00000481593","9606.ENSP00000500386","9606.ENSP00000439937","9606.ENSP00000313007","9606.ENSP00000370571","9606.ENSP00000295897","9606.ENSP00000297261","9606.ENSP00000362299","9606.ENSP00000310561","9606.ENSP00000295777","9606.ENSP00000354346","9606.ENSP00000345064","9606.ENSP00000282928","9606.ENSP00000387699","9606.ENSP00000309457","9606.ENSP00000258149","9606.ENSP00000381488","9606.ENSP00000364118","9606.ENSP00000298596","9606.ENSP00000272317","9606.ENSP00000267890","9606.ENSP00000497594","9606.ENSP00000379287","9606.ENSP00000497112","9606.ENSP00000360660","9606.ENSP00000397259","9606.ENSP00000266682","9606.ENSP00000477999","9606.ENSP00000265351","9606.ENSP00000282356","9606.ENSP00000301727","9606.ENSP00000351614","9606.ENSP00000369127","9606.ENSP00000313377","9606.ENSP00000370589","9606.ENSP00000339867","9606.ENSP00000302814","9606.ENSP00000228644","9606.ENSP00000343690","9606.ENSP00000410759","9606.ENSP00000264498","9606.ENSP00000356982","9606.ENSP00000264255","9606.NEAT1","9606.ENSP00000436679","9606.ENSP00000381382","9606.FAM41C","9606.ENSP00000379181","9606.ENSP00000324806","9606.ENSP00000435412","9606.ENSP00000469455","9606.ENSP00000436864","9606.ENSP00000354335","9606.ENSP00000401633","9606.ENSP00000361405","9606.ENSP00000386710","9606.ENSP00000384625","9606.ENSP00000265171","9606.ENSP00000489189","9606.ENSP00000259727","9606.ENSP00000332549","9606.ENSP00000340278","9606.ENSP00000231004","9606.ENSP00000343552","9606.ENSP00000494750","9606.ENSP00000260950","9606.ENSP00000264033","9606.ENSP00000369145","9606.ENSP00000363822","9606.ENSP00000409007","9606.ENSP00000254108","9606.ENSP00000354558","9606.ENSP00000425561","9606.ENSP00000482753","9606.ENSP00000370119","9606.ENSP00000355645","9606.ENSP00000319591","9606.ENSP00000354553","9606.ENSP00000340292","9606.ENSP00000370125","9606.ENSP00000265113","9606.ENSP00000375810","9606.ENSP00000355657","9606.ENSP00000352257","9606.ENSP00000451828","9606.ENSP00000382104","9606.ENSP00000401371","9606.ENSP00000222330","9606.hsa-miR-559","9606.ENSP00000308533","9606.ENSP00000377681","9606.hsa-miR-134-5p","9606.ENSP00000250113","9606.ENSP00000221485","9606.ENSP00000254719","9606.ENSP00000222574","9606.hsa-miR-433-3p","9606.ENSP00000352252","9606.ENSP00000418994","9606.hsa-miR-107","9606.ENSP00000306920","9606.ENSP00000364813","9606.ENSP00000365458","9606.ENSP00000352011","9606.ENSP00000397297","9606.hsa-miR-9-5p","9606.ENSP00000497217","9606.ENSP00000343535","9606.ENSP00000216200","9606.ENSP00000425979","9606.ENSP00000365576","9606.ENSP00000419395","9606.ENSP00000368966","9606.ENSP00000492795","9606.ENSP00000261366","9606.ENSP00000395535","9606.ENSP00000329918","9606.hsa-miR-101-3p","9606.hsa-miR-520c-3p","9606.ENSP00000291568","9606.ENSP00000368970","9606.ENSP00000262904","9606.ENSP00000405327","9606.ENSP00000467262","9606.ENSP00000261367","9606.ENSP00000371101","9606.ENSP00000489829","9606.ENSP00000392028","9606.ENSP00000471191","9606.ENSP00000221233","9606.ENSP00000305702","9606.ENSP00000481554","9606.ENSP00000379616","9606.ENSP00000467024","9606.ENSP00000374049","9606.ENSP00000355511","9606.ENSP00000250003","9606.ENSP00000332772","9606.ENSP00000339835","9606.ENSP00000362649","9606.ENSP00000338629","9606.ENSP00000360108","9606.ENSP00000365227","9606.ENSP00000353331","9606.ENSP00000301587","9606.ENSP00000222584","9606.ENSP00000380602","9606.ENSP00000259708","9606.ENSP00000327513","9606.ENSP00000447537","9606.ENSP00000340820","9606.ENSP00000246672","9606.ENSP00000254722","9606.ENSP00000311816","9606.ENSP00000499501","9606.ENSP00000320650","9606.ENSP00000498653","9606.hsa-miR-124-3p","9606.ENSP00000284240","9606.ENSP00000361433","9606.ENSP00000439585","9606.ENSP00000316032","9606.ENSP00000368984","9606.hsa-miR-17-5p","9606.ENSP00000366563","9606.ENSP00000419260","9606.ENSP00000237014","9606.AC007879.5","9606.ENSP00000323148","9606.ENSP00000446576","9606.ENSP00000263431","9606.ENSP00000355747","9606.ENSP00000405674","9606.ENSP00000354416","9606.ENSP00000338512","9606.ENSP00000356953","9606.ENSP00000399376","9606.ENSP00000359489","9606.ENSP00000298556","9606.ENSP00000355865","9606.ENSP00000226382","9606.ENSP00000355741","9606.ENSP00000346483","9606.ENSP00000246548","9606.ENSP00000304643","9606.ENSP00000373413","9606.ENSP00000254810","9606.ENSP00000376921","9606.ENSP00000302100","9606.ENSP00000350170","9606.ENSP00000252996","9606.hsa-miR-29a-3p","9606.ENSP00000366330","9606.ENSP00000248600","9606.ENSP00000216218","9606.ENSP00000306138","9606.ENSP00000288943","9606.ENSP00000202625","9606.ENSP00000349748","9606.ENSP00000245451","9606.ENSP00000366452","9606.ENSP00000360231","9606.hsa-miR-93-5p","9606.ENSP00000471851","9606.ENSP00000364270","9606.ENSP00000340125","9606.ENSP00000302216","9606.ENSP00000343515","9606.ENSP00000221801","9606.ENSP00000501150","9606.ENSP00000413035","9606.ENSP00000265164","9606.ENSP00000359804","9606.ENSP00000259711","9606.ENSP00000415579","9606.ENSP00000306253","9606.ENSP00000273320","9606.ENSP00000305288","9606.ENSP00000418721","9606.ENSP00000458663","9606.ENSP00000307900","9606.ENSP00000329357","9606.ENSP00000496695","9606.ENSP00000318585","9606.ENSP00000418960","9606.ENSP00000478249","9606.ENSP00000303540","9606.ENSP00000393379","9606.ENSP00000240316","9606.ENSP00000457205","9606.ENSP00000260386","9606.ENSP00000288135","9606.ENSP00000368884","9606.ENSP00000458537","9606.ENSP00000454852","9606.ENSP00000338173","9606.ENSP00000285667","9606.ENSP00000380070","9606.ENSP00000368881","9606.ENSP00000359019","9606.ENSP00000477715","9606.ENSP00000417901","9606.ENSP00000221930","9606.ENSP00000490107","9606.ENSP00000332194","9606.ENSP00000219197","9606.ENSP00000180166","9606.ENSP00000381185","9606.ENSP00000316842","9606.ENSP00000254079","9606.ENSP00000296271","9606.ENSP00000362300","9606.ENSP00000264867","9606.ENSP00000349298","9606.ENSP00000311032","9606.ENSP00000295900","9606.ENSP00000293288","9606.SNORD58B","9606.hsa-miR-34c-5p","9606.ENSP00000306561","9606.ENSP00000500990","9606.ENSP00000256261","9606.ENSP00000295589","9606.ENSP00000419081","9606.ENSP00000475626","9606.ENSP00000479667","9606.ENSP00000233813","9606.hsa-miR-1225-3p","9606.ENSP00000406209","9606.ENSP00000455698","9606.ENSP00000348645","9606.ENSP00000321835","9606.ENSP00000216127","9606.ENSP00000371133","9606.ENSP00000369863","9606.ENSP00000261601","9606.ENSP00000300213","9606.ENSP00000225504","9606.ENSP00000264552","9606.ENSP00000308610","9606.ENSP00000495360","9606.ENSP00000421339","9606.ENSP00000240100","9606.ENSP00000381057","9606.ENSP00000334002","9606.ENSP00000411355","9606.ENSP00000333277","9606.ENSP00000295910","9606.ENSP00000438574","9606.ENSP00000340467","9606.ENSP00000377372","9606.ENSP00000477141","9606.ENSP00000463653","9606.ENSP00000360493","9606.ENSP00000310036","9606.ENSP00000385410","9606.ENSP00000249396","9606.ENSP00000294702","9606.ENSP00000357583","9606.ENSP00000349168","9606.ENSP00000276654","9606.ENSP00000215832","9606.ENSP00000216254","9606.ENSP00000261731","9606.ENSP00000324560","9606.ENSP00000362680","9606.ENSP00000346694","9606.ENSP00000353414","9606.ENSP00000437125","9606.ENSP00000409279","9606.ENSP00000349722","9606.ENSP00000350386","9606.ENSP00000283195","9606.ENSP00000339004","9606.ENSP00000264689","9606.ENSP00000321606","9606.ENSP00000369996","9606.ENSP00000414856","9606.ENSP00000323588","9606.ENSP00000248975","9606.ENSP00000181796","9606.ENSP00000371267","9606.ENSP00000378338","9606.ENSP00000370058","9606.ENSP00000239231","9606.ENSP00000315299","9606.ENSP00000378699","9606.ENSP00000415822","9606.ENSP00000333262","9606.ENSP00000370193","9606.ENSP00000483254","9606.ENSP00000422435","9606.ENSP00000482169","9606.ENSP00000258415","9606.ENSP00000380432","9606.ENSP00000349156","9606.ENSP00000253408","9606.ENSP00000384474","9606.HTT-AS","9606.ENSP00000358784","9606.ENSP00000265195","9606.ENSP00000440045","9606.ENSP00000378476","9606.ENSP00000362205","9606.ENSP00000252934","9606.ENSP00000250495","9606.ENSP00000340330","9606.ENSP00000247225","9606.ENSP00000310129","9606.ENSP00000360266","9606.ENSP00000296755","9606.ENSP00000359719","9606.ENSP00000499387","9606.ENSP00000358089","9606.ENSP00000230321","9606.ENSP00000377936","9606.ENSP00000329403","9606.ENSP00000216144","9606.ENSP00000314173","9606.ENSP00000430241","9606.ENSP00000319060","9606.ENSP00000354859","9606.ENSP00000430000","9606.ENSP00000325863","9606.ENSP00000258302","9606.ENSP00000476119","9606.ENSP00000366488","9606.ENSP00000481848","9606.ENSP00000234389","9606.ENSP00000437256","9606.ENSP00000279488","9606.ENSP00000363435","9606.ENSP00000366249","9606.ENSP00000398632","9606.ENSP00000477455","9606.ENSP00000254976","9606.ENSP00000316357","9606.ENSP00000216714","9606.ENSP00000347896","9606.ENSP00000269305","9606.ENSP00000320821","9606.ENSP00000264657","9606.ENSP00000353646","9606.ENSP00000397563","9606.ENSP00000263205","9606.ENSP00000353767","9606.ENSP00000353864","9606.ENSP00000345347","9606.ENSP00000265081","9606.ENSP00000318635","9606.ENSP00000408617","9606.ENSP00000364639","9606.ENSP00000223129","9606.ENSP00000370744","9606.ENSP00000307786","9606.FMR1-AS1","9606.ENSP00000428426","9606.ENSP00000305480","9606.ENSP00000291295","9606.ENSP00000453858","9606.ENSP00000245255","9606.ENSP00000261523","9606.ENSP00000377015","9606.ENSP00000453170","9606.ENSP00000244061","9606.ENSP00000293190","9606.ENSP00000276079","9606.ENSP00000269143","9606.ENSP00000355028","9606.ENSP00000370083","9606.ENSP00000268058","9606.ENSP00000263209","9606.ENSP00000278379","9606.ENSP00000347184","9606.hsa-miR-150-5p","9606.ENSP00000365601","9606.ENSP00000307604","9606.ENSP00000357206","9606.hsa-miR-9-3p","9606.ENSP00000361021","9606.ENSP00000334463","9606.ENSP00000348056","9606.ENSP00000386786","9606.ENSP00000357565","9606.ENSP00000332706","9606.ENSP00000296526","9606.ENSP00000458065","9606.ENSP00000385675","9606.ENSP00000305422","9606.ENSP00000359727","9606.ENSP00000362578","9606.ENSP00000365861","9606.ENSP00000356231","9606.ENSP00000306330","9606.ENSP00000361027","9606.ENSP00000378487","9606.ENSP00000431162","9606.hsa-miR-548g-3p","9606.ENSP00000371729","9606.hsa-miR-320d","9606.ENSP00000304331","9606.ENSP00000013807","9606.ENSP00000435637","9606.ENSP00000385216","9606.ENSP00000346671","9606.ENSP00000427900","9606.MIR17HG","9606.ENSP00000350928","9606.ENSP00000360280","9606.AC006129.1","9606.ENSP00000219548","9606.ENSP00000282753","9606.ENSP00000216727","9606.ENSP00000284262","9606.ENSP00000261837","9606.ATXN8OS","9606.ENSP00000368314","9606.ENSP00000374552","9606.ENSP00000256079","9606.hsa-miR-128-3p","9606.hsa-miR-4305","9606.ENSP00000315137","9606.ENSP00000347997","9606.ENSP00000261712","9606.ENSP00000376753","9606.ENSP00000406549","9606.ENSP00000317333","9606.ENSP00000399851","9606.ENSP00000369531","9606.ENSP00000358886","9606.ENSP00000383042","9606.ENSP00000403397","9606.ENSP00000359978","9606.ENSP00000374455","9606.ENSP00000429763","9606.ENSP00000438886","9606.hsa-miR-379-3p","9606.ENSP00000262367","9606.ENSP00000353072","9606.ENSP00000376637","9606.ENSP00000369895","9606.ENSP00000376197","9606.ENSP00000462298","9606.ENSP00000262241","9606.ENSP00000355370","9606.ENSP00000225577","9606.ENSP00000333363","9606.ENSP00000376077","9606.ENSP00000347170","9606.ENSP00000358525","9606.ENSP00000302961","9606.ENSP00000324173","9606.ENSP00000309591","9606.ENSP00000419782","9606.ENSP00000345571","9606.ENSP00000418572","9606.ENSP00000495557","9606.ENSP00000327687","9606.ENSP00000309595","9606.ENSP00000365514","9606.ENSP00000361930","9606.ENSP00000270225","9606.ENSP00000290649","9606.ENSP00000362485","9606.ENSP00000309477","9606.ENSP00000386458","9606.ENSP00000345575","9606.ENSP00000388638","9606.ENSP00000346534","9606.ENSP00000270349","9606.ENSP00000368332","9606.ENSP00000212015","9606.ENSP00000405965","9606.ENSP00000284981","9606.ENSP00000345206","9606.ENSP00000282561","9606.ENSP00000493382","9606.ENSP00000498255","9606.ENSP00000263025","9606.ENSP00000478877","9606.hsa-miR-548w","9606.hsa-miR-133b","9606.ENSP00000462745","9606.ENSP00000352516","9606.ENSP00000358518","9606.ENSP00000405388","9606.ENSP00000268712","9606.ENSP00000359085","9606.ENSP00000360609","9606.ENSP00000362131","9606.hsa-miR-659-3p","9606.ENSP00000499582","9606.ENSP00000422185","9606.ENSP00000454229","9606.ENSP00000221742","9606.ENSP00000489407","9606.ENSP00000359506","9606.ENSP00000444433","9606.ENSP00000414303","9606.ENSP00000391803","9606.ENSP00000379350","9606.ENSP00000399403","9606.hsa-miR-106a-5p","9606.ENSP00000379915","9606.ENSP00000254322","9606.ENSP00000269228","9606.ENSP00000403888","9606.ENSP00000306894","9606.ENSP00000254325","9606.ENSP00000307863"]}
2024-06-20 16:48:47,208 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000263160', '9606.ENSP00000227507', '9606.ENSP00000400142', '9606.ENSP00000252804', '9606.ENSP00000371985', '9606.ENSP00000418447', '9606.ENSP00000342056', '9606.ENSP00000362014', '9606.ENSP00000265459', '9606.ENSP00000258106', '9606.ENSP00000263038', '9606.ENSP00000326366', '9606.ENSP00000450873', '9606.ENSP00000354929', '9606.ENSP00000221996', '9606.ENSP00000478887', '9606.ENSP00000331040', '9606.ENSP00000408526', '9606.hsa-miR-155-5p', '9606.ENSP00000477437', '9606.ENSP00000246914', '9606.ENSP00000359095', '9606.ENSP00000299001', '9606.ENSP00000432568', '9606.ENSP00000220420', '9606.ENSP00000380903', '9606.ENSP00000392423', '9606.ENSP00000498362', '9606.hsa-miR-132-3p', '9606.ENSP00000374354', '9606.ENSP00000355231', '9606.ENSP00000354923', '9606.ENSP00000378394', '9606.ENSP00000351777', '9606.ENSP00000336712', '9606.ENSP00000260665', '9606.ENSP00000215095', '9606.ENSP00000390941', '9606.hsa-miR-106b-5p', '9606.ENSP00000443631', '9606.ENSP00000442920', '9606.ENSP00000484060', '9606.ENSP00000312987', '9606.ENSP00000224140', '9606.ENSP00000473623', '9606.ENSP00000295987', '9606.ENSP00000262039', '9606.ENSP00000419243', '9606.ENSP00000323511', '9606.ENSP00000358283', '9606.ENSP00000321455', '9606.ENSP00000364204', '9606.ENSP00000264335', '9606.ENSP00000287713', '9606.ENSP00000252482', '9606.ENSP00000282020', '9606.ENSP00000265421', '9606.ENSP00000282146', '9606.ENSP00000244769', '9606.ENSP00000364210', '9606.ENSP00000303709', '9606.ENSP00000430432', '9606.ENSP00000278616', '9606.hsa-miR-1909-3p', '9606.ENSP00000354497', '9606.ENSP00000352738', '9606.ENSP00000378284', '9606.ENSP00000228872', '9606.ENSP00000470248', '9606.ENSP00000398698', '9606.ENSP00000480050', '9606.ENSP00000337353', '9606.hsa-miR-760', '9606.ENSP00000406293', '9606.ENSP00000356790', '9606.ENSP00000260116', '9606.ENSP00000230354', '9606.ENSP00000442793', '9606.ENSP00000255631', '9606.ENSP00000489624', '9606.hsa-miR-144-3p', '9606.ENSP00000464342', '9606.ENSP00000252486', '9606.ENSP00000285419', '9606.ENSP00000369689', '9606.ENSP00000286628', '9606.ENSP00000343001', '9606.ENSP00000391942', '9606.hsa-miR-130a-3p', '9606.ENSP00000441685', '9606.ENSP00000302967', '9606.ENSP00000490614', '9606.ENSP00000263257', '9606.ENSP00000358155', '9606.ENSP00000428994', '9606.ENSP00000383199', '9606.ENSP00000359890', '9606.ENSP00000340989', '9606.ENSP00000265431', '9606.ENSP00000292246', '9606.ENSP00000354125', '9606.ENSP00000295756', '9606.ENSP00000358967', '9606.ENSP00000358151', '9606.ENSP00000310585', '9606.ENSP00000362399', '9606.ENSP00000357876', '9606.ENSP00000363123', '9606.ENSP00000417864', '9606.ENSP00000295757', '9606.ENSP00000354360', '9606.ENSP00000040584', '9606.ENSP00000492363', '9606.ENSP00000365301', '9606.ENSP00000219476', '9606.ENSP00000386229', '9606.ENSP00000291700', '9606.ENSP00000287820', '9606.ENSP00000368007', '9606.ENSP00000263754', '9606.ENSP00000288490', '9606.ENSP00000284551', '9606.ENSP00000434241', '9606.ENSP00000302108', '9606.ENSP00000403343', '9606.ENSP00000385142', '9606.ENSP00000264036', '9606.ENSP00000283228', '9606.ENSP00000391381', '9606.ENSP00000406286', '9606.hsa-miR-548ae', '9606.ENSP00000479719', '9606.ENSP00000320347', '9606.ENSP00000264606', '9606.ENSP00000258962', '9606.ENSP00000337103', '9606.ENSP00000424566', '9606.ENSP00000270142', '9606.ENSP00000426503', '9606.ENSP00000272444', '9606.ENSP00000402257', '9606.ENSP00000298910', '9606.ENSP00000264276', '9606.ENSP00000341826', '9606.ENSP00000269601', '9606.ENSP00000345195', '9606.ENSP00000366070', '9606.ENSP00000294435', '9606.ENSP00000277120', '9606.ENSP00000480916', '9606.ENSP00000391269', '9606.ENSP00000357292', '9606.ENSP00000480012', '9606.ENSP00000303356', '9606.ENSP00000494538', '9606.ENSP00000323046', '9606.ENSP00000220592', '9606.ENSP00000053867', '9606.ENSP00000354111', '9606.ENSP00000387593', '9606.ENSP00000415676', '9606.ENSP00000282486', '9606.ENSP00000240185', '9606.ENSP00000391723', '9606.ENSP00000497806', '9606.ENSP00000351742', '9606.ENSP00000496959', '9606.ENSP00000376322', '9606.ENSP00000254488', '9606.ENSP00000335153', '9606.ENSP00000266594', '9606.ENSP00000261667', '9606.ENSP00000435466', '9606.ENSP00000263967', '9606.ENSP00000313829', '9606.ENSP00000487785', '9606.ENSP00000265381', '9606.ENSP00000410769', '9606.ENSP00000345997', '9606.ENSP00000261427', '9606.ENSP00000265379', '9606.ENSP00000257290', '9606.ENSP00000225916', '9606.ENSP00000246186', '9606.ENSP00000481593', '9606.ENSP00000500386', '9606.ENSP00000439937', '9606.ENSP00000313007', '9606.ENSP00000370571', '9606.ENSP00000295897', '9606.ENSP00000297261', '9606.ENSP00000362299', '9606.ENSP00000310561', '9606.ENSP00000295777', '9606.ENSP00000354346', '9606.ENSP00000345064', '9606.ENSP00000282928', '9606.ENSP00000387699', '9606.ENSP00000309457', '9606.ENSP00000258149', '9606.ENSP00000381488', '9606.ENSP00000364118', '9606.ENSP00000298596', '9606.ENSP00000272317', '9606.ENSP00000267890', '9606.ENSP00000497594', '9606.ENSP00000379287', '9606.ENSP00000497112', '9606.ENSP00000360660', '9606.ENSP00000397259', '9606.ENSP00000266682', '9606.ENSP00000477999', '9606.ENSP00000265351', '9606.ENSP00000282356', '9606.ENSP00000301727', '9606.ENSP00000351614', '9606.ENSP00000369127', '9606.ENSP00000313377', '9606.ENSP00000370589', '9606.ENSP00000339867', '9606.ENSP00000302814', '9606.ENSP00000228644', '9606.ENSP00000343690', '9606.ENSP00000410759', '9606.ENSP00000264498', '9606.ENSP00000356982', '9606.ENSP00000264255', '9606.NEAT1', '9606.ENSP00000436679', '9606.ENSP00000381382', '9606.FAM41C', '9606.ENSP00000379181', '9606.ENSP00000324806', '9606.ENSP00000435412', '9606.ENSP00000469455', '9606.ENSP00000436864', '9606.ENSP00000354335', '9606.ENSP00000401633', '9606.ENSP00000361405', '9606.ENSP00000386710', '9606.ENSP00000384625', '9606.ENSP00000265171', '9606.ENSP00000489189', '9606.ENSP00000259727', '9606.ENSP00000332549', '9606.ENSP00000340278', '9606.ENSP00000231004', '9606.ENSP00000343552', '9606.ENSP00000494750', '9606.ENSP00000260950', '9606.ENSP00000264033', '9606.ENSP00000369145', '9606.ENSP00000363822', '9606.ENSP00000409007', '9606.ENSP00000254108', '9606.ENSP00000354558', '9606.ENSP00000425561', '9606.ENSP00000482753', '9606.ENSP00000370119', '9606.ENSP00000355645', '9606.ENSP00000319591', '9606.ENSP00000354553', '9606.ENSP00000340292', '9606.ENSP00000370125', '9606.ENSP00000265113', '9606.ENSP00000375810', '9606.ENSP00000355657', '9606.ENSP00000352257', '9606.ENSP00000451828', '9606.ENSP00000382104', '9606.ENSP00000401371', '9606.ENSP00000222330', '9606.hsa-miR-559', '9606.ENSP00000308533', '9606.ENSP00000377681', '9606.hsa-miR-134-5p', '9606.ENSP00000250113', '9606.ENSP00000221485', '9606.ENSP00000254719', '9606.ENSP00000222574', '9606.hsa-miR-433-3p', '9606.ENSP00000352252', '9606.ENSP00000418994', '9606.hsa-miR-107', '9606.ENSP00000306920', '9606.ENSP00000364813', '9606.ENSP00000365458', '9606.ENSP00000352011', '9606.ENSP00000397297', '9606.hsa-miR-9-5p', '9606.ENSP00000497217', '9606.ENSP00000343535', '9606.ENSP00000216200', '9606.ENSP00000425979', '9606.ENSP00000365576', '9606.ENSP00000419395', '9606.ENSP00000368966', '9606.ENSP00000492795', '9606.ENSP00000261366', '9606.ENSP00000395535', '9606.ENSP00000329918', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.ENSP00000291568', '9606.ENSP00000368970', '9606.ENSP00000262904', '9606.ENSP00000405327', '9606.ENSP00000467262', '9606.ENSP00000261367', '9606.ENSP00000371101', '9606.ENSP00000489829', '9606.ENSP00000392028', '9606.ENSP00000471191', '9606.ENSP00000221233', '9606.ENSP00000305702', '9606.ENSP00000481554', '9606.ENSP00000379616', '9606.ENSP00000467024', '9606.ENSP00000374049', '9606.ENSP00000355511', '9606.ENSP00000250003', '9606.ENSP00000332772', '9606.ENSP00000339835', '9606.ENSP00000362649', '9606.ENSP00000338629', '9606.ENSP00000360108', '9606.ENSP00000365227', '9606.ENSP00000353331', '9606.ENSP00000301587', '9606.ENSP00000222584', '9606.ENSP00000380602', '9606.ENSP00000259708', '9606.ENSP00000327513', '9606.ENSP00000447537', '9606.ENSP00000340820', '9606.ENSP00000246672', '9606.ENSP00000254722', '9606.ENSP00000311816', '9606.ENSP00000499501', '9606.ENSP00000320650', '9606.ENSP00000498653', '9606.hsa-miR-124-3p', '9606.ENSP00000284240', '9606.ENSP00000361433', '9606.ENSP00000439585', '9606.ENSP00000316032', '9606.ENSP00000368984', '9606.hsa-miR-17-5p', '9606.ENSP00000366563', '9606.ENSP00000419260', '9606.ENSP00000237014', '9606.AC007879.5', '9606.ENSP00000323148', '9606.ENSP00000446576', '9606.ENSP00000263431', '9606.ENSP00000355747', '9606.ENSP00000405674', '9606.ENSP00000354416', '9606.ENSP00000338512', '9606.ENSP00000356953', '9606.ENSP00000399376', '9606.ENSP00000359489', '9606.ENSP00000298556', '9606.ENSP00000355865', '9606.ENSP00000226382', '9606.ENSP00000355741', '9606.ENSP00000346483', '9606.ENSP00000246548', '9606.ENSP00000304643', '9606.ENSP00000373413', '9606.ENSP00000254810', '9606.ENSP00000376921', '9606.ENSP00000302100', '9606.ENSP00000350170', '9606.ENSP00000252996', '9606.hsa-miR-29a-3p', '9606.ENSP00000366330', '9606.ENSP00000248600', '9606.ENSP00000216218', '9606.ENSP00000306138', '9606.ENSP00000288943', '9606.ENSP00000202625', '9606.ENSP00000349748', '9606.ENSP00000245451', '9606.ENSP00000366452', '9606.ENSP00000360231', '9606.hsa-miR-93-5p', '9606.ENSP00000471851', '9606.ENSP00000364270', '9606.ENSP00000340125', '9606.ENSP00000302216', '9606.ENSP00000343515', '9606.ENSP00000221801', '9606.ENSP00000501150', '9606.ENSP00000413035', '9606.ENSP00000265164', '9606.ENSP00000359804', '9606.ENSP00000259711', '9606.ENSP00000415579', '9606.ENSP00000306253', '9606.ENSP00000273320', '9606.ENSP00000305288', '9606.ENSP00000418721', '9606.ENSP00000458663', '9606.ENSP00000307900', '9606.ENSP00000329357', '9606.ENSP00000496695', '9606.ENSP00000318585', '9606.ENSP00000418960', '9606.ENSP00000478249', '9606.ENSP00000303540', '9606.ENSP00000393379', '9606.ENSP00000240316', '9606.ENSP00000457205', '9606.ENSP00000260386', '9606.ENSP00000288135', '9606.ENSP00000368884', '9606.ENSP00000458537', '9606.ENSP00000454852', '9606.ENSP00000338173', '9606.ENSP00000285667', '9606.ENSP00000380070', '9606.ENSP00000368881', '9606.ENSP00000359019', '9606.ENSP00000477715', '9606.ENSP00000417901', '9606.ENSP00000221930', '9606.ENSP00000490107', '9606.ENSP00000332194', '9606.ENSP00000219197', '9606.ENSP00000180166', '9606.ENSP00000381185', '9606.ENSP00000316842', '9606.ENSP00000254079', '9606.ENSP00000296271', '9606.ENSP00000362300', '9606.ENSP00000264867', '9606.ENSP00000349298', '9606.ENSP00000311032', '9606.ENSP00000295900', '9606.ENSP00000293288', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.ENSP00000306561', '9606.ENSP00000500990', '9606.ENSP00000256261', '9606.ENSP00000295589', '9606.ENSP00000419081', '9606.ENSP00000475626', '9606.ENSP00000479667', '9606.ENSP00000233813', '9606.hsa-miR-1225-3p', '9606.ENSP00000406209', '9606.ENSP00000455698', '9606.ENSP00000348645', '9606.ENSP00000321835', '9606.ENSP00000216127', '9606.ENSP00000371133', '9606.ENSP00000369863', '9606.ENSP00000261601', '9606.ENSP00000300213', '9606.ENSP00000225504', '9606.ENSP00000264552', '9606.ENSP00000308610', '9606.ENSP00000495360', '9606.ENSP00000421339', '9606.ENSP00000240100', '9606.ENSP00000381057', '9606.ENSP00000334002', '9606.ENSP00000411355', '9606.ENSP00000333277', '9606.ENSP00000295910', '9606.ENSP00000438574', '9606.ENSP00000340467', '9606.ENSP00000377372', '9606.ENSP00000477141', '9606.ENSP00000463653', '9606.ENSP00000360493', '9606.ENSP00000310036', '9606.ENSP00000385410', '9606.ENSP00000249396', '9606.ENSP00000294702', '9606.ENSP00000357583', '9606.ENSP00000349168', '9606.ENSP00000276654', '9606.ENSP00000215832', '9606.ENSP00000216254', '9606.ENSP00000261731', '9606.ENSP00000324560', '9606.ENSP00000362680', '9606.ENSP00000346694', '9606.ENSP00000353414', '9606.ENSP00000437125', '9606.ENSP00000409279', '9606.ENSP00000349722', '9606.ENSP00000350386', '9606.ENSP00000283195', '9606.ENSP00000339004', '9606.ENSP00000264689', '9606.ENSP00000321606', '9606.ENSP00000369996', '9606.ENSP00000414856', '9606.ENSP00000323588', '9606.ENSP00000248975', '9606.ENSP00000181796', '9606.ENSP00000371267', '9606.ENSP00000378338', '9606.ENSP00000370058', '9606.ENSP00000239231', '9606.ENSP00000315299', '9606.ENSP00000378699', '9606.ENSP00000415822', '9606.ENSP00000333262', '9606.ENSP00000370193', '9606.ENSP00000483254', '9606.ENSP00000422435', '9606.ENSP00000482169', '9606.ENSP00000258415', '9606.ENSP00000380432', '9606.ENSP00000349156', '9606.ENSP00000253408', '9606.ENSP00000384474', '9606.HTT-AS', '9606.ENSP00000358784', '9606.ENSP00000265195', '9606.ENSP00000440045', '9606.ENSP00000378476', '9606.ENSP00000362205', '9606.ENSP00000252934', '9606.ENSP00000250495', '9606.ENSP00000340330', '9606.ENSP00000247225', '9606.ENSP00000310129', '9606.ENSP00000360266', '9606.ENSP00000296755', '9606.ENSP00000359719', '9606.ENSP00000499387', '9606.ENSP00000358089', '9606.ENSP00000230321', '9606.ENSP00000377936', '9606.ENSP00000329403', '9606.ENSP00000216144', '9606.ENSP00000314173', '9606.ENSP00000430241', '9606.ENSP00000319060', '9606.ENSP00000354859', '9606.ENSP00000430000', '9606.ENSP00000325863', '9606.ENSP00000258302', '9606.ENSP00000476119', '9606.ENSP00000366488', '9606.ENSP00000481848', '9606.ENSP00000234389', '9606.ENSP00000437256', '9606.ENSP00000279488', '9606.ENSP00000363435', '9606.ENSP00000366249', '9606.ENSP00000398632', '9606.ENSP00000477455', '9606.ENSP00000254976', '9606.ENSP00000316357', '9606.ENSP00000216714', '9606.ENSP00000347896', '9606.ENSP00000269305', '9606.ENSP00000320821', '9606.ENSP00000264657', '9606.ENSP00000353646', '9606.ENSP00000397563', '9606.ENSP00000263205', '9606.ENSP00000353767', '9606.ENSP00000353864', '9606.ENSP00000345347', '9606.ENSP00000265081', '9606.ENSP00000318635', '9606.ENSP00000408617', '9606.ENSP00000364639', '9606.ENSP00000223129', '9606.ENSP00000370744', '9606.ENSP00000307786', '9606.FMR1-AS1', '9606.ENSP00000428426', '9606.ENSP00000305480', '9606.ENSP00000291295', '9606.ENSP00000453858', '9606.ENSP00000245255', '9606.ENSP00000261523', '9606.ENSP00000377015', '9606.ENSP00000453170', '9606.ENSP00000244061', '9606.ENSP00000293190', '9606.ENSP00000276079', '9606.ENSP00000269143', '9606.ENSP00000355028', '9606.ENSP00000370083', '9606.ENSP00000268058', '9606.ENSP00000263209', '9606.ENSP00000278379', '9606.ENSP00000347184', '9606.hsa-miR-150-5p', '9606.ENSP00000365601', '9606.ENSP00000307604', '9606.ENSP00000357206', '9606.hsa-miR-9-3p', '9606.ENSP00000361021', '9606.ENSP00000334463', '9606.ENSP00000348056', '9606.ENSP00000386786', '9606.ENSP00000357565', '9606.ENSP00000332706', '9606.ENSP00000296526', '9606.ENSP00000458065', '9606.ENSP00000385675', '9606.ENSP00000305422', '9606.ENSP00000359727', '9606.ENSP00000362578', '9606.ENSP00000365861', '9606.ENSP00000356231', '9606.ENSP00000306330', '9606.ENSP00000361027', '9606.ENSP00000378487', '9606.ENSP00000431162', '9606.hsa-miR-548g-3p', '9606.ENSP00000371729', '9606.hsa-miR-320d', '9606.ENSP00000304331', '9606.ENSP00000013807', '9606.ENSP00000435637', '9606.ENSP00000385216', '9606.ENSP00000346671', '9606.ENSP00000427900', '9606.MIR17HG', '9606.ENSP00000350928', '9606.ENSP00000360280', '9606.AC006129.1', '9606.ENSP00000219548', '9606.ENSP00000282753', '9606.ENSP00000216727', '9606.ENSP00000284262', '9606.ENSP00000261837', '9606.ATXN8OS', '9606.ENSP00000368314', '9606.ENSP00000374552', '9606.ENSP00000256079', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.ENSP00000315137', '9606.ENSP00000347997', '9606.ENSP00000261712', '9606.ENSP00000376753', '9606.ENSP00000406549', '9606.ENSP00000317333', '9606.ENSP00000399851', '9606.ENSP00000369531', '9606.ENSP00000358886', '9606.ENSP00000383042', '9606.ENSP00000403397', '9606.ENSP00000359978', '9606.ENSP00000374455', '9606.ENSP00000429763', '9606.ENSP00000438886', '9606.hsa-miR-379-3p', '9606.ENSP00000262367', '9606.ENSP00000353072', '9606.ENSP00000376637', '9606.ENSP00000369895', '9606.ENSP00000376197', '9606.ENSP00000462298', '9606.ENSP00000262241', '9606.ENSP00000355370', '9606.ENSP00000225577', '9606.ENSP00000333363', '9606.ENSP00000376077', '9606.ENSP00000347170', '9606.ENSP00000358525', '9606.ENSP00000302961', '9606.ENSP00000324173', '9606.ENSP00000309591', '9606.ENSP00000419782', '9606.ENSP00000345571', '9606.ENSP00000418572', '9606.ENSP00000495557', '9606.ENSP00000327687', '9606.ENSP00000309595', '9606.ENSP00000365514', '9606.ENSP00000361930', '9606.ENSP00000270225', '9606.ENSP00000290649', '9606.ENSP00000362485', '9606.ENSP00000309477', '9606.ENSP00000386458', '9606.ENSP00000345575', '9606.ENSP00000388638', '9606.ENSP00000346534', '9606.ENSP00000270349', '9606.ENSP00000368332', '9606.ENSP00000212015', '9606.ENSP00000405965', '9606.ENSP00000284981', '9606.ENSP00000345206', '9606.ENSP00000282561', '9606.ENSP00000493382', '9606.ENSP00000498255', '9606.ENSP00000263025', '9606.ENSP00000478877', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.ENSP00000462745', '9606.ENSP00000352516', '9606.ENSP00000358518', '9606.ENSP00000405388', '9606.ENSP00000268712', '9606.ENSP00000359085', '9606.ENSP00000360609', '9606.ENSP00000362131', '9606.hsa-miR-659-3p', '9606.ENSP00000499582', '9606.ENSP00000422185', '9606.ENSP00000454229', '9606.ENSP00000221742', '9606.ENSP00000489407', '9606.ENSP00000359506', '9606.ENSP00000444433', '9606.ENSP00000414303', '9606.ENSP00000391803', '9606.ENSP00000379350', '9606.ENSP00000399403', '9606.hsa-miR-106a-5p', '9606.ENSP00000379915', '9606.ENSP00000254322', '9606.ENSP00000269228', '9606.ENSP00000403888', '9606.ENSP00000306894', '9606.ENSP00000254325', '9606.ENSP00000307863']}
2024-06-20 16:48:47,210 [DEBUG] py4...: ǀReturning 'get_table_columns':                        name
44033  9606.ENSP00000263160
43010  9606.ENSP00000227507
44036  9606.ENSP00000400142
43013  9606.ENSP00000252804
44039  9606.ENSP00000371985
...                     ...
43001  9606.ENSP00000269228
44027  9606.ENSP00000403888
43004  9606.ENSP00000306894
44030  9606.ENSP00000254325
43007  9606.ENSP00000307863

[734 rows x 1 columns]
2024-06-20 16:48:47,213 [DEBUG] py4...: ǀCalling get_table_column_names('node', 'default', 42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,214 [DEBUG] py4...: ǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,214 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,215 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:47,220 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:47,220 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:47,220 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:47,221 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,221 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns)
2024-06-20 16:48:47,225 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false}]
2024-06-20 16:48:47,226 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:47,226 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'stringdb::canonical name', 'display name', 'stringdb::full name', 'stringdb::database identifier', 'stringdb::description', '@id', 'stringdb::namespace', 'stringdb::node type', 'query term', 'stringdb::sequence', 'stringdb::species', 'stringdb::imageurl', 'stringdb::STRING style', 'stringdb::enhancedLabel Passthrough', 'compartment::cytoskeleton', 'compartment::cytosol', 'compartment::endoplasmic reticulum', 'compartment::endosome', 'compartment::extracellular', 'compartment::golgi apparatus', 'compartment::lysosome', 'compartment::mitochondrion', 'compartment::nucleus', 'compartment::peroxisome', 'compartment::plasma membrane', 'stringdb::structures', 'target::development level', 'target::family', 'tissue::adrenal gland', 'tissue::blood', 'tissue::bone', 'tissue::bone marrow', 'tissue::eye', 'tissue::gall bladder', 'tissue::heart', 'tissue::intestine', 'tissue::kidney', 'tissue::liver', 'tissue::lung', 'tissue::muscle', 'tissue::nervous system', 'tissue::pancreas', 'tissue::saliva', 'tissue::skin', 'tissue::spleen', 'tissue::stomach', 'tissue::thyroid gland', 'tissue::urine', 'stringdb::disease score']
2024-06-20 16:48:47,226 [DEBUG] py4...: ǀCalling cyrest_post('networks/42582/tables/defaultnode/columns', body={'name': 'string_db', 'type': 'Integer'}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,226 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns), json: {'name': 'string_db', 'type': 'Integer'}
2024-06-20 16:48:47,262 [DEBUG] py4...: ǀCreated[201], content: 
2024-06-20 16:48:47,262 [DEBUG] py4...: ǀReturning 'cyrest_post': ''
2024-06-20 16:48:47,263 [DEBUG] py4...: ǀCalling cyrest_put('networks/42582/tables/defaultnode', body={'key': 'name', 'dataKey': 'shared name', 'data': [{'shared name': '9606.ENSP00000263160', 'string_db': 1}, {'shared name': '9606.ENSP00000227507', 'string_db': 1}, {'shared name': '9606.ENSP00000400142', 'string_db': 1}, {'shared name': '9606.ENSP00000252804', 'string_db': 1}, {'shared name': '9606.ENSP00000371985', 'string_db': 1}, {'shared name': '9606.ENSP00000418447', 'string_db': 1}, {'shared name': '9606.ENSP00000342056', 'string_db': 1}, {'shared name': '9606.ENSP00000362014', 'string_db': 1}, {'shared name': '9606.ENSP00000265459', 'string_db': 1}, {'shared name': '9606.ENSP00000258106', 'string_db': 1}, {'shared name': '9606.ENSP00000263038', 'string_db': 1}, {'shared name': '9606.ENSP00000326366', 'string_db': 1}, {'shared name': '9606.ENSP00000450873', 'string_db': 1}, {'shared name': '9606.ENSP00000354929', 'string_db': 1}, {'shared name': '9606.ENSP00000221996', 'string_db': 1}, {'shared name': '9606.ENSP00000478887', 'string_db': 1}, {'shared name': '9606.ENSP00000331040', 'string_db': 1}, {'shared name': '9606.ENSP00000408526', 'string_db': 1}, {'shared name': '9606.hsa-miR-155-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000477437', 'string_db': 1}, {'shared name': '9606.ENSP00000246914', 'string_db': 1}, {'shared name': '9606.ENSP00000359095', 'string_db': 1}, {'shared name': '9606.ENSP00000299001', 'string_db': 1}, {'shared name': '9606.ENSP00000432568', 'string_db': 1}, {'shared name': '9606.ENSP00000220420', 'string_db': 1}, {'shared name': '9606.ENSP00000380903', 'string_db': 1}, {'shared name': '9606.ENSP00000392423', 'string_db': 1}, {'shared name': '9606.ENSP00000498362', 'string_db': 1}, {'shared name': '9606.hsa-miR-132-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000374354', 'string_db': 1}, {'shared name': '9606.ENSP00000355231', 'string_db': 1}, {'shared name': '9606.ENSP00000354923', 'string_db': 1}, {'shared name': '9606.ENSP00000378394', 'string_db': 1}, {'shared name': '9606.ENSP00000351777', 'string_db': 1}, {'shared name': '9606.ENSP00000336712', 'string_db': 1}, {'shared name': '9606.ENSP00000260665', 'string_db': 1}, {'shared name': '9606.ENSP00000215095', 'string_db': 1}, {'shared name': '9606.ENSP00000390941', 'string_db': 1}, {'shared name': '9606.hsa-miR-106b-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000443631', 'string_db': 1}, {'shared name': '9606.ENSP00000442920', 'string_db': 1}, {'shared name': '9606.ENSP00000484060', 'string_db': 1}, {'shared name': '9606.ENSP00000312987', 'string_db': 1}, {'shared name': '9606.ENSP00000224140', 'string_db': 1}, {'shared name': '9606.ENSP00000473623', 'string_db': 1}, {'shared name': '9606.ENSP00000295987', 'string_db': 1}, {'shared name': '9606.ENSP00000262039', 'string_db': 1}, {'shared name': '9606.ENSP00000419243', 'string_db': 1}, {'shared name': '9606.ENSP00000323511', 'string_db': 1}, {'shared name': '9606.ENSP00000358283', 'string_db': 1}, {'shared name': '9606.ENSP00000321455', 'string_db': 1}, {'shared name': '9606.ENSP00000364204', 'string_db': 1}, {'shared name': '9606.ENSP00000264335', 'string_db': 1}, {'shared name': '9606.ENSP00000287713', 'string_db': 1}, {'shared name': '9606.ENSP00000252482', 'string_db': 1}, {'shared name': '9606.ENSP00000282020', 'string_db': 1}, {'shared name': '9606.ENSP00000265421', 'string_db': 1}, {'shared name': '9606.ENSP00000282146', 'string_db': 1}, {'shared name': '9606.ENSP00000244769', 'string_db': 1}, {'shared name': '9606.ENSP00000364210', 'string_db': 1}, {'shared name': '9606.ENSP00000303709', 'string_db': 1}, {'shared name': '9606.ENSP00000430432', 'string_db': 1}, {'shared name': '9606.ENSP00000278616', 'string_db': 1}, {'shared name': '9606.hsa-miR-1909-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000354497', 'string_db': 1}, {'shared name': '9606.ENSP00000352738', 'string_db': 1}, {'shared name': '9606.ENSP00000378284', 'string_db': 1}, {'shared name': '9606.ENSP00000228872', 'string_db': 1}, {'shared name': '9606.ENSP00000470248', 'string_db': 1}, {'shared name': '9606.ENSP00000398698', 'string_db': 1}, {'shared name': '9606.ENSP00000480050', 'string_db': 1}, {'shared name': '9606.ENSP00000337353', 'string_db': 1}, {'shared name': '9606.hsa-miR-760', 'string_db': 1}, {'shared name': '9606.ENSP00000406293', 'string_db': 1}, {'shared name': '9606.ENSP00000356790', 'string_db': 1}, {'shared name': '9606.ENSP00000260116', 'string_db': 1}, {'shared name': '9606.ENSP00000230354', 'string_db': 1}, {'shared name': '9606.ENSP00000442793', 'string_db': 1}, {'shared name': '9606.ENSP00000255631', 'string_db': 1}, {'shared name': '9606.ENSP00000489624', 'string_db': 1}, {'shared name': '9606.hsa-miR-144-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000464342', 'string_db': 1}, {'shared name': '9606.ENSP00000252486', 'string_db': 1}, {'shared name': '9606.ENSP00000285419', 'string_db': 1}, {'shared name': '9606.ENSP00000369689', 'string_db': 1}, {'shared name': '9606.ENSP00000286628', 'string_db': 1}, {'shared name': '9606.ENSP00000343001', 'string_db': 1}, {'shared name': '9606.ENSP00000391942', 'string_db': 1}, {'shared name': '9606.hsa-miR-130a-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000441685', 'string_db': 1}, {'shared name': '9606.ENSP00000302967', 'string_db': 1}, {'shared name': '9606.ENSP00000490614', 'string_db': 1}, {'shared name': '9606.ENSP00000263257', 'string_db': 1}, {'shared name': '9606.ENSP00000358155', 'string_db': 1}, {'shared name': '9606.ENSP00000428994', 'string_db': 1}, {'shared name': '9606.ENSP00000383199', 'string_db': 1}, {'shared name': '9606.ENSP00000359890', 'string_db': 1}, {'shared name': '9606.ENSP00000340989', 'string_db': 1}, {'shared name': '9606.ENSP00000265431', 'string_db': 1}, {'shared name': '9606.ENSP00000292246', 'string_db': 1}, {'shared name': '9606.ENSP00000354125', 'string_db': 1}, {'shared name': '9606.ENSP00000295756', 'string_db': 1}, {'shared name': '9606.ENSP00000358967', 'string_db': 1}, {'shared name': '9606.ENSP00000358151', 'string_db': 1}, {'shared name': '9606.ENSP00000310585', 'string_db': 1}, {'shared name': '9606.ENSP00000362399', 'string_db': 1}, {'shared name': '9606.ENSP00000357876', 'string_db': 1}, {'shared name': '9606.ENSP00000363123', 'string_db': 1}, {'shared name': '9606.ENSP00000417864', 'string_db': 1}, {'shared name': '9606.ENSP00000295757', 'string_db': 1}, {'shared name': '9606.ENSP00000354360', 'string_db': 1}, {'shared name': '9606.ENSP00000040584', 'string_db': 1}, {'shared name': '9606.ENSP00000492363', 'string_db': 1}, {'shared name': '9606.ENSP00000365301', 'string_db': 1}, {'shared name': '9606.ENSP00000219476', 'string_db': 1}, {'shared name': '9606.ENSP00000386229', 'string_db': 1}, {'shared name': '9606.ENSP00000291700', 'string_db': 1}, {'shared name': '9606.ENSP00000287820', 'string_db': 1}, {'shared name': '9606.ENSP00000368007', 'string_db': 1}, {'shared name': '9606.ENSP00000263754', 'string_db': 1}, {'shared name': '9606.ENSP00000288490', 'string_db': 1}, {'shared name': '9606.ENSP00000284551', 'string_db': 1}, {'shared name': '9606.ENSP00000434241', 'string_db': 1}, {'shared name': '9606.ENSP00000302108', 'string_db': 1}, {'shared name': '9606.ENSP00000403343', 'string_db': 1}, {'shared name': '9606.ENSP00000385142', 'string_db': 1}, {'shared name': '9606.ENSP00000264036', 'string_db': 1}, {'shared name': '9606.ENSP00000283228', 'string_db': 1}, {'shared name': '9606.ENSP00000391381', 'string_db': 1}, {'shared name': '9606.ENSP00000406286', 'string_db': 1}, {'shared name': '9606.hsa-miR-548ae', 'string_db': 1}, {'shared name': '9606.ENSP00000479719', 'string_db': 1}, {'shared name': '9606.ENSP00000320347', 'string_db': 1}, {'shared name': '9606.ENSP00000264606', 'string_db': 1}, {'shared name': '9606.ENSP00000258962', 'string_db': 1}, {'shared name': '9606.ENSP00000337103', 'string_db': 1}, {'shared name': '9606.ENSP00000424566', 'string_db': 1}, {'shared name': '9606.ENSP00000270142', 'string_db': 1}, {'shared name': '9606.ENSP00000426503', 'string_db': 1}, {'shared name': '9606.ENSP00000272444', 'string_db': 1}, {'shared name': '9606.ENSP00000402257', 'string_db': 1}, {'shared name': '9606.ENSP00000298910', 'string_db': 1}, {'shared name': '9606.ENSP00000264276', 'string_db': 1}, {'shared name': '9606.ENSP00000341826', 'string_db': 1}, {'shared name': '9606.ENSP00000269601', 'string_db': 1}, {'shared name': '9606.ENSP00000345195', 'string_db': 1}, {'shared name': '9606.ENSP00000366070', 'string_db': 1}, {'shared name': '9606.ENSP00000294435', 'string_db': 1}, {'shared name': '9606.ENSP00000277120', 'string_db': 1}, {'shared name': '9606.ENSP00000480916', 'string_db': 1}, {'shared name': '9606.ENSP00000391269', 'string_db': 1}, {'shared name': '9606.ENSP00000357292', 'string_db': 1}, {'shared name': '9606.ENSP00000480012', 'string_db': 1}, {'shared name': '9606.ENSP00000303356', 'string_db': 1}, {'shared name': '9606.ENSP00000494538', 'string_db': 1}, {'shared name': '9606.ENSP00000323046', 'string_db': 1}, {'shared name': '9606.ENSP00000220592', 'string_db': 1}, {'shared name': '9606.ENSP00000053867', 'string_db': 1}, {'shared name': '9606.ENSP00000354111', 'string_db': 1}, {'shared name': '9606.ENSP00000387593', 'string_db': 1}, {'shared name': '9606.ENSP00000415676', 'string_db': 1}, {'shared name': '9606.ENSP00000282486', 'string_db': 1}, {'shared name': '9606.ENSP00000240185', 'string_db': 1}, {'shared name': '9606.ENSP00000391723', 'string_db': 1}, {'shared name': '9606.ENSP00000497806', 'string_db': 1}, {'shared name': '9606.ENSP00000351742', 'string_db': 1}, {'shared name': '9606.ENSP00000496959', 'string_db': 1}, {'shared name': '9606.ENSP00000376322', 'string_db': 1}, {'shared name': '9606.ENSP00000254488', 'string_db': 1}, {'shared name': '9606.ENSP00000335153', 'string_db': 1}, {'shared name': '9606.ENSP00000266594', 'string_db': 1}, {'shared name': '9606.ENSP00000261667', 'string_db': 1}, {'shared name': '9606.ENSP00000435466', 'string_db': 1}, {'shared name': '9606.ENSP00000263967', 'string_db': 1}, {'shared name': '9606.ENSP00000313829', 'string_db': 1}, {'shared name': '9606.ENSP00000487785', 'string_db': 1}, {'shared name': '9606.ENSP00000265381', 'string_db': 1}, {'shared name': '9606.ENSP00000410769', 'string_db': 1}, {'shared name': '9606.ENSP00000345997', 'string_db': 1}, {'shared name': '9606.ENSP00000261427', 'string_db': 1}, {'shared name': '9606.ENSP00000265379', 'string_db': 1}, {'shared name': '9606.ENSP00000257290', 'string_db': 1}, {'shared name': '9606.ENSP00000225916', 'string_db': 1}, {'shared name': '9606.ENSP00000246186', 'string_db': 1}, {'shared name': '9606.ENSP00000481593', 'string_db': 1}, {'shared name': '9606.ENSP00000500386', 'string_db': 1}, {'shared name': '9606.ENSP00000439937', 'string_db': 1}, {'shared name': '9606.ENSP00000313007', 'string_db': 1}, {'shared name': '9606.ENSP00000370571', 'string_db': 1}, {'shared name': '9606.ENSP00000295897', 'string_db': 1}, {'shared name': '9606.ENSP00000297261', 'string_db': 1}, {'shared name': '9606.ENSP00000362299', 'string_db': 1}, {'shared name': '9606.ENSP00000310561', 'string_db': 1}, {'shared name': '9606.ENSP00000295777', 'string_db': 1}, {'shared name': '9606.ENSP00000354346', 'string_db': 1}, {'shared name': '9606.ENSP00000345064', 'string_db': 1}, {'shared name': '9606.ENSP00000282928', 'string_db': 1}, {'shared name': '9606.ENSP00000387699', 'string_db': 1}, {'shared name': '9606.ENSP00000309457', 'string_db': 1}, {'shared name': '9606.ENSP00000258149', 'string_db': 1}, {'shared name': '9606.ENSP00000381488', 'string_db': 1}, {'shared name': '9606.ENSP00000364118', 'string_db': 1}, {'shared name': '9606.ENSP00000298596', 'string_db': 1}, {'shared name': '9606.ENSP00000272317', 'string_db': 1}, {'shared name': '9606.ENSP00000267890', 'string_db': 1}, {'shared name': '9606.ENSP00000497594', 'string_db': 1}, {'shared name': '9606.ENSP00000379287', 'string_db': 1}, {'shared name': '9606.ENSP00000497112', 'string_db': 1}, {'shared name': '9606.ENSP00000360660', 'string_db': 1}, {'shared name': '9606.ENSP00000397259', 'string_db': 1}, {'shared name': '9606.ENSP00000266682', 'string_db': 1}, {'shared name': '9606.ENSP00000477999', 'string_db': 1}, {'shared name': '9606.ENSP00000265351', 'string_db': 1}, {'shared name': '9606.ENSP00000282356', 'string_db': 1}, {'shared name': '9606.ENSP00000301727', 'string_db': 1}, {'shared name': '9606.ENSP00000351614', 'string_db': 1}, {'shared name': '9606.ENSP00000369127', 'string_db': 1}, {'shared name': '9606.ENSP00000313377', 'string_db': 1}, {'shared name': '9606.ENSP00000370589', 'string_db': 1}, {'shared name': '9606.ENSP00000339867', 'string_db': 1}, {'shared name': '9606.ENSP00000302814', 'string_db': 1}, {'shared name': '9606.ENSP00000228644', 'string_db': 1}, {'shared name': '9606.ENSP00000343690', 'string_db': 1}, {'shared name': '9606.ENSP00000410759', 'string_db': 1}, {'shared name': '9606.ENSP00000264498', 'string_db': 1}, {'shared name': '9606.ENSP00000356982', 'string_db': 1}, {'shared name': '9606.ENSP00000264255', 'string_db': 1}, {'shared name': '9606.NEAT1', 'string_db': 1}, {'shared name': '9606.ENSP00000436679', 'string_db': 1}, {'shared name': '9606.ENSP00000381382', 'string_db': 1}, {'shared name': '9606.FAM41C', 'string_db': 1}, {'shared name': '9606.ENSP00000379181', 'string_db': 1}, {'shared name': '9606.ENSP00000324806', 'string_db': 1}, {'shared name': '9606.ENSP00000435412', 'string_db': 1}, {'shared name': '9606.ENSP00000469455', 'string_db': 1}, {'shared name': '9606.ENSP00000436864', 'string_db': 1}, {'shared name': '9606.ENSP00000354335', 'string_db': 1}, {'shared name': '9606.ENSP00000401633', 'string_db': 1}, {'shared name': '9606.ENSP00000361405', 'string_db': 1}, {'shared name': '9606.ENSP00000386710', 'string_db': 1}, {'shared name': '9606.ENSP00000384625', 'string_db': 1}, {'shared name': '9606.ENSP00000265171', 'string_db': 1}, {'shared name': '9606.ENSP00000489189', 'string_db': 1}, {'shared name': '9606.ENSP00000259727', 'string_db': 1}, {'shared name': '9606.ENSP00000332549', 'string_db': 1}, {'shared name': '9606.ENSP00000340278', 'string_db': 1}, {'shared name': '9606.ENSP00000231004', 'string_db': 1}, {'shared name': '9606.ENSP00000343552', 'string_db': 1}, {'shared name': '9606.ENSP00000494750', 'string_db': 1}, {'shared name': '9606.ENSP00000260950', 'string_db': 1}, {'shared name': '9606.ENSP00000264033', 'string_db': 1}, {'shared name': '9606.ENSP00000369145', 'string_db': 1}, {'shared name': '9606.ENSP00000363822', 'string_db': 1}, {'shared name': '9606.ENSP00000409007', 'string_db': 1}, {'shared name': '9606.ENSP00000254108', 'string_db': 1}, {'shared name': '9606.ENSP00000354558', 'string_db': 1}, {'shared name': '9606.ENSP00000425561', 'string_db': 1}, {'shared name': '9606.ENSP00000482753', 'string_db': 1}, {'shared name': '9606.ENSP00000370119', 'string_db': 1}, {'shared name': '9606.ENSP00000355645', 'string_db': 1}, {'shared name': '9606.ENSP00000319591', 'string_db': 1}, {'shared name': '9606.ENSP00000354553', 'string_db': 1}, {'shared name': '9606.ENSP00000340292', 'string_db': 1}, {'shared name': '9606.ENSP00000370125', 'string_db': 1}, {'shared name': '9606.ENSP00000265113', 'string_db': 1}, {'shared name': '9606.ENSP00000375810', 'string_db': 1}, {'shared name': '9606.ENSP00000355657', 'string_db': 1}, {'shared name': '9606.ENSP00000352257', 'string_db': 1}, {'shared name': '9606.ENSP00000451828', 'string_db': 1}, {'shared name': '9606.ENSP00000382104', 'string_db': 1}, {'shared name': '9606.ENSP00000401371', 'string_db': 1}, {'shared name': '9606.ENSP00000222330', 'string_db': 1}, {'shared name': '9606.hsa-miR-559', 'string_db': 1}, {'shared name': '9606.ENSP00000308533', 'string_db': 1}, {'shared name': '9606.ENSP00000377681', 'string_db': 1}, {'shared name': '9606.hsa-miR-134-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000250113', 'string_db': 1}, {'shared name': '9606.ENSP00000221485', 'string_db': 1}, {'shared name': '9606.ENSP00000254719', 'string_db': 1}, {'shared name': '9606.ENSP00000222574', 'string_db': 1}, {'shared name': '9606.hsa-miR-433-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000352252', 'string_db': 1}, {'shared name': '9606.ENSP00000418994', 'string_db': 1}, {'shared name': '9606.hsa-miR-107', 'string_db': 1}, {'shared name': '9606.ENSP00000306920', 'string_db': 1}, {'shared name': '9606.ENSP00000364813', 'string_db': 1}, {'shared name': '9606.ENSP00000365458', 'string_db': 1}, {'shared name': '9606.ENSP00000352011', 'string_db': 1}, {'shared name': '9606.ENSP00000397297', 'string_db': 1}, {'shared name': '9606.hsa-miR-9-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000497217', 'string_db': 1}, {'shared name': '9606.ENSP00000343535', 'string_db': 1}, {'shared name': '9606.ENSP00000216200', 'string_db': 1}, {'shared name': '9606.ENSP00000425979', 'string_db': 1}, {'shared name': '9606.ENSP00000365576', 'string_db': 1}, {'shared name': '9606.ENSP00000419395', 'string_db': 1}, {'shared name': '9606.ENSP00000368966', 'string_db': 1}, {'shared name': '9606.ENSP00000492795', 'string_db': 1}, {'shared name': '9606.ENSP00000261366', 'string_db': 1}, {'shared name': '9606.ENSP00000395535', 'string_db': 1}, {'shared name': '9606.ENSP00000329918', 'string_db': 1}, {'shared name': '9606.hsa-miR-101-3p', 'string_db': 1}, {'shared name': '9606.hsa-miR-520c-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000291568', 'string_db': 1}, {'shared name': '9606.ENSP00000368970', 'string_db': 1}, {'shared name': '9606.ENSP00000262904', 'string_db': 1}, {'shared name': '9606.ENSP00000405327', 'string_db': 1}, {'shared name': '9606.ENSP00000467262', 'string_db': 1}, {'shared name': '9606.ENSP00000261367', 'string_db': 1}, {'shared name': '9606.ENSP00000371101', 'string_db': 1}, {'shared name': '9606.ENSP00000489829', 'string_db': 1}, {'shared name': '9606.ENSP00000392028', 'string_db': 1}, {'shared name': '9606.ENSP00000471191', 'string_db': 1}, {'shared name': '9606.ENSP00000221233', 'string_db': 1}, {'shared name': '9606.ENSP00000305702', 'string_db': 1}, {'shared name': '9606.ENSP00000481554', 'string_db': 1}, {'shared name': '9606.ENSP00000379616', 'string_db': 1}, {'shared name': '9606.ENSP00000467024', 'string_db': 1}, {'shared name': '9606.ENSP00000374049', 'string_db': 1}, {'shared name': '9606.ENSP00000355511', 'string_db': 1}, {'shared name': '9606.ENSP00000250003', 'string_db': 1}, {'shared name': '9606.ENSP00000332772', 'string_db': 1}, {'shared name': '9606.ENSP00000339835', 'string_db': 1}, {'shared name': '9606.ENSP00000362649', 'string_db': 1}, {'shared name': '9606.ENSP00000338629', 'string_db': 1}, {'shared name': '9606.ENSP00000360108', 'string_db': 1}, {'shared name': '9606.ENSP00000365227', 'string_db': 1}, {'shared name': '9606.ENSP00000353331', 'string_db': 1}, {'shared name': '9606.ENSP00000301587', 'string_db': 1}, {'shared name': '9606.ENSP00000222584', 'string_db': 1}, {'shared name': '9606.ENSP00000380602', 'string_db': 1}, {'shared name': '9606.ENSP00000259708', 'string_db': 1}, {'shared name': '9606.ENSP00000327513', 'string_db': 1}, {'shared name': '9606.ENSP00000447537', 'string_db': 1}, {'shared name': '9606.ENSP00000340820', 'string_db': 1}, {'shared name': '9606.ENSP00000246672', 'string_db': 1}, {'shared name': '9606.ENSP00000254722', 'string_db': 1}, {'shared name': '9606.ENSP00000311816', 'string_db': 1}, {'shared name': '9606.ENSP00000499501', 'string_db': 1}, {'shared name': '9606.ENSP00000320650', 'string_db': 1}, {'shared name': '9606.ENSP00000498653', 'string_db': 1}, {'shared name': '9606.hsa-miR-124-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000284240', 'string_db': 1}, {'shared name': '9606.ENSP00000361433', 'string_db': 1}, {'shared name': '9606.ENSP00000439585', 'string_db': 1}, {'shared name': '9606.ENSP00000316032', 'string_db': 1}, {'shared name': '9606.ENSP00000368984', 'string_db': 1}, {'shared name': '9606.hsa-miR-17-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000366563', 'string_db': 1}, {'shared name': '9606.ENSP00000419260', 'string_db': 1}, {'shared name': '9606.ENSP00000237014', 'string_db': 1}, {'shared name': '9606.AC007879.5', 'string_db': 1}, {'shared name': '9606.ENSP00000323148', 'string_db': 1}, {'shared name': '9606.ENSP00000446576', 'string_db': 1}, {'shared name': '9606.ENSP00000263431', 'string_db': 1}, {'shared name': '9606.ENSP00000355747', 'string_db': 1}, {'shared name': '9606.ENSP00000405674', 'string_db': 1}, {'shared name': '9606.ENSP00000354416', 'string_db': 1}, {'shared name': '9606.ENSP00000338512', 'string_db': 1}, {'shared name': '9606.ENSP00000356953', 'string_db': 1}, {'shared name': '9606.ENSP00000399376', 'string_db': 1}, {'shared name': '9606.ENSP00000359489', 'string_db': 1}, {'shared name': '9606.ENSP00000298556', 'string_db': 1}, {'shared name': '9606.ENSP00000355865', 'string_db': 1}, {'shared name': '9606.ENSP00000226382', 'string_db': 1}, {'shared name': '9606.ENSP00000355741', 'string_db': 1}, {'shared name': '9606.ENSP00000346483', 'string_db': 1}, {'shared name': '9606.ENSP00000246548', 'string_db': 1}, {'shared name': '9606.ENSP00000304643', 'string_db': 1}, {'shared name': '9606.ENSP00000373413', 'string_db': 1}, {'shared name': '9606.ENSP00000254810', 'string_db': 1}, {'shared name': '9606.ENSP00000376921', 'string_db': 1}, {'shared name': '9606.ENSP00000302100', 'string_db': 1}, {'shared name': '9606.ENSP00000350170', 'string_db': 1}, {'shared name': '9606.ENSP00000252996', 'string_db': 1}, {'shared name': '9606.hsa-miR-29a-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000366330', 'string_db': 1}, {'shared name': '9606.ENSP00000248600', 'string_db': 1}, {'shared name': '9606.ENSP00000216218', 'string_db': 1}, {'shared name': '9606.ENSP00000306138', 'string_db': 1}, {'shared name': '9606.ENSP00000288943', 'string_db': 1}, {'shared name': '9606.ENSP00000202625', 'string_db': 1}, {'shared name': '9606.ENSP00000349748', 'string_db': 1}, {'shared name': '9606.ENSP00000245451', 'string_db': 1}, {'shared name': '9606.ENSP00000366452', 'string_db': 1}, {'shared name': '9606.ENSP00000360231', 'string_db': 1}, {'shared name': '9606.hsa-miR-93-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000471851', 'string_db': 1}, {'shared name': '9606.ENSP00000364270', 'string_db': 1}, {'shared name': '9606.ENSP00000340125', 'string_db': 1}, {'shared name': '9606.ENSP00000302216', 'string_db': 1}, {'shared name': '9606.ENSP00000343515', 'string_db': 1}, {'shared name': '9606.ENSP00000221801', 'string_db': 1}, {'shared name': '9606.ENSP00000501150', 'string_db': 1}, {'shared name': '9606.ENSP00000413035', 'string_db': 1}, {'shared name': '9606.ENSP00000265164', 'string_db': 1}, {'shared name': '9606.ENSP00000359804', 'string_db': 1}, {'shared name': '9606.ENSP00000259711', 'string_db': 1}, {'shared name': '9606.ENSP00000415579', 'string_db': 1}, {'shared name': '9606.ENSP00000306253', 'string_db': 1}, {'shared name': '9606.ENSP00000273320', 'string_db': 1}, {'shared name': '9606.ENSP00000305288', 'string_db': 1}, {'shared name': '9606.ENSP00000418721', 'string_db': 1}, {'shared name': '9606.ENSP00000458663', 'string_db': 1}, {'shared name': '9606.ENSP00000307900', 'string_db': 1}, {'shared name': '9606.ENSP00000329357', 'string_db': 1}, {'shared name': '9606.ENSP00000496695', 'string_db': 1}, {'shared name': '9606.ENSP00000318585', 'string_db': 1}, {'shared name': '9606.ENSP00000418960', 'string_db': 1}, {'shared name': '9606.ENSP00000478249', 'string_db': 1}, {'shared name': '9606.ENSP00000303540', 'string_db': 1}, {'shared name': '9606.ENSP00000393379', 'string_db': 1}, {'shared name': '9606.ENSP00000240316', 'string_db': 1}, {'shared name': '9606.ENSP00000457205', 'string_db': 1}, {'shared name': '9606.ENSP00000260386', 'string_db': 1}, {'shared name': '9606.ENSP00000288135', 'string_db': 1}, {'shared name': '9606.ENSP00000368884', 'string_db': 1}, {'shared name': '9606.ENSP00000458537', 'string_db': 1}, {'shared name': '9606.ENSP00000454852', 'string_db': 1}, {'shared name': '9606.ENSP00000338173', 'string_db': 1}, {'shared name': '9606.ENSP00000285667', 'string_db': 1}, {'shared name': '9606.ENSP00000380070', 'string_db': 1}, {'shared name': '9606.ENSP00000368881', 'string_db': 1}, {'shared name': '9606.ENSP00000359019', 'string_db': 1}, {'shared name': '9606.ENSP00000477715', 'string_db': 1}, {'shared name': '9606.ENSP00000417901', 'string_db': 1}, {'shared name': '9606.ENSP00000221930', 'string_db': 1}, {'shared name': '9606.ENSP00000490107', 'string_db': 1}, {'shared name': '9606.ENSP00000332194', 'string_db': 1}, {'shared name': '9606.ENSP00000219197', 'string_db': 1}, {'shared name': '9606.ENSP00000180166', 'string_db': 1}, {'shared name': '9606.ENSP00000381185', 'string_db': 1}, {'shared name': '9606.ENSP00000316842', 'string_db': 1}, {'shared name': '9606.ENSP00000254079', 'string_db': 1}, {'shared name': '9606.ENSP00000296271', 'string_db': 1}, {'shared name': '9606.ENSP00000362300', 'string_db': 1}, {'shared name': '9606.ENSP00000264867', 'string_db': 1}, {'shared name': '9606.ENSP00000349298', 'string_db': 1}, {'shared name': '9606.ENSP00000311032', 'string_db': 1}, {'shared name': '9606.ENSP00000295900', 'string_db': 1}, {'shared name': '9606.ENSP00000293288', 'string_db': 1}, {'shared name': '9606.SNORD58B', 'string_db': 1}, {'shared name': '9606.hsa-miR-34c-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000306561', 'string_db': 1}, {'shared name': '9606.ENSP00000500990', 'string_db': 1}, {'shared name': '9606.ENSP00000256261', 'string_db': 1}, {'shared name': '9606.ENSP00000295589', 'string_db': 1}, {'shared name': '9606.ENSP00000419081', 'string_db': 1}, {'shared name': '9606.ENSP00000475626', 'string_db': 1}, {'shared name': '9606.ENSP00000479667', 'string_db': 1}, {'shared name': '9606.ENSP00000233813', 'string_db': 1}, {'shared name': '9606.hsa-miR-1225-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000406209', 'string_db': 1}, {'shared name': '9606.ENSP00000455698', 'string_db': 1}, {'shared name': '9606.ENSP00000348645', 'string_db': 1}, {'shared name': '9606.ENSP00000321835', 'string_db': 1}, {'shared name': '9606.ENSP00000216127', 'string_db': 1}, {'shared name': '9606.ENSP00000371133', 'string_db': 1}, {'shared name': '9606.ENSP00000369863', 'string_db': 1}, {'shared name': '9606.ENSP00000261601', 'string_db': 1}, {'shared name': '9606.ENSP00000300213', 'string_db': 1}, {'shared name': '9606.ENSP00000225504', 'string_db': 1}, {'shared name': '9606.ENSP00000264552', 'string_db': 1}, {'shared name': '9606.ENSP00000308610', 'string_db': 1}, {'shared name': '9606.ENSP00000495360', 'string_db': 1}, {'shared name': '9606.ENSP00000421339', 'string_db': 1}, {'shared name': '9606.ENSP00000240100', 'string_db': 1}, {'shared name': '9606.ENSP00000381057', 'string_db': 1}, {'shared name': '9606.ENSP00000334002', 'string_db': 1}, {'shared name': '9606.ENSP00000411355', 'string_db': 1}, {'shared name': '9606.ENSP00000333277', 'string_db': 1}, {'shared name': '9606.ENSP00000295910', 'string_db': 1}, {'shared name': '9606.ENSP00000438574', 'string_db': 1}, {'shared name': '9606.ENSP00000340467', 'string_db': 1}, {'shared name': '9606.ENSP00000377372', 'string_db': 1}, {'shared name': '9606.ENSP00000477141', 'string_db': 1}, {'shared name': '9606.ENSP00000463653', 'string_db': 1}, {'shared name': '9606.ENSP00000360493', 'string_db': 1}, {'shared name': '9606.ENSP00000310036', 'string_db': 1}, {'shared name': '9606.ENSP00000385410', 'string_db': 1}, {'shared name': '9606.ENSP00000249396', 'string_db': 1}, {'shared name': '9606.ENSP00000294702', 'string_db': 1}, {'shared name': '9606.ENSP00000357583', 'string_db': 1}, {'shared name': '9606.ENSP00000349168', 'string_db': 1}, {'shared name': '9606.ENSP00000276654', 'string_db': 1}, {'shared name': '9606.ENSP00000215832', 'string_db': 1}, {'shared name': '9606.ENSP00000216254', 'string_db': 1}, {'shared name': '9606.ENSP00000261731', 'string_db': 1}, {'shared name': '9606.ENSP00000324560', 'string_db': 1}, {'shared name': '9606.ENSP00000362680', 'string_db': 1}, {'shared name': '9606.ENSP00000346694', 'string_db': 1}, {'shared name': '9606.ENSP00000353414', 'string_db': 1}, {'shared name': '9606.ENSP00000437125', 'string_db': 1}, {'shared name': '9606.ENSP00000409279', 'string_db': 1}, {'shared name': '9606.ENSP00000349722', 'string_db': 1}, {'shared name': '9606.ENSP00000350386', 'string_db': 1}, {'shared name': '9606.ENSP00000283195', 'string_db': 1}, {'shared name': '9606.ENSP00000339004', 'string_db': 1}, {'shared name': '9606.ENSP00000264689', 'string_db': 1}, {'shared name': '9606.ENSP00000321606', 'string_db': 1}, {'shared name': '9606.ENSP00000369996', 'string_db': 1}, {'shared name': '9606.ENSP00000414856', 'string_db': 1}, {'shared name': '9606.ENSP00000323588', 'string_db': 1}, {'shared name': '9606.ENSP00000248975', 'string_db': 1}, {'shared name': '9606.ENSP00000181796', 'string_db': 1}, {'shared name': '9606.ENSP00000371267', 'string_db': 1}, {'shared name': '9606.ENSP00000378338', 'string_db': 1}, {'shared name': '9606.ENSP00000370058', 'string_db': 1}, {'shared name': '9606.ENSP00000239231', 'string_db': 1}, {'shared name': '9606.ENSP00000315299', 'string_db': 1}, {'shared name': '9606.ENSP00000378699', 'string_db': 1}, {'shared name': '9606.ENSP00000415822', 'string_db': 1}, {'shared name': '9606.ENSP00000333262', 'string_db': 1}, {'shared name': '9606.ENSP00000370193', 'string_db': 1}, {'shared name': '9606.ENSP00000483254', 'string_db': 1}, {'shared name': '9606.ENSP00000422435', 'string_db': 1}, {'shared name': '9606.ENSP00000482169', 'string_db': 1}, {'shared name': '9606.ENSP00000258415', 'string_db': 1}, {'shared name': '9606.ENSP00000380432', 'string_db': 1}, {'shared name': '9606.ENSP00000349156', 'string_db': 1}, {'shared name': '9606.ENSP00000253408', 'string_db': 1}, {'shared name': '9606.ENSP00000384474', 'string_db': 1}, {'shared name': '9606.HTT-AS', 'string_db': 1}, {'shared name': '9606.ENSP00000358784', 'string_db': 1}, {'shared name': '9606.ENSP00000265195', 'string_db': 1}, {'shared name': '9606.ENSP00000440045', 'string_db': 1}, {'shared name': '9606.ENSP00000378476', 'string_db': 1}, {'shared name': '9606.ENSP00000362205', 'string_db': 1}, {'shared name': '9606.ENSP00000252934', 'string_db': 1}, {'shared name': '9606.ENSP00000250495', 'string_db': 1}, {'shared name': '9606.ENSP00000340330', 'string_db': 1}, {'shared name': '9606.ENSP00000247225', 'string_db': 1}, {'shared name': '9606.ENSP00000310129', 'string_db': 1}, {'shared name': '9606.ENSP00000360266', 'string_db': 1}, {'shared name': '9606.ENSP00000296755', 'string_db': 1}, {'shared name': '9606.ENSP00000359719', 'string_db': 1}, {'shared name': '9606.ENSP00000499387', 'string_db': 1}, {'shared name': '9606.ENSP00000358089', 'string_db': 1}, {'shared name': '9606.ENSP00000230321', 'string_db': 1}, {'shared name': '9606.ENSP00000377936', 'string_db': 1}, {'shared name': '9606.ENSP00000329403', 'string_db': 1}, {'shared name': '9606.ENSP00000216144', 'string_db': 1}, {'shared name': '9606.ENSP00000314173', 'string_db': 1}, {'shared name': '9606.ENSP00000430241', 'string_db': 1}, {'shared name': '9606.ENSP00000319060', 'string_db': 1}, {'shared name': '9606.ENSP00000354859', 'string_db': 1}, {'shared name': '9606.ENSP00000430000', 'string_db': 1}, {'shared name': '9606.ENSP00000325863', 'string_db': 1}, {'shared name': '9606.ENSP00000258302', 'string_db': 1}, {'shared name': '9606.ENSP00000476119', 'string_db': 1}, {'shared name': '9606.ENSP00000366488', 'string_db': 1}, {'shared name': '9606.ENSP00000481848', 'string_db': 1}, {'shared name': '9606.ENSP00000234389', 'string_db': 1}, {'shared name': '9606.ENSP00000437256', 'string_db': 1}, {'shared name': '9606.ENSP00000279488', 'string_db': 1}, {'shared name': '9606.ENSP00000363435', 'string_db': 1}, {'shared name': '9606.ENSP00000366249', 'string_db': 1}, {'shared name': '9606.ENSP00000398632', 'string_db': 1}, {'shared name': '9606.ENSP00000477455', 'string_db': 1}, {'shared name': '9606.ENSP00000254976', 'string_db': 1}, {'shared name': '9606.ENSP00000316357', 'string_db': 1}, {'shared name': '9606.ENSP00000216714', 'string_db': 1}, {'shared name': '9606.ENSP00000347896', 'string_db': 1}, {'shared name': '9606.ENSP00000269305', 'string_db': 1}, {'shared name': '9606.ENSP00000320821', 'string_db': 1}, {'shared name': '9606.ENSP00000264657', 'string_db': 1}, {'shared name': '9606.ENSP00000353646', 'string_db': 1}, {'shared name': '9606.ENSP00000397563', 'string_db': 1}, {'shared name': '9606.ENSP00000263205', 'string_db': 1}, {'shared name': '9606.ENSP00000353767', 'string_db': 1}, {'shared name': '9606.ENSP00000353864', 'string_db': 1}, {'shared name': '9606.ENSP00000345347', 'string_db': 1}, {'shared name': '9606.ENSP00000265081', 'string_db': 1}, {'shared name': '9606.ENSP00000318635', 'string_db': 1}, {'shared name': '9606.ENSP00000408617', 'string_db': 1}, {'shared name': '9606.ENSP00000364639', 'string_db': 1}, {'shared name': '9606.ENSP00000223129', 'string_db': 1}, {'shared name': '9606.ENSP00000370744', 'string_db': 1}, {'shared name': '9606.ENSP00000307786', 'string_db': 1}, {'shared name': '9606.FMR1-AS1', 'string_db': 1}, {'shared name': '9606.ENSP00000428426', 'string_db': 1}, {'shared name': '9606.ENSP00000305480', 'string_db': 1}, {'shared name': '9606.ENSP00000291295', 'string_db': 1}, {'shared name': '9606.ENSP00000453858', 'string_db': 1}, {'shared name': '9606.ENSP00000245255', 'string_db': 1}, {'shared name': '9606.ENSP00000261523', 'string_db': 1}, {'shared name': '9606.ENSP00000377015', 'string_db': 1}, {'shared name': '9606.ENSP00000453170', 'string_db': 1}, {'shared name': '9606.ENSP00000244061', 'string_db': 1}, {'shared name': '9606.ENSP00000293190', 'string_db': 1}, {'shared name': '9606.ENSP00000276079', 'string_db': 1}, {'shared name': '9606.ENSP00000269143', 'string_db': 1}, {'shared name': '9606.ENSP00000355028', 'string_db': 1}, {'shared name': '9606.ENSP00000370083', 'string_db': 1}, {'shared name': '9606.ENSP00000268058', 'string_db': 1}, {'shared name': '9606.ENSP00000263209', 'string_db': 1}, {'shared name': '9606.ENSP00000278379', 'string_db': 1}, {'shared name': '9606.ENSP00000347184', 'string_db': 1}, {'shared name': '9606.hsa-miR-150-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000365601', 'string_db': 1}, {'shared name': '9606.ENSP00000307604', 'string_db': 1}, {'shared name': '9606.ENSP00000357206', 'string_db': 1}, {'shared name': '9606.hsa-miR-9-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000361021', 'string_db': 1}, {'shared name': '9606.ENSP00000334463', 'string_db': 1}, {'shared name': '9606.ENSP00000348056', 'string_db': 1}, {'shared name': '9606.ENSP00000386786', 'string_db': 1}, {'shared name': '9606.ENSP00000357565', 'string_db': 1}, {'shared name': '9606.ENSP00000332706', 'string_db': 1}, {'shared name': '9606.ENSP00000296526', 'string_db': 1}, {'shared name': '9606.ENSP00000458065', 'string_db': 1}, {'shared name': '9606.ENSP00000385675', 'string_db': 1}, {'shared name': '9606.ENSP00000305422', 'string_db': 1}, {'shared name': '9606.ENSP00000359727', 'string_db': 1}, {'shared name': '9606.ENSP00000362578', 'string_db': 1}, {'shared name': '9606.ENSP00000365861', 'string_db': 1}, {'shared name': '9606.ENSP00000356231', 'string_db': 1}, {'shared name': '9606.ENSP00000306330', 'string_db': 1}, {'shared name': '9606.ENSP00000361027', 'string_db': 1}, {'shared name': '9606.ENSP00000378487', 'string_db': 1}, {'shared name': '9606.ENSP00000431162', 'string_db': 1}, {'shared name': '9606.hsa-miR-548g-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000371729', 'string_db': 1}, {'shared name': '9606.hsa-miR-320d', 'string_db': 1}, {'shared name': '9606.ENSP00000304331', 'string_db': 1}, {'shared name': '9606.ENSP00000013807', 'string_db': 1}, {'shared name': '9606.ENSP00000435637', 'string_db': 1}, {'shared name': '9606.ENSP00000385216', 'string_db': 1}, {'shared name': '9606.ENSP00000346671', 'string_db': 1}, {'shared name': '9606.ENSP00000427900', 'string_db': 1}, {'shared name': '9606.MIR17HG', 'string_db': 1}, {'shared name': '9606.ENSP00000350928', 'string_db': 1}, {'shared name': '9606.ENSP00000360280', 'string_db': 1}, {'shared name': '9606.AC006129.1', 'string_db': 1}, {'shared name': '9606.ENSP00000219548', 'string_db': 1}, {'shared name': '9606.ENSP00000282753', 'string_db': 1}, {'shared name': '9606.ENSP00000216727', 'string_db': 1}, {'shared name': '9606.ENSP00000284262', 'string_db': 1}, {'shared name': '9606.ENSP00000261837', 'string_db': 1}, {'shared name': '9606.ATXN8OS', 'string_db': 1}, {'shared name': '9606.ENSP00000368314', 'string_db': 1}, {'shared name': '9606.ENSP00000374552', 'string_db': 1}, {'shared name': '9606.ENSP00000256079', 'string_db': 1}, {'shared name': '9606.hsa-miR-128-3p', 'string_db': 1}, {'shared name': '9606.hsa-miR-4305', 'string_db': 1}, {'shared name': '9606.ENSP00000315137', 'string_db': 1}, {'shared name': '9606.ENSP00000347997', 'string_db': 1}, {'shared name': '9606.ENSP00000261712', 'string_db': 1}, {'shared name': '9606.ENSP00000376753', 'string_db': 1}, {'shared name': '9606.ENSP00000406549', 'string_db': 1}, {'shared name': '9606.ENSP00000317333', 'string_db': 1}, {'shared name': '9606.ENSP00000399851', 'string_db': 1}, {'shared name': '9606.ENSP00000369531', 'string_db': 1}, {'shared name': '9606.ENSP00000358886', 'string_db': 1}, {'shared name': '9606.ENSP00000383042', 'string_db': 1}, {'shared name': '9606.ENSP00000403397', 'string_db': 1}, {'shared name': '9606.ENSP00000359978', 'string_db': 1}, {'shared name': '9606.ENSP00000374455', 'string_db': 1}, {'shared name': '9606.ENSP00000429763', 'string_db': 1}, {'shared name': '9606.ENSP00000438886', 'string_db': 1}, {'shared name': '9606.hsa-miR-379-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000262367', 'string_db': 1}, {'shared name': '9606.ENSP00000353072', 'string_db': 1}, {'shared name': '9606.ENSP00000376637', 'string_db': 1}, {'shared name': '9606.ENSP00000369895', 'string_db': 1}, {'shared name': '9606.ENSP00000376197', 'string_db': 1}, {'shared name': '9606.ENSP00000462298', 'string_db': 1}, {'shared name': '9606.ENSP00000262241', 'string_db': 1}, {'shared name': '9606.ENSP00000355370', 'string_db': 1}, {'shared name': '9606.ENSP00000225577', 'string_db': 1}, {'shared name': '9606.ENSP00000333363', 'string_db': 1}, {'shared name': '9606.ENSP00000376077', 'string_db': 1}, {'shared name': '9606.ENSP00000347170', 'string_db': 1}, {'shared name': '9606.ENSP00000358525', 'string_db': 1}, {'shared name': '9606.ENSP00000302961', 'string_db': 1}, {'shared name': '9606.ENSP00000324173', 'string_db': 1}, {'shared name': '9606.ENSP00000309591', 'string_db': 1}, {'shared name': '9606.ENSP00000419782', 'string_db': 1}, {'shared name': '9606.ENSP00000345571', 'string_db': 1}, {'shared name': '9606.ENSP00000418572', 'string_db': 1}, {'shared name': '9606.ENSP00000495557', 'string_db': 1}, {'shared name': '9606.ENSP00000327687', 'string_db': 1}, {'shared name': '9606.ENSP00000309595', 'string_db': 1}, {'shared name': '9606.ENSP00000365514', 'string_db': 1}, {'shared name': '9606.ENSP00000361930', 'string_db': 1}, {'shared name': '9606.ENSP00000270225', 'string_db': 1}, {'shared name': '9606.ENSP00000290649', 'string_db': 1}, {'shared name': '9606.ENSP00000362485', 'string_db': 1}, {'shared name': '9606.ENSP00000309477', 'string_db': 1}, {'shared name': '9606.ENSP00000386458', 'string_db': 1}, {'shared name': '9606.ENSP00000345575', 'string_db': 1}, {'shared name': '9606.ENSP00000388638', 'string_db': 1}, {'shared name': '9606.ENSP00000346534', 'string_db': 1}, {'shared name': '9606.ENSP00000270349', 'string_db': 1}, {'shared name': '9606.ENSP00000368332', 'string_db': 1}, {'shared name': '9606.ENSP00000212015', 'string_db': 1}, {'shared name': '9606.ENSP00000405965', 'string_db': 1}, {'shared name': '9606.ENSP00000284981', 'string_db': 1}, {'shared name': '9606.ENSP00000345206', 'string_db': 1}, {'shared name': '9606.ENSP00000282561', 'string_db': 1}, {'shared name': '9606.ENSP00000493382', 'string_db': 1}, {'shared name': '9606.ENSP00000498255', 'string_db': 1}, {'shared name': '9606.ENSP00000263025', 'string_db': 1}, {'shared name': '9606.ENSP00000478877', 'string_db': 1}, {'shared name': '9606.hsa-miR-548w', 'string_db': 1}, {'shared name': '9606.hsa-miR-133b', 'string_db': 1}, {'shared name': '9606.ENSP00000462745', 'string_db': 1}, {'shared name': '9606.ENSP00000352516', 'string_db': 1}, {'shared name': '9606.ENSP00000358518', 'string_db': 1}, {'shared name': '9606.ENSP00000405388', 'string_db': 1}, {'shared name': '9606.ENSP00000268712', 'string_db': 1}, {'shared name': '9606.ENSP00000359085', 'string_db': 1}, {'shared name': '9606.ENSP00000360609', 'string_db': 1}, {'shared name': '9606.ENSP00000362131', 'string_db': 1}, {'shared name': '9606.hsa-miR-659-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000499582', 'string_db': 1}, {'shared name': '9606.ENSP00000422185', 'string_db': 1}, {'shared name': '9606.ENSP00000454229', 'string_db': 1}, {'shared name': '9606.ENSP00000221742', 'string_db': 1}, {'shared name': '9606.ENSP00000489407', 'string_db': 1}, {'shared name': '9606.ENSP00000359506', 'string_db': 1}, {'shared name': '9606.ENSP00000444433', 'string_db': 1}, {'shared name': '9606.ENSP00000414303', 'string_db': 1}, {'shared name': '9606.ENSP00000391803', 'string_db': 1}, {'shared name': '9606.ENSP00000379350', 'string_db': 1}, {'shared name': '9606.ENSP00000399403', 'string_db': 1}, {'shared name': '9606.hsa-miR-106a-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000379915', 'string_db': 1}, {'shared name': '9606.ENSP00000254322', 'string_db': 1}, {'shared name': '9606.ENSP00000269228', 'string_db': 1}, {'shared name': '9606.ENSP00000403888', 'string_db': 1}, {'shared name': '9606.ENSP00000306894', 'string_db': 1}, {'shared name': '9606.ENSP00000254325', 'string_db': 1}, {'shared name': '9606.ENSP00000307863', 'string_db': 1}]}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,264 [DEBUG] py4...: ǀHTTP PUT(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode), json: {'key': 'name', 'dataKey': 'shared name', 'data': [{'shared name': '9606.ENSP00000263160', 'string_db': 1}, {'shared name': '9606.ENSP00000227507', 'string_db': 1}, {'shared name': '9606.ENSP00000400142', 'string_db': 1}, {'shared name': '9606.ENSP00000252804', 'string_db': 1}, {'shared name': '9606.ENSP00000371985', 'string_db': 1}, {'shared name': '9606.ENSP00000418447', 'string_db': 1}, {'shared name': '9606.ENSP00000342056', 'string_db': 1}, {'shared name': '9606.ENSP00000362014', 'string_db': 1}, {'shared name': '9606.ENSP00000265459', 'string_db': 1}, {'shared name': '9606.ENSP00000258106', 'string_db': 1}, {'shared name': '9606.ENSP00000263038', 'string_db': 1}, {'shared name': '9606.ENSP00000326366', 'string_db': 1}, {'shared name': '9606.ENSP00000450873', 'string_db': 1}, {'shared name': '9606.ENSP00000354929', 'string_db': 1}, {'shared name': '9606.ENSP00000221996', 'string_db': 1}, {'shared name': '9606.ENSP00000478887', 'string_db': 1}, {'shared name': '9606.ENSP00000331040', 'string_db': 1}, {'shared name': '9606.ENSP00000408526', 'string_db': 1}, {'shared name': '9606.hsa-miR-155-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000477437', 'string_db': 1}, {'shared name': '9606.ENSP00000246914', 'string_db': 1}, {'shared name': '9606.ENSP00000359095', 'string_db': 1}, {'shared name': '9606.ENSP00000299001', 'string_db': 1}, {'shared name': '9606.ENSP00000432568', 'string_db': 1}, {'shared name': '9606.ENSP00000220420', 'string_db': 1}, {'shared name': '9606.ENSP00000380903', 'string_db': 1}, {'shared name': '9606.ENSP00000392423', 'string_db': 1}, {'shared name': '9606.ENSP00000498362', 'string_db': 1}, {'shared name': '9606.hsa-miR-132-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000374354', 'string_db': 1}, {'shared name': '9606.ENSP00000355231', 'string_db': 1}, {'shared name': '9606.ENSP00000354923', 'string_db': 1}, {'shared name': '9606.ENSP00000378394', 'string_db': 1}, {'shared name': '9606.ENSP00000351777', 'string_db': 1}, {'shared name': '9606.ENSP00000336712', 'string_db': 1}, {'shared name': '9606.ENSP00000260665', 'string_db': 1}, {'shared name': '9606.ENSP00000215095', 'string_db': 1}, {'shared name': '9606.ENSP00000390941', 'string_db': 1}, {'shared name': '9606.hsa-miR-106b-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000443631', 'string_db': 1}, {'shared name': '9606.ENSP00000442920', 'string_db': 1}, {'shared name': '9606.ENSP00000484060', 'string_db': 1}, {'shared name': '9606.ENSP00000312987', 'string_db': 1}, {'shared name': '9606.ENSP00000224140', 'string_db': 1}, {'shared name': '9606.ENSP00000473623', 'string_db': 1}, {'shared name': '9606.ENSP00000295987', 'string_db': 1}, {'shared name': '9606.ENSP00000262039', 'string_db': 1}, {'shared name': '9606.ENSP00000419243', 'string_db': 1}, {'shared name': '9606.ENSP00000323511', 'string_db': 1}, {'shared name': '9606.ENSP00000358283', 'string_db': 1}, {'shared name': '9606.ENSP00000321455', 'string_db': 1}, {'shared name': '9606.ENSP00000364204', 'string_db': 1}, {'shared name': '9606.ENSP00000264335', 'string_db': 1}, {'shared name': '9606.ENSP00000287713', 'string_db': 1}, {'shared name': '9606.ENSP00000252482', 'string_db': 1}, {'shared name': '9606.ENSP00000282020', 'string_db': 1}, {'shared name': '9606.ENSP00000265421', 'string_db': 1}, {'shared name': '9606.ENSP00000282146', 'string_db': 1}, {'shared name': '9606.ENSP00000244769', 'string_db': 1}, {'shared name': '9606.ENSP00000364210', 'string_db': 1}, {'shared name': '9606.ENSP00000303709', 'string_db': 1}, {'shared name': '9606.ENSP00000430432', 'string_db': 1}, {'shared name': '9606.ENSP00000278616', 'string_db': 1}, {'shared name': '9606.hsa-miR-1909-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000354497', 'string_db': 1}, {'shared name': '9606.ENSP00000352738', 'string_db': 1}, {'shared name': '9606.ENSP00000378284', 'string_db': 1}, {'shared name': '9606.ENSP00000228872', 'string_db': 1}, {'shared name': '9606.ENSP00000470248', 'string_db': 1}, {'shared name': '9606.ENSP00000398698', 'string_db': 1}, {'shared name': '9606.ENSP00000480050', 'string_db': 1}, {'shared name': '9606.ENSP00000337353', 'string_db': 1}, {'shared name': '9606.hsa-miR-760', 'string_db': 1}, {'shared name': '9606.ENSP00000406293', 'string_db': 1}, {'shared name': '9606.ENSP00000356790', 'string_db': 1}, {'shared name': '9606.ENSP00000260116', 'string_db': 1}, {'shared name': '9606.ENSP00000230354', 'string_db': 1}, {'shared name': '9606.ENSP00000442793', 'string_db': 1}, {'shared name': '9606.ENSP00000255631', 'string_db': 1}, {'shared name': '9606.ENSP00000489624', 'string_db': 1}, {'shared name': '9606.hsa-miR-144-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000464342', 'string_db': 1}, {'shared name': '9606.ENSP00000252486', 'string_db': 1}, {'shared name': '9606.ENSP00000285419', 'string_db': 1}, {'shared name': '9606.ENSP00000369689', 'string_db': 1}, {'shared name': '9606.ENSP00000286628', 'string_db': 1}, {'shared name': '9606.ENSP00000343001', 'string_db': 1}, {'shared name': '9606.ENSP00000391942', 'string_db': 1}, {'shared name': '9606.hsa-miR-130a-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000441685', 'string_db': 1}, {'shared name': '9606.ENSP00000302967', 'string_db': 1}, {'shared name': '9606.ENSP00000490614', 'string_db': 1}, {'shared name': '9606.ENSP00000263257', 'string_db': 1}, {'shared name': '9606.ENSP00000358155', 'string_db': 1}, {'shared name': '9606.ENSP00000428994', 'string_db': 1}, {'shared name': '9606.ENSP00000383199', 'string_db': 1}, {'shared name': '9606.ENSP00000359890', 'string_db': 1}, {'shared name': '9606.ENSP00000340989', 'string_db': 1}, {'shared name': '9606.ENSP00000265431', 'string_db': 1}, {'shared name': '9606.ENSP00000292246', 'string_db': 1}, {'shared name': '9606.ENSP00000354125', 'string_db': 1}, {'shared name': '9606.ENSP00000295756', 'string_db': 1}, {'shared name': '9606.ENSP00000358967', 'string_db': 1}, {'shared name': '9606.ENSP00000358151', 'string_db': 1}, {'shared name': '9606.ENSP00000310585', 'string_db': 1}, {'shared name': '9606.ENSP00000362399', 'string_db': 1}, {'shared name': '9606.ENSP00000357876', 'string_db': 1}, {'shared name': '9606.ENSP00000363123', 'string_db': 1}, {'shared name': '9606.ENSP00000417864', 'string_db': 1}, {'shared name': '9606.ENSP00000295757', 'string_db': 1}, {'shared name': '9606.ENSP00000354360', 'string_db': 1}, {'shared name': '9606.ENSP00000040584', 'string_db': 1}, {'shared name': '9606.ENSP00000492363', 'string_db': 1}, {'shared name': '9606.ENSP00000365301', 'string_db': 1}, {'shared name': '9606.ENSP00000219476', 'string_db': 1}, {'shared name': '9606.ENSP00000386229', 'string_db': 1}, {'shared name': '9606.ENSP00000291700', 'string_db': 1}, {'shared name': '9606.ENSP00000287820', 'string_db': 1}, {'shared name': '9606.ENSP00000368007', 'string_db': 1}, {'shared name': '9606.ENSP00000263754', 'string_db': 1}, {'shared name': '9606.ENSP00000288490', 'string_db': 1}, {'shared name': '9606.ENSP00000284551', 'string_db': 1}, {'shared name': '9606.ENSP00000434241', 'string_db': 1}, {'shared name': '9606.ENSP00000302108', 'string_db': 1}, {'shared name': '9606.ENSP00000403343', 'string_db': 1}, {'shared name': '9606.ENSP00000385142', 'string_db': 1}, {'shared name': '9606.ENSP00000264036', 'string_db': 1}, {'shared name': '9606.ENSP00000283228', 'string_db': 1}, {'shared name': '9606.ENSP00000391381', 'string_db': 1}, {'shared name': '9606.ENSP00000406286', 'string_db': 1}, {'shared name': '9606.hsa-miR-548ae', 'string_db': 1}, {'shared name': '9606.ENSP00000479719', 'string_db': 1}, {'shared name': '9606.ENSP00000320347', 'string_db': 1}, {'shared name': '9606.ENSP00000264606', 'string_db': 1}, {'shared name': '9606.ENSP00000258962', 'string_db': 1}, {'shared name': '9606.ENSP00000337103', 'string_db': 1}, {'shared name': '9606.ENSP00000424566', 'string_db': 1}, {'shared name': '9606.ENSP00000270142', 'string_db': 1}, {'shared name': '9606.ENSP00000426503', 'string_db': 1}, {'shared name': '9606.ENSP00000272444', 'string_db': 1}, {'shared name': '9606.ENSP00000402257', 'string_db': 1}, {'shared name': '9606.ENSP00000298910', 'string_db': 1}, {'shared name': '9606.ENSP00000264276', 'string_db': 1}, {'shared name': '9606.ENSP00000341826', 'string_db': 1}, {'shared name': '9606.ENSP00000269601', 'string_db': 1}, {'shared name': '9606.ENSP00000345195', 'string_db': 1}, {'shared name': '9606.ENSP00000366070', 'string_db': 1}, {'shared name': '9606.ENSP00000294435', 'string_db': 1}, {'shared name': '9606.ENSP00000277120', 'string_db': 1}, {'shared name': '9606.ENSP00000480916', 'string_db': 1}, {'shared name': '9606.ENSP00000391269', 'string_db': 1}, {'shared name': '9606.ENSP00000357292', 'string_db': 1}, {'shared name': '9606.ENSP00000480012', 'string_db': 1}, {'shared name': '9606.ENSP00000303356', 'string_db': 1}, {'shared name': '9606.ENSP00000494538', 'string_db': 1}, {'shared name': '9606.ENSP00000323046', 'string_db': 1}, {'shared name': '9606.ENSP00000220592', 'string_db': 1}, {'shared name': '9606.ENSP00000053867', 'string_db': 1}, {'shared name': '9606.ENSP00000354111', 'string_db': 1}, {'shared name': '9606.ENSP00000387593', 'string_db': 1}, {'shared name': '9606.ENSP00000415676', 'string_db': 1}, {'shared name': '9606.ENSP00000282486', 'string_db': 1}, {'shared name': '9606.ENSP00000240185', 'string_db': 1}, {'shared name': '9606.ENSP00000391723', 'string_db': 1}, {'shared name': '9606.ENSP00000497806', 'string_db': 1}, {'shared name': '9606.ENSP00000351742', 'string_db': 1}, {'shared name': '9606.ENSP00000496959', 'string_db': 1}, {'shared name': '9606.ENSP00000376322', 'string_db': 1}, {'shared name': '9606.ENSP00000254488', 'string_db': 1}, {'shared name': '9606.ENSP00000335153', 'string_db': 1}, {'shared name': '9606.ENSP00000266594', 'string_db': 1}, {'shared name': '9606.ENSP00000261667', 'string_db': 1}, {'shared name': '9606.ENSP00000435466', 'string_db': 1}, {'shared name': '9606.ENSP00000263967', 'string_db': 1}, {'shared name': '9606.ENSP00000313829', 'string_db': 1}, {'shared name': '9606.ENSP00000487785', 'string_db': 1}, {'shared name': '9606.ENSP00000265381', 'string_db': 1}, {'shared name': '9606.ENSP00000410769', 'string_db': 1}, {'shared name': '9606.ENSP00000345997', 'string_db': 1}, {'shared name': '9606.ENSP00000261427', 'string_db': 1}, {'shared name': '9606.ENSP00000265379', 'string_db': 1}, {'shared name': '9606.ENSP00000257290', 'string_db': 1}, {'shared name': '9606.ENSP00000225916', 'string_db': 1}, {'shared name': '9606.ENSP00000246186', 'string_db': 1}, {'shared name': '9606.ENSP00000481593', 'string_db': 1}, {'shared name': '9606.ENSP00000500386', 'string_db': 1}, {'shared name': '9606.ENSP00000439937', 'string_db': 1}, {'shared name': '9606.ENSP00000313007', 'string_db': 1}, {'shared name': '9606.ENSP00000370571', 'string_db': 1}, {'shared name': '9606.ENSP00000295897', 'string_db': 1}, {'shared name': '9606.ENSP00000297261', 'string_db': 1}, {'shared name': '9606.ENSP00000362299', 'string_db': 1}, {'shared name': '9606.ENSP00000310561', 'string_db': 1}, {'shared name': '9606.ENSP00000295777', 'string_db': 1}, {'shared name': '9606.ENSP00000354346', 'string_db': 1}, {'shared name': '9606.ENSP00000345064', 'string_db': 1}, {'shared name': '9606.ENSP00000282928', 'string_db': 1}, {'shared name': '9606.ENSP00000387699', 'string_db': 1}, {'shared name': '9606.ENSP00000309457', 'string_db': 1}, {'shared name': '9606.ENSP00000258149', 'string_db': 1}, {'shared name': '9606.ENSP00000381488', 'string_db': 1}, {'shared name': '9606.ENSP00000364118', 'string_db': 1}, {'shared name': '9606.ENSP00000298596', 'string_db': 1}, {'shared name': '9606.ENSP00000272317', 'string_db': 1}, {'shared name': '9606.ENSP00000267890', 'string_db': 1}, {'shared name': '9606.ENSP00000497594', 'string_db': 1}, {'shared name': '9606.ENSP00000379287', 'string_db': 1}, {'shared name': '9606.ENSP00000497112', 'string_db': 1}, {'shared name': '9606.ENSP00000360660', 'string_db': 1}, {'shared name': '9606.ENSP00000397259', 'string_db': 1}, {'shared name': '9606.ENSP00000266682', 'string_db': 1}, {'shared name': '9606.ENSP00000477999', 'string_db': 1}, {'shared name': '9606.ENSP00000265351', 'string_db': 1}, {'shared name': '9606.ENSP00000282356', 'string_db': 1}, {'shared name': '9606.ENSP00000301727', 'string_db': 1}, {'shared name': '9606.ENSP00000351614', 'string_db': 1}, {'shared name': '9606.ENSP00000369127', 'string_db': 1}, {'shared name': '9606.ENSP00000313377', 'string_db': 1}, {'shared name': '9606.ENSP00000370589', 'string_db': 1}, {'shared name': '9606.ENSP00000339867', 'string_db': 1}, {'shared name': '9606.ENSP00000302814', 'string_db': 1}, {'shared name': '9606.ENSP00000228644', 'string_db': 1}, {'shared name': '9606.ENSP00000343690', 'string_db': 1}, {'shared name': '9606.ENSP00000410759', 'string_db': 1}, {'shared name': '9606.ENSP00000264498', 'string_db': 1}, {'shared name': '9606.ENSP00000356982', 'string_db': 1}, {'shared name': '9606.ENSP00000264255', 'string_db': 1}, {'shared name': '9606.NEAT1', 'string_db': 1}, {'shared name': '9606.ENSP00000436679', 'string_db': 1}, {'shared name': '9606.ENSP00000381382', 'string_db': 1}, {'shared name': '9606.FAM41C', 'string_db': 1}, {'shared name': '9606.ENSP00000379181', 'string_db': 1}, {'shared name': '9606.ENSP00000324806', 'string_db': 1}, {'shared name': '9606.ENSP00000435412', 'string_db': 1}, {'shared name': '9606.ENSP00000469455', 'string_db': 1}, {'shared name': '9606.ENSP00000436864', 'string_db': 1}, {'shared name': '9606.ENSP00000354335', 'string_db': 1}, {'shared name': '9606.ENSP00000401633', 'string_db': 1}, {'shared name': '9606.ENSP00000361405', 'string_db': 1}, {'shared name': '9606.ENSP00000386710', 'string_db': 1}, {'shared name': '9606.ENSP00000384625', 'string_db': 1}, {'shared name': '9606.ENSP00000265171', 'string_db': 1}, {'shared name': '9606.ENSP00000489189', 'string_db': 1}, {'shared name': '9606.ENSP00000259727', 'string_db': 1}, {'shared name': '9606.ENSP00000332549', 'string_db': 1}, {'shared name': '9606.ENSP00000340278', 'string_db': 1}, {'shared name': '9606.ENSP00000231004', 'string_db': 1}, {'shared name': '9606.ENSP00000343552', 'string_db': 1}, {'shared name': '9606.ENSP00000494750', 'string_db': 1}, {'shared name': '9606.ENSP00000260950', 'string_db': 1}, {'shared name': '9606.ENSP00000264033', 'string_db': 1}, {'shared name': '9606.ENSP00000369145', 'string_db': 1}, {'shared name': '9606.ENSP00000363822', 'string_db': 1}, {'shared name': '9606.ENSP00000409007', 'string_db': 1}, {'shared name': '9606.ENSP00000254108', 'string_db': 1}, {'shared name': '9606.ENSP00000354558', 'string_db': 1}, {'shared name': '9606.ENSP00000425561', 'string_db': 1}, {'shared name': '9606.ENSP00000482753', 'string_db': 1}, {'shared name': '9606.ENSP00000370119', 'string_db': 1}, {'shared name': '9606.ENSP00000355645', 'string_db': 1}, {'shared name': '9606.ENSP00000319591', 'string_db': 1}, {'shared name': '9606.ENSP00000354553', 'string_db': 1}, {'shared name': '9606.ENSP00000340292', 'string_db': 1}, {'shared name': '9606.ENSP00000370125', 'string_db': 1}, {'shared name': '9606.ENSP00000265113', 'string_db': 1}, {'shared name': '9606.ENSP00000375810', 'string_db': 1}, {'shared name': '9606.ENSP00000355657', 'string_db': 1}, {'shared name': '9606.ENSP00000352257', 'string_db': 1}, {'shared name': '9606.ENSP00000451828', 'string_db': 1}, {'shared name': '9606.ENSP00000382104', 'string_db': 1}, {'shared name': '9606.ENSP00000401371', 'string_db': 1}, {'shared name': '9606.ENSP00000222330', 'string_db': 1}, {'shared name': '9606.hsa-miR-559', 'string_db': 1}, {'shared name': '9606.ENSP00000308533', 'string_db': 1}, {'shared name': '9606.ENSP00000377681', 'string_db': 1}, {'shared name': '9606.hsa-miR-134-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000250113', 'string_db': 1}, {'shared name': '9606.ENSP00000221485', 'string_db': 1}, {'shared name': '9606.ENSP00000254719', 'string_db': 1}, {'shared name': '9606.ENSP00000222574', 'string_db': 1}, {'shared name': '9606.hsa-miR-433-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000352252', 'string_db': 1}, {'shared name': '9606.ENSP00000418994', 'string_db': 1}, {'shared name': '9606.hsa-miR-107', 'string_db': 1}, {'shared name': '9606.ENSP00000306920', 'string_db': 1}, {'shared name': '9606.ENSP00000364813', 'string_db': 1}, {'shared name': '9606.ENSP00000365458', 'string_db': 1}, {'shared name': '9606.ENSP00000352011', 'string_db': 1}, {'shared name': '9606.ENSP00000397297', 'string_db': 1}, {'shared name': '9606.hsa-miR-9-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000497217', 'string_db': 1}, {'shared name': '9606.ENSP00000343535', 'string_db': 1}, {'shared name': '9606.ENSP00000216200', 'string_db': 1}, {'shared name': '9606.ENSP00000425979', 'string_db': 1}, {'shared name': '9606.ENSP00000365576', 'string_db': 1}, {'shared name': '9606.ENSP00000419395', 'string_db': 1}, {'shared name': '9606.ENSP00000368966', 'string_db': 1}, {'shared name': '9606.ENSP00000492795', 'string_db': 1}, {'shared name': '9606.ENSP00000261366', 'string_db': 1}, {'shared name': '9606.ENSP00000395535', 'string_db': 1}, {'shared name': '9606.ENSP00000329918', 'string_db': 1}, {'shared name': '9606.hsa-miR-101-3p', 'string_db': 1}, {'shared name': '9606.hsa-miR-520c-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000291568', 'string_db': 1}, {'shared name': '9606.ENSP00000368970', 'string_db': 1}, {'shared name': '9606.ENSP00000262904', 'string_db': 1}, {'shared name': '9606.ENSP00000405327', 'string_db': 1}, {'shared name': '9606.ENSP00000467262', 'string_db': 1}, {'shared name': '9606.ENSP00000261367', 'string_db': 1}, {'shared name': '9606.ENSP00000371101', 'string_db': 1}, {'shared name': '9606.ENSP00000489829', 'string_db': 1}, {'shared name': '9606.ENSP00000392028', 'string_db': 1}, {'shared name': '9606.ENSP00000471191', 'string_db': 1}, {'shared name': '9606.ENSP00000221233', 'string_db': 1}, {'shared name': '9606.ENSP00000305702', 'string_db': 1}, {'shared name': '9606.ENSP00000481554', 'string_db': 1}, {'shared name': '9606.ENSP00000379616', 'string_db': 1}, {'shared name': '9606.ENSP00000467024', 'string_db': 1}, {'shared name': '9606.ENSP00000374049', 'string_db': 1}, {'shared name': '9606.ENSP00000355511', 'string_db': 1}, {'shared name': '9606.ENSP00000250003', 'string_db': 1}, {'shared name': '9606.ENSP00000332772', 'string_db': 1}, {'shared name': '9606.ENSP00000339835', 'string_db': 1}, {'shared name': '9606.ENSP00000362649', 'string_db': 1}, {'shared name': '9606.ENSP00000338629', 'string_db': 1}, {'shared name': '9606.ENSP00000360108', 'string_db': 1}, {'shared name': '9606.ENSP00000365227', 'string_db': 1}, {'shared name': '9606.ENSP00000353331', 'string_db': 1}, {'shared name': '9606.ENSP00000301587', 'string_db': 1}, {'shared name': '9606.ENSP00000222584', 'string_db': 1}, {'shared name': '9606.ENSP00000380602', 'string_db': 1}, {'shared name': '9606.ENSP00000259708', 'string_db': 1}, {'shared name': '9606.ENSP00000327513', 'string_db': 1}, {'shared name': '9606.ENSP00000447537', 'string_db': 1}, {'shared name': '9606.ENSP00000340820', 'string_db': 1}, {'shared name': '9606.ENSP00000246672', 'string_db': 1}, {'shared name': '9606.ENSP00000254722', 'string_db': 1}, {'shared name': '9606.ENSP00000311816', 'string_db': 1}, {'shared name': '9606.ENSP00000499501', 'string_db': 1}, {'shared name': '9606.ENSP00000320650', 'string_db': 1}, {'shared name': '9606.ENSP00000498653', 'string_db': 1}, {'shared name': '9606.hsa-miR-124-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000284240', 'string_db': 1}, {'shared name': '9606.ENSP00000361433', 'string_db': 1}, {'shared name': '9606.ENSP00000439585', 'string_db': 1}, {'shared name': '9606.ENSP00000316032', 'string_db': 1}, {'shared name': '9606.ENSP00000368984', 'string_db': 1}, {'shared name': '9606.hsa-miR-17-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000366563', 'string_db': 1}, {'shared name': '9606.ENSP00000419260', 'string_db': 1}, {'shared name': '9606.ENSP00000237014', 'string_db': 1}, {'shared name': '9606.AC007879.5', 'string_db': 1}, {'shared name': '9606.ENSP00000323148', 'string_db': 1}, {'shared name': '9606.ENSP00000446576', 'string_db': 1}, {'shared name': '9606.ENSP00000263431', 'string_db': 1}, {'shared name': '9606.ENSP00000355747', 'string_db': 1}, {'shared name': '9606.ENSP00000405674', 'string_db': 1}, {'shared name': '9606.ENSP00000354416', 'string_db': 1}, {'shared name': '9606.ENSP00000338512', 'string_db': 1}, {'shared name': '9606.ENSP00000356953', 'string_db': 1}, {'shared name': '9606.ENSP00000399376', 'string_db': 1}, {'shared name': '9606.ENSP00000359489', 'string_db': 1}, {'shared name': '9606.ENSP00000298556', 'string_db': 1}, {'shared name': '9606.ENSP00000355865', 'string_db': 1}, {'shared name': '9606.ENSP00000226382', 'string_db': 1}, {'shared name': '9606.ENSP00000355741', 'string_db': 1}, {'shared name': '9606.ENSP00000346483', 'string_db': 1}, {'shared name': '9606.ENSP00000246548', 'string_db': 1}, {'shared name': '9606.ENSP00000304643', 'string_db': 1}, {'shared name': '9606.ENSP00000373413', 'string_db': 1}, {'shared name': '9606.ENSP00000254810', 'string_db': 1}, {'shared name': '9606.ENSP00000376921', 'string_db': 1}, {'shared name': '9606.ENSP00000302100', 'string_db': 1}, {'shared name': '9606.ENSP00000350170', 'string_db': 1}, {'shared name': '9606.ENSP00000252996', 'string_db': 1}, {'shared name': '9606.hsa-miR-29a-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000366330', 'string_db': 1}, {'shared name': '9606.ENSP00000248600', 'string_db': 1}, {'shared name': '9606.ENSP00000216218', 'string_db': 1}, {'shared name': '9606.ENSP00000306138', 'string_db': 1}, {'shared name': '9606.ENSP00000288943', 'string_db': 1}, {'shared name': '9606.ENSP00000202625', 'string_db': 1}, {'shared name': '9606.ENSP00000349748', 'string_db': 1}, {'shared name': '9606.ENSP00000245451', 'string_db': 1}, {'shared name': '9606.ENSP00000366452', 'string_db': 1}, {'shared name': '9606.ENSP00000360231', 'string_db': 1}, {'shared name': '9606.hsa-miR-93-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000471851', 'string_db': 1}, {'shared name': '9606.ENSP00000364270', 'string_db': 1}, {'shared name': '9606.ENSP00000340125', 'string_db': 1}, {'shared name': '9606.ENSP00000302216', 'string_db': 1}, {'shared name': '9606.ENSP00000343515', 'string_db': 1}, {'shared name': '9606.ENSP00000221801', 'string_db': 1}, {'shared name': '9606.ENSP00000501150', 'string_db': 1}, {'shared name': '9606.ENSP00000413035', 'string_db': 1}, {'shared name': '9606.ENSP00000265164', 'string_db': 1}, {'shared name': '9606.ENSP00000359804', 'string_db': 1}, {'shared name': '9606.ENSP00000259711', 'string_db': 1}, {'shared name': '9606.ENSP00000415579', 'string_db': 1}, {'shared name': '9606.ENSP00000306253', 'string_db': 1}, {'shared name': '9606.ENSP00000273320', 'string_db': 1}, {'shared name': '9606.ENSP00000305288', 'string_db': 1}, {'shared name': '9606.ENSP00000418721', 'string_db': 1}, {'shared name': '9606.ENSP00000458663', 'string_db': 1}, {'shared name': '9606.ENSP00000307900', 'string_db': 1}, {'shared name': '9606.ENSP00000329357', 'string_db': 1}, {'shared name': '9606.ENSP00000496695', 'string_db': 1}, {'shared name': '9606.ENSP00000318585', 'string_db': 1}, {'shared name': '9606.ENSP00000418960', 'string_db': 1}, {'shared name': '9606.ENSP00000478249', 'string_db': 1}, {'shared name': '9606.ENSP00000303540', 'string_db': 1}, {'shared name': '9606.ENSP00000393379', 'string_db': 1}, {'shared name': '9606.ENSP00000240316', 'string_db': 1}, {'shared name': '9606.ENSP00000457205', 'string_db': 1}, {'shared name': '9606.ENSP00000260386', 'string_db': 1}, {'shared name': '9606.ENSP00000288135', 'string_db': 1}, {'shared name': '9606.ENSP00000368884', 'string_db': 1}, {'shared name': '9606.ENSP00000458537', 'string_db': 1}, {'shared name': '9606.ENSP00000454852', 'string_db': 1}, {'shared name': '9606.ENSP00000338173', 'string_db': 1}, {'shared name': '9606.ENSP00000285667', 'string_db': 1}, {'shared name': '9606.ENSP00000380070', 'string_db': 1}, {'shared name': '9606.ENSP00000368881', 'string_db': 1}, {'shared name': '9606.ENSP00000359019', 'string_db': 1}, {'shared name': '9606.ENSP00000477715', 'string_db': 1}, {'shared name': '9606.ENSP00000417901', 'string_db': 1}, {'shared name': '9606.ENSP00000221930', 'string_db': 1}, {'shared name': '9606.ENSP00000490107', 'string_db': 1}, {'shared name': '9606.ENSP00000332194', 'string_db': 1}, {'shared name': '9606.ENSP00000219197', 'string_db': 1}, {'shared name': '9606.ENSP00000180166', 'string_db': 1}, {'shared name': '9606.ENSP00000381185', 'string_db': 1}, {'shared name': '9606.ENSP00000316842', 'string_db': 1}, {'shared name': '9606.ENSP00000254079', 'string_db': 1}, {'shared name': '9606.ENSP00000296271', 'string_db': 1}, {'shared name': '9606.ENSP00000362300', 'string_db': 1}, {'shared name': '9606.ENSP00000264867', 'string_db': 1}, {'shared name': '9606.ENSP00000349298', 'string_db': 1}, {'shared name': '9606.ENSP00000311032', 'string_db': 1}, {'shared name': '9606.ENSP00000295900', 'string_db': 1}, {'shared name': '9606.ENSP00000293288', 'string_db': 1}, {'shared name': '9606.SNORD58B', 'string_db': 1}, {'shared name': '9606.hsa-miR-34c-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000306561', 'string_db': 1}, {'shared name': '9606.ENSP00000500990', 'string_db': 1}, {'shared name': '9606.ENSP00000256261', 'string_db': 1}, {'shared name': '9606.ENSP00000295589', 'string_db': 1}, {'shared name': '9606.ENSP00000419081', 'string_db': 1}, {'shared name': '9606.ENSP00000475626', 'string_db': 1}, {'shared name': '9606.ENSP00000479667', 'string_db': 1}, {'shared name': '9606.ENSP00000233813', 'string_db': 1}, {'shared name': '9606.hsa-miR-1225-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000406209', 'string_db': 1}, {'shared name': '9606.ENSP00000455698', 'string_db': 1}, {'shared name': '9606.ENSP00000348645', 'string_db': 1}, {'shared name': '9606.ENSP00000321835', 'string_db': 1}, {'shared name': '9606.ENSP00000216127', 'string_db': 1}, {'shared name': '9606.ENSP00000371133', 'string_db': 1}, {'shared name': '9606.ENSP00000369863', 'string_db': 1}, {'shared name': '9606.ENSP00000261601', 'string_db': 1}, {'shared name': '9606.ENSP00000300213', 'string_db': 1}, {'shared name': '9606.ENSP00000225504', 'string_db': 1}, {'shared name': '9606.ENSP00000264552', 'string_db': 1}, {'shared name': '9606.ENSP00000308610', 'string_db': 1}, {'shared name': '9606.ENSP00000495360', 'string_db': 1}, {'shared name': '9606.ENSP00000421339', 'string_db': 1}, {'shared name': '9606.ENSP00000240100', 'string_db': 1}, {'shared name': '9606.ENSP00000381057', 'string_db': 1}, {'shared name': '9606.ENSP00000334002', 'string_db': 1}, {'shared name': '9606.ENSP00000411355', 'string_db': 1}, {'shared name': '9606.ENSP00000333277', 'string_db': 1}, {'shared name': '9606.ENSP00000295910', 'string_db': 1}, {'shared name': '9606.ENSP00000438574', 'string_db': 1}, {'shared name': '9606.ENSP00000340467', 'string_db': 1}, {'shared name': '9606.ENSP00000377372', 'string_db': 1}, {'shared name': '9606.ENSP00000477141', 'string_db': 1}, {'shared name': '9606.ENSP00000463653', 'string_db': 1}, {'shared name': '9606.ENSP00000360493', 'string_db': 1}, {'shared name': '9606.ENSP00000310036', 'string_db': 1}, {'shared name': '9606.ENSP00000385410', 'string_db': 1}, {'shared name': '9606.ENSP00000249396', 'string_db': 1}, {'shared name': '9606.ENSP00000294702', 'string_db': 1}, {'shared name': '9606.ENSP00000357583', 'string_db': 1}, {'shared name': '9606.ENSP00000349168', 'string_db': 1}, {'shared name': '9606.ENSP00000276654', 'string_db': 1}, {'shared name': '9606.ENSP00000215832', 'string_db': 1}, {'shared name': '9606.ENSP00000216254', 'string_db': 1}, {'shared name': '9606.ENSP00000261731', 'string_db': 1}, {'shared name': '9606.ENSP00000324560', 'string_db': 1}, {'shared name': '9606.ENSP00000362680', 'string_db': 1}, {'shared name': '9606.ENSP00000346694', 'string_db': 1}, {'shared name': '9606.ENSP00000353414', 'string_db': 1}, {'shared name': '9606.ENSP00000437125', 'string_db': 1}, {'shared name': '9606.ENSP00000409279', 'string_db': 1}, {'shared name': '9606.ENSP00000349722', 'string_db': 1}, {'shared name': '9606.ENSP00000350386', 'string_db': 1}, {'shared name': '9606.ENSP00000283195', 'string_db': 1}, {'shared name': '9606.ENSP00000339004', 'string_db': 1}, {'shared name': '9606.ENSP00000264689', 'string_db': 1}, {'shared name': '9606.ENSP00000321606', 'string_db': 1}, {'shared name': '9606.ENSP00000369996', 'string_db': 1}, {'shared name': '9606.ENSP00000414856', 'string_db': 1}, {'shared name': '9606.ENSP00000323588', 'string_db': 1}, {'shared name': '9606.ENSP00000248975', 'string_db': 1}, {'shared name': '9606.ENSP00000181796', 'string_db': 1}, {'shared name': '9606.ENSP00000371267', 'string_db': 1}, {'shared name': '9606.ENSP00000378338', 'string_db': 1}, {'shared name': '9606.ENSP00000370058', 'string_db': 1}, {'shared name': '9606.ENSP00000239231', 'string_db': 1}, {'shared name': '9606.ENSP00000315299', 'string_db': 1}, {'shared name': '9606.ENSP00000378699', 'string_db': 1}, {'shared name': '9606.ENSP00000415822', 'string_db': 1}, {'shared name': '9606.ENSP00000333262', 'string_db': 1}, {'shared name': '9606.ENSP00000370193', 'string_db': 1}, {'shared name': '9606.ENSP00000483254', 'string_db': 1}, {'shared name': '9606.ENSP00000422435', 'string_db': 1}, {'shared name': '9606.ENSP00000482169', 'string_db': 1}, {'shared name': '9606.ENSP00000258415', 'string_db': 1}, {'shared name': '9606.ENSP00000380432', 'string_db': 1}, {'shared name': '9606.ENSP00000349156', 'string_db': 1}, {'shared name': '9606.ENSP00000253408', 'string_db': 1}, {'shared name': '9606.ENSP00000384474', 'string_db': 1}, {'shared name': '9606.HTT-AS', 'string_db': 1}, {'shared name': '9606.ENSP00000358784', 'string_db': 1}, {'shared name': '9606.ENSP00000265195', 'string_db': 1}, {'shared name': '9606.ENSP00000440045', 'string_db': 1}, {'shared name': '9606.ENSP00000378476', 'string_db': 1}, {'shared name': '9606.ENSP00000362205', 'string_db': 1}, {'shared name': '9606.ENSP00000252934', 'string_db': 1}, {'shared name': '9606.ENSP00000250495', 'string_db': 1}, {'shared name': '9606.ENSP00000340330', 'string_db': 1}, {'shared name': '9606.ENSP00000247225', 'string_db': 1}, {'shared name': '9606.ENSP00000310129', 'string_db': 1}, {'shared name': '9606.ENSP00000360266', 'string_db': 1}, {'shared name': '9606.ENSP00000296755', 'string_db': 1}, {'shared name': '9606.ENSP00000359719', 'string_db': 1}, {'shared name': '9606.ENSP00000499387', 'string_db': 1}, {'shared name': '9606.ENSP00000358089', 'string_db': 1}, {'shared name': '9606.ENSP00000230321', 'string_db': 1}, {'shared name': '9606.ENSP00000377936', 'string_db': 1}, {'shared name': '9606.ENSP00000329403', 'string_db': 1}, {'shared name': '9606.ENSP00000216144', 'string_db': 1}, {'shared name': '9606.ENSP00000314173', 'string_db': 1}, {'shared name': '9606.ENSP00000430241', 'string_db': 1}, {'shared name': '9606.ENSP00000319060', 'string_db': 1}, {'shared name': '9606.ENSP00000354859', 'string_db': 1}, {'shared name': '9606.ENSP00000430000', 'string_db': 1}, {'shared name': '9606.ENSP00000325863', 'string_db': 1}, {'shared name': '9606.ENSP00000258302', 'string_db': 1}, {'shared name': '9606.ENSP00000476119', 'string_db': 1}, {'shared name': '9606.ENSP00000366488', 'string_db': 1}, {'shared name': '9606.ENSP00000481848', 'string_db': 1}, {'shared name': '9606.ENSP00000234389', 'string_db': 1}, {'shared name': '9606.ENSP00000437256', 'string_db': 1}, {'shared name': '9606.ENSP00000279488', 'string_db': 1}, {'shared name': '9606.ENSP00000363435', 'string_db': 1}, {'shared name': '9606.ENSP00000366249', 'string_db': 1}, {'shared name': '9606.ENSP00000398632', 'string_db': 1}, {'shared name': '9606.ENSP00000477455', 'string_db': 1}, {'shared name': '9606.ENSP00000254976', 'string_db': 1}, {'shared name': '9606.ENSP00000316357', 'string_db': 1}, {'shared name': '9606.ENSP00000216714', 'string_db': 1}, {'shared name': '9606.ENSP00000347896', 'string_db': 1}, {'shared name': '9606.ENSP00000269305', 'string_db': 1}, {'shared name': '9606.ENSP00000320821', 'string_db': 1}, {'shared name': '9606.ENSP00000264657', 'string_db': 1}, {'shared name': '9606.ENSP00000353646', 'string_db': 1}, {'shared name': '9606.ENSP00000397563', 'string_db': 1}, {'shared name': '9606.ENSP00000263205', 'string_db': 1}, {'shared name': '9606.ENSP00000353767', 'string_db': 1}, {'shared name': '9606.ENSP00000353864', 'string_db': 1}, {'shared name': '9606.ENSP00000345347', 'string_db': 1}, {'shared name': '9606.ENSP00000265081', 'string_db': 1}, {'shared name': '9606.ENSP00000318635', 'string_db': 1}, {'shared name': '9606.ENSP00000408617', 'string_db': 1}, {'shared name': '9606.ENSP00000364639', 'string_db': 1}, {'shared name': '9606.ENSP00000223129', 'string_db': 1}, {'shared name': '9606.ENSP00000370744', 'string_db': 1}, {'shared name': '9606.ENSP00000307786', 'string_db': 1}, {'shared name': '9606.FMR1-AS1', 'string_db': 1}, {'shared name': '9606.ENSP00000428426', 'string_db': 1}, {'shared name': '9606.ENSP00000305480', 'string_db': 1}, {'shared name': '9606.ENSP00000291295', 'string_db': 1}, {'shared name': '9606.ENSP00000453858', 'string_db': 1}, {'shared name': '9606.ENSP00000245255', 'string_db': 1}, {'shared name': '9606.ENSP00000261523', 'string_db': 1}, {'shared name': '9606.ENSP00000377015', 'string_db': 1}, {'shared name': '9606.ENSP00000453170', 'string_db': 1}, {'shared name': '9606.ENSP00000244061', 'string_db': 1}, {'shared name': '9606.ENSP00000293190', 'string_db': 1}, {'shared name': '9606.ENSP00000276079', 'string_db': 1}, {'shared name': '9606.ENSP00000269143', 'string_db': 1}, {'shared name': '9606.ENSP00000355028', 'string_db': 1}, {'shared name': '9606.ENSP00000370083', 'string_db': 1}, {'shared name': '9606.ENSP00000268058', 'string_db': 1}, {'shared name': '9606.ENSP00000263209', 'string_db': 1}, {'shared name': '9606.ENSP00000278379', 'string_db': 1}, {'shared name': '9606.ENSP00000347184', 'string_db': 1}, {'shared name': '9606.hsa-miR-150-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000365601', 'string_db': 1}, {'shared name': '9606.ENSP00000307604', 'string_db': 1}, {'shared name': '9606.ENSP00000357206', 'string_db': 1}, {'shared name': '9606.hsa-miR-9-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000361021', 'string_db': 1}, {'shared name': '9606.ENSP00000334463', 'string_db': 1}, {'shared name': '9606.ENSP00000348056', 'string_db': 1}, {'shared name': '9606.ENSP00000386786', 'string_db': 1}, {'shared name': '9606.ENSP00000357565', 'string_db': 1}, {'shared name': '9606.ENSP00000332706', 'string_db': 1}, {'shared name': '9606.ENSP00000296526', 'string_db': 1}, {'shared name': '9606.ENSP00000458065', 'string_db': 1}, {'shared name': '9606.ENSP00000385675', 'string_db': 1}, {'shared name': '9606.ENSP00000305422', 'string_db': 1}, {'shared name': '9606.ENSP00000359727', 'string_db': 1}, {'shared name': '9606.ENSP00000362578', 'string_db': 1}, {'shared name': '9606.ENSP00000365861', 'string_db': 1}, {'shared name': '9606.ENSP00000356231', 'string_db': 1}, {'shared name': '9606.ENSP00000306330', 'string_db': 1}, {'shared name': '9606.ENSP00000361027', 'string_db': 1}, {'shared name': '9606.ENSP00000378487', 'string_db': 1}, {'shared name': '9606.ENSP00000431162', 'string_db': 1}, {'shared name': '9606.hsa-miR-548g-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000371729', 'string_db': 1}, {'shared name': '9606.hsa-miR-320d', 'string_db': 1}, {'shared name': '9606.ENSP00000304331', 'string_db': 1}, {'shared name': '9606.ENSP00000013807', 'string_db': 1}, {'shared name': '9606.ENSP00000435637', 'string_db': 1}, {'shared name': '9606.ENSP00000385216', 'string_db': 1}, {'shared name': '9606.ENSP00000346671', 'string_db': 1}, {'shared name': '9606.ENSP00000427900', 'string_db': 1}, {'shared name': '9606.MIR17HG', 'string_db': 1}, {'shared name': '9606.ENSP00000350928', 'string_db': 1}, {'shared name': '9606.ENSP00000360280', 'string_db': 1}, {'shared name': '9606.AC006129.1', 'string_db': 1}, {'shared name': '9606.ENSP00000219548', 'string_db': 1}, {'shared name': '9606.ENSP00000282753', 'string_db': 1}, {'shared name': '9606.ENSP00000216727', 'string_db': 1}, {'shared name': '9606.ENSP00000284262', 'string_db': 1}, {'shared name': '9606.ENSP00000261837', 'string_db': 1}, {'shared name': '9606.ATXN8OS', 'string_db': 1}, {'shared name': '9606.ENSP00000368314', 'string_db': 1}, {'shared name': '9606.ENSP00000374552', 'string_db': 1}, {'shared name': '9606.ENSP00000256079', 'string_db': 1}, {'shared name': '9606.hsa-miR-128-3p', 'string_db': 1}, {'shared name': '9606.hsa-miR-4305', 'string_db': 1}, {'shared name': '9606.ENSP00000315137', 'string_db': 1}, {'shared name': '9606.ENSP00000347997', 'string_db': 1}, {'shared name': '9606.ENSP00000261712', 'string_db': 1}, {'shared name': '9606.ENSP00000376753', 'string_db': 1}, {'shared name': '9606.ENSP00000406549', 'string_db': 1}, {'shared name': '9606.ENSP00000317333', 'string_db': 1}, {'shared name': '9606.ENSP00000399851', 'string_db': 1}, {'shared name': '9606.ENSP00000369531', 'string_db': 1}, {'shared name': '9606.ENSP00000358886', 'string_db': 1}, {'shared name': '9606.ENSP00000383042', 'string_db': 1}, {'shared name': '9606.ENSP00000403397', 'string_db': 1}, {'shared name': '9606.ENSP00000359978', 'string_db': 1}, {'shared name': '9606.ENSP00000374455', 'string_db': 1}, {'shared name': '9606.ENSP00000429763', 'string_db': 1}, {'shared name': '9606.ENSP00000438886', 'string_db': 1}, {'shared name': '9606.hsa-miR-379-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000262367', 'string_db': 1}, {'shared name': '9606.ENSP00000353072', 'string_db': 1}, {'shared name': '9606.ENSP00000376637', 'string_db': 1}, {'shared name': '9606.ENSP00000369895', 'string_db': 1}, {'shared name': '9606.ENSP00000376197', 'string_db': 1}, {'shared name': '9606.ENSP00000462298', 'string_db': 1}, {'shared name': '9606.ENSP00000262241', 'string_db': 1}, {'shared name': '9606.ENSP00000355370', 'string_db': 1}, {'shared name': '9606.ENSP00000225577', 'string_db': 1}, {'shared name': '9606.ENSP00000333363', 'string_db': 1}, {'shared name': '9606.ENSP00000376077', 'string_db': 1}, {'shared name': '9606.ENSP00000347170', 'string_db': 1}, {'shared name': '9606.ENSP00000358525', 'string_db': 1}, {'shared name': '9606.ENSP00000302961', 'string_db': 1}, {'shared name': '9606.ENSP00000324173', 'string_db': 1}, {'shared name': '9606.ENSP00000309591', 'string_db': 1}, {'shared name': '9606.ENSP00000419782', 'string_db': 1}, {'shared name': '9606.ENSP00000345571', 'string_db': 1}, {'shared name': '9606.ENSP00000418572', 'string_db': 1}, {'shared name': '9606.ENSP00000495557', 'string_db': 1}, {'shared name': '9606.ENSP00000327687', 'string_db': 1}, {'shared name': '9606.ENSP00000309595', 'string_db': 1}, {'shared name': '9606.ENSP00000365514', 'string_db': 1}, {'shared name': '9606.ENSP00000361930', 'string_db': 1}, {'shared name': '9606.ENSP00000270225', 'string_db': 1}, {'shared name': '9606.ENSP00000290649', 'string_db': 1}, {'shared name': '9606.ENSP00000362485', 'string_db': 1}, {'shared name': '9606.ENSP00000309477', 'string_db': 1}, {'shared name': '9606.ENSP00000386458', 'string_db': 1}, {'shared name': '9606.ENSP00000345575', 'string_db': 1}, {'shared name': '9606.ENSP00000388638', 'string_db': 1}, {'shared name': '9606.ENSP00000346534', 'string_db': 1}, {'shared name': '9606.ENSP00000270349', 'string_db': 1}, {'shared name': '9606.ENSP00000368332', 'string_db': 1}, {'shared name': '9606.ENSP00000212015', 'string_db': 1}, {'shared name': '9606.ENSP00000405965', 'string_db': 1}, {'shared name': '9606.ENSP00000284981', 'string_db': 1}, {'shared name': '9606.ENSP00000345206', 'string_db': 1}, {'shared name': '9606.ENSP00000282561', 'string_db': 1}, {'shared name': '9606.ENSP00000493382', 'string_db': 1}, {'shared name': '9606.ENSP00000498255', 'string_db': 1}, {'shared name': '9606.ENSP00000263025', 'string_db': 1}, {'shared name': '9606.ENSP00000478877', 'string_db': 1}, {'shared name': '9606.hsa-miR-548w', 'string_db': 1}, {'shared name': '9606.hsa-miR-133b', 'string_db': 1}, {'shared name': '9606.ENSP00000462745', 'string_db': 1}, {'shared name': '9606.ENSP00000352516', 'string_db': 1}, {'shared name': '9606.ENSP00000358518', 'string_db': 1}, {'shared name': '9606.ENSP00000405388', 'string_db': 1}, {'shared name': '9606.ENSP00000268712', 'string_db': 1}, {'shared name': '9606.ENSP00000359085', 'string_db': 1}, {'shared name': '9606.ENSP00000360609', 'string_db': 1}, {'shared name': '9606.ENSP00000362131', 'string_db': 1}, {'shared name': '9606.hsa-miR-659-3p', 'string_db': 1}, {'shared name': '9606.ENSP00000499582', 'string_db': 1}, {'shared name': '9606.ENSP00000422185', 'string_db': 1}, {'shared name': '9606.ENSP00000454229', 'string_db': 1}, {'shared name': '9606.ENSP00000221742', 'string_db': 1}, {'shared name': '9606.ENSP00000489407', 'string_db': 1}, {'shared name': '9606.ENSP00000359506', 'string_db': 1}, {'shared name': '9606.ENSP00000444433', 'string_db': 1}, {'shared name': '9606.ENSP00000414303', 'string_db': 1}, {'shared name': '9606.ENSP00000391803', 'string_db': 1}, {'shared name': '9606.ENSP00000379350', 'string_db': 1}, {'shared name': '9606.ENSP00000399403', 'string_db': 1}, {'shared name': '9606.hsa-miR-106a-5p', 'string_db': 1}, {'shared name': '9606.ENSP00000379915', 'string_db': 1}, {'shared name': '9606.ENSP00000254322', 'string_db': 1}, {'shared name': '9606.ENSP00000269228', 'string_db': 1}, {'shared name': '9606.ENSP00000403888', 'string_db': 1}, {'shared name': '9606.ENSP00000306894', 'string_db': 1}, {'shared name': '9606.ENSP00000254325', 'string_db': 1}, {'shared name': '9606.ENSP00000307863', 'string_db': 1}]}
2024-06-20 16:48:47,307 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:48:47,308 [DEBUG] py4...: ǀReturning 'cyrest_put': ''
2024-06-20 16:48:47,309 [DEBUG] py4...: Returning 'load_table_data': 'Success: Data loaded in defaultnode table'
2024-06-20 16:48:47,309 [DEBUG] py4...: --------------------
2024-06-20 16:48:47,310 [DEBUG] py4...: Calling delete_table_column('row.names')
2024-06-20 16:48:47,310 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,311 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:47,312 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:47,320 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 42582
}
],
 "errors":[]
}
2024-06-20 16:48:47,321 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 42582}]
2024-06-20 16:48:47,321 [DEBUG] py4...: ǀReturning 'get_network_suid': 42582
2024-06-20 16:48:47,322 [DEBUG] py4...: ǀCalling cyrest_delete('networks/42582/tables/defaultnode/columns/row.names', base_url='http://127.0.0.1:1234/v1', require_json=False)
2024-06-20 16:48:47,322 [DEBUG] py4...: ǀHTTP DELETE(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns/row.names)
2024-06-20 16:48:47,328 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:48:47,329 [DEBUG] py4...: ǀReturning 'cyrest_delete': ''
2024-06-20 16:48:47,329 [DEBUG] py4...: Returning 'delete_table_column': ''
2024-06-20 16:48:47,329 [DEBUG] py4...: --------------------
2024-06-20 16:48:51,205 [DEBUG] py4...: Calling create_column_filter(filter_name='Columns without canonical name', column='stringdb::canonical name', criterion='', predicate='DOES_NOT_CONTAIN')
2024-06-20 16:48:51,206 [DEBUG] py4...: ǀCalling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,206 [DEBUG] py4...: ǀǀCalling get_network_suid(None)
2024-06-20 16:48:51,206 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,206 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:51,215 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 42582
}
],
 "errors":[]
}
2024-06-20 16:48:51,216 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 42582}]
2024-06-20 16:48:51,216 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:51,217 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:42582"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,217 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:42582'}
2024-06-20 16:48:51,224 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:51,225 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:48:51,226 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:48:51,226 [DEBUG] py4...: ǀCalling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,226 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,226 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,228 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:51,235 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 42582
}
],
 "errors":[]
}
2024-06-20 16:48:51,236 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 42582}]
2024-06-20 16:48:51,236 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:51,237 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,237 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns)
2024-06-20 16:48:51,242 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false}]
2024-06-20 16:48:51,243 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:51,243 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'stringdb::canonical name', 'display name', 'stringdb::full name', 'stringdb::database identifier', 'stringdb::description', '@id', 'stringdb::namespace', 'stringdb::node type', 'query term', 'stringdb::sequence', 'stringdb::species', 'stringdb::imageurl', 'stringdb::STRING style', 'stringdb::enhancedLabel Passthrough', 'compartment::cytoskeleton', 'compartment::cytosol', 'compartment::endoplasmic reticulum', 'compartment::endosome', 'compartment::extracellular', 'compartment::golgi apparatus', 'compartment::lysosome', 'compartment::mitochondrion', 'compartment::nucleus', 'compartment::peroxisome', 'compartment::plasma membrane', 'stringdb::structures', 'target::development level', 'target::family', 'tissue::adrenal gland', 'tissue::blood', 'tissue::bone', 'tissue::bone marrow', 'tissue::eye', 'tissue::gall bladder', 'tissue::heart', 'tissue::intestine', 'tissue::kidney', 'tissue::liver', 'tissue::lung', 'tissue::muscle', 'tissue::nervous system', 'tissue::pancreas', 'tissue::saliva', 'tissue::skin', 'tissue::spleen', 'tissue::stomach', 'tissue::thyroid gland', 'tissue::urine', 'stringdb::disease score', 'string_db']
2024-06-20 16:48:51,244 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,244 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,244 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:48:51,248 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:48:51,248 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:48:51,249 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:48:51,249 [DEBUG] py4...: ǀCalling cyrest_post('commands/filter/create', body={'name': 'Columns without canonical name', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "stringdb::canonical name", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,249 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'Columns without canonical name', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "", "columnName": "stringdb::canonical name", "predicate": "DOES_NOT_CONTAIN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}', 'apply': True}
2024-06-20 16:48:51,327 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:51,327 [DEBUG] py4...: ǀReturning 'cyrest_post': {'data': {}, 'errors': []}
2024-06-20 16:48:51,328 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,328 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,328 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:48:51,334 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:48:51,334 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:48:51,335 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:48:51,335 [DEBUG] py4...: ǀCalling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,336 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,336 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,336 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:51,344 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 42582
}
],
 "errors":[]
}
2024-06-20 16:48:51,345 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 42582}]
2024-06-20 16:48:51,345 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:51,345 [DEBUG] py4...: ǀǀCalling get_selected_node_count(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,345 [DEBUG] py4...: ǀǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,345 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,346 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:51,353 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:51,354 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:51,354 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:51,354 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,355 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:51,361 [DEBUG] py4...: ǀǀǀOK[200], content: [44060,44075,44090,43103,44132,44141,44153,44165,44228,43349,44378,44420,44441,43421,44453,43433,43442,43460,44486,43520,44549,43529,43535,43571,44612,43670,44696,43685,42767,42824,44891,43871,42866,43892,42875,42878,42884,44936,43913,42905,42911,43988,42965,44003,44021]
2024-06-20 16:48:51,361 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [44060, 44075, 44090, 43103, 44132, 44141, 44153, 44165, 44228, 43349, 44378, 44420, 44441, 43421, 44453, 43433, 43442, 43460, 44486, 43520, 44549, 43529, 43535, 43571, 44612, 43670, 44696, 43685, 42767, 42824, 44891, 43871, 42866, 43892, 42875, 42878, 42884, 44936, 43913, 42905, 42911, 43988, 42965, 44003, 44021]
2024-06-20 16:48:51,362 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 45
2024-06-20 16:48:51,362 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/42582/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,362 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:51,369 [DEBUG] py4...: ǀǀOK[200], content: [44060,44075,44090,43103,44132,44141,44153,44165,44228,43349,44378,44420,44441,43421,44453,43433,43442,43460,44486,43520,44549,43529,43535,43571,44612,43670,44696,43685,42767,42824,44891,43871,42866,43892,42875,42878,42884,44936,43913,42905,42911,43988,42965,44003,44021]
2024-06-20 16:48:51,370 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [44060, 44075, 44090, 43103, 44132, 44141, 44153, 44165, 44228, 43349, 44378, 44420, 44441, 43421, 44453, 43433, 43442, 43460, 44486, 43520, 44549, 43529, 43535, 43571, 44612, 43670, 44696, 43685, 42767, 42824, 44891, 43871, 42866, 43892, 42875, 42878, 42884, 44936, 43913, 42905, 42911, 43988, 42965, 44003, 44021]
2024-06-20 16:48:51,370 [DEBUG] py4...: ǀǀCalling get_table_columns('node', ['name'], 'default', 42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,371 [DEBUG] py4...: ǀǀǀCalling get_network_suid(42582, 'http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,371 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,371 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:51,376 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:51,378 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:51,379 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:51,379 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,380 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,380 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,380 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:51,387 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:51,387 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:51,387 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:51,387 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,388 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns)
2024-06-20 16:48:51,394 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false}]
2024-06-20 16:48:51,396 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:51,396 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'stringdb::canonical name': 'String', 'display name': 'String', 'stringdb::full name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', '@id': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'query term': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::imageurl': 'String', 'stringdb::STRING style': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'stringdb::disease score': 'Double', 'string_db': 'Integer'}
2024-06-20 16:48:51,398 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,398 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns/SUID)
2024-06-20 16:48:51,404 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[44033,43010,44036,43013,44039,43016,44042,43019,44045,43022,44048,43025,44051,43028,44054,43031,44057,43034,44060,43037,44063,43040,44066,43043,44069,43046,44072,43049,44075,43052,44078,43055,44081,43058,44084,43061,44087,43064,44090,43067,44093,43070,44096,43073,44099,43076,44102,43079,44105,43082,44108,43085,44111,43088,44114,43091,44117,43094,44120,43097,44123,43100,44126,43103,44129,43106,44132,43109,44135,43112,44138,43115,44141,43118,44144,43121,44147,43124,44150,43127,44153,43130,44156,43133,44159,43136,44162,43139,44165,43142,44168,43145,44171,43148,44174,43151,44177,43154,44180,43157,44183,43160,44186,43163,44189,43166,44192,43169,44195,43172,44198,43175,44201,43178,44204,43181,44207,43184,44210,43187,44213,43190,44216,43193,44219,43196,44222,43199,44225,43202,44228,43205,44231,43208,44234,43211,44237,43214,44240,43217,44243,43220,44246,43223,44249,43226,44252,43229,44255,43232,44258,43235,44261,43238,44264,43241,44267,43244,44270,43247,44273,43250,44276,43253,44279,43256,44282,43259,44285,43262,44288,43265,44291,43268,44294,43271,44297,43274,44300,43277,44303,43280,44306,43283,44309,43286,44312,43289,44315,43292,44318,43295,44321,43298,44324,43301,44327,43304,44330,43307,44333,43310,44336,43313,44339,43316,44342,43319,44345,43322,44348,43325,44351,43328,44354,43331,44357,43334,44360,43337,44363,43340,44366,43343,44369,43346,44372,43349,44375,43352,44378,43355,44381,43358,44384,43361,44387,43364,44390,43367,44393,43370,44396,43373,44399,43376,44402,43379,44405,43382,44408,43385,44411,43388,44414,43391,44417,43394,44420,43397,44423,43400,44426,43403,44429,43406,44432,43409,44435,43412,44438,43415,44441,43418,44444,43421,44447,43424,44450,43427,44453,43430,44456,43433,44459,43436,44462,43439,44465,43442,44468,43445,44471,43448,44474,43451,44477,43454,44480,43457,44483,43460,44486,43463,44489,43466,44492,43469,44495,43472,44498,43475,44501,43478,44504,43481,44507,43484,44510,43487,44513,43490,44516,43493,44519,43496,44522,43499,44525,43502,44528,43505,44531,43508,44534,43511,44537,43514,44540,43517,44543,43520,44546,43523,44549,43526,44552,43529,44555,43532,44558,43535,44561,43538,44564,43541,44567,43544,44570,43547,44573,43550,44576,43553,44579,43556,44582,43559,44585,43562,44588,43565,44591,43568,44594,43571,44597,43574,44600,43577,44603,43580,44606,43583,44609,43586,44612,43589,44615,43592,44618,43595,44621,43598,44624,43601,44627,43604,44630,43607,44633,43610,44636,43613,44639,43616,44642,43619,44645,43622,44648,43625,44651,43628,44654,43631,44657,43634,44660,43637,44663,43640,44666,43643,44669,43646,44672,43649,44675,43652,44678,43655,44681,43658,44684,43661,44687,43664,44690,43667,44693,43670,44696,43673,44699,43676,44702,43679,44705,43682,44708,43685,44711,43688,44714,43691,44717,43694,44720,43697,44723,43700,44726,43703,44729,43706,44732,43709,44735,43712,44738,43715,44741,43718,44744,43721,44747,43724,44750,43727,44753,43730,44756,43733,44759,43736,44762,43739,44765,43742,44768,43745,44771,43748,44774,43751,44777,43754,44780,43757,44783,43760,44786,43763,44789,43766,44792,43769,44795,43772,44798,43775,44801,43778,44804,43781,44807,43784,44810,43787,44813,43790,42767,44816,43793,42770,44819,43796,42773,44822,43799,42776,44825,43802,42779,44828,43805,42782,44831,43808,42785,44834,43811,42788,44837,43814,42791,44840,43817,42794,44843,43820,42797,44846,43823,42800,44849,43826,42803,44852,43829,42806,44855,43832,42809,44858,43835,42812,44861,43838,42815,44864,43841,42818,44867,43844,42821,44870,43847,42824,44873,43850,42827,44876,43853,42830,44879,43856,42833,44882,43859,42836,44885,43862,42839,44888,43865,42842,44891,43868,42845,44894,43871,42848,44897,43874,42851,44900,43877,42854,44903,43880,42857,44906,43883,42860,44909,43886,42863,44912,43889,42866,44915,43892,42869,44918,43895,42872,44921,43898,42875,44924,43901,42878,44927,43904,42881,44930,43907,42884,44933,43910,42887,44936,43913,42890,44939,43916,42893,44942,43919,42896,44945,43922,42899,44948,43925,42902,44951,43928,42905,44954,43931,42908,44957,43934,42911,44960,43937,42914,44963,43940,42917,44966,43943,42920,43946,42923,43949,42926,43952,42929,43955,42932,43958,42935,43961,42938,43964,42941,43967,42944,43970,42947,43973,42950,43976,42953,43979,42956,43982,42959,43985,42962,43988,42965,43991,42968,43994,42971,43997,42974,44000,42977,44003,42980,44006,42983,44009,42986,44012,42989,44015,42992,44018,42995,44021,42998,44024,43001,44027,43004,44030,43007]}
2024-06-20 16:48:51,405 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [44033, 43010, 44036, 43013, 44039, 43016, 44042, 43019, 44045, 43022, 44048, 43025, 44051, 43028, 44054, 43031, 44057, 43034, 44060, 43037, 44063, 43040, 44066, 43043, 44069, 43046, 44072, 43049, 44075, 43052, 44078, 43055, 44081, 43058, 44084, 43061, 44087, 43064, 44090, 43067, 44093, 43070, 44096, 43073, 44099, 43076, 44102, 43079, 44105, 43082, 44108, 43085, 44111, 43088, 44114, 43091, 44117, 43094, 44120, 43097, 44123, 43100, 44126, 43103, 44129, 43106, 44132, 43109, 44135, 43112, 44138, 43115, 44141, 43118, 44144, 43121, 44147, 43124, 44150, 43127, 44153, 43130, 44156, 43133, 44159, 43136, 44162, 43139, 44165, 43142, 44168, 43145, 44171, 43148, 44174, 43151, 44177, 43154, 44180, 43157, 44183, 43160, 44186, 43163, 44189, 43166, 44192, 43169, 44195, 43172, 44198, 43175, 44201, 43178, 44204, 43181, 44207, 43184, 44210, 43187, 44213, 43190, 44216, 43193, 44219, 43196, 44222, 43199, 44225, 43202, 44228, 43205, 44231, 43208, 44234, 43211, 44237, 43214, 44240, 43217, 44243, 43220, 44246, 43223, 44249, 43226, 44252, 43229, 44255, 43232, 44258, 43235, 44261, 43238, 44264, 43241, 44267, 43244, 44270, 43247, 44273, 43250, 44276, 43253, 44279, 43256, 44282, 43259, 44285, 43262, 44288, 43265, 44291, 43268, 44294, 43271, 44297, 43274, 44300, 43277, 44303, 43280, 44306, 43283, 44309, 43286, 44312, 43289, 44315, 43292, 44318, 43295, 44321, 43298, 44324, 43301, 44327, 43304, 44330, 43307, 44333, 43310, 44336, 43313, 44339, 43316, 44342, 43319, 44345, 43322, 44348, 43325, 44351, 43328, 44354, 43331, 44357, 43334, 44360, 43337, 44363, 43340, 44366, 43343, 44369, 43346, 44372, 43349, 44375, 43352, 44378, 43355, 44381, 43358, 44384, 43361, 44387, 43364, 44390, 43367, 44393, 43370, 44396, 43373, 44399, 43376, 44402, 43379, 44405, 43382, 44408, 43385, 44411, 43388, 44414, 43391, 44417, 43394, 44420, 43397, 44423, 43400, 44426, 43403, 44429, 43406, 44432, 43409, 44435, 43412, 44438, 43415, 44441, 43418, 44444, 43421, 44447, 43424, 44450, 43427, 44453, 43430, 44456, 43433, 44459, 43436, 44462, 43439, 44465, 43442, 44468, 43445, 44471, 43448, 44474, 43451, 44477, 43454, 44480, 43457, 44483, 43460, 44486, 43463, 44489, 43466, 44492, 43469, 44495, 43472, 44498, 43475, 44501, 43478, 44504, 43481, 44507, 43484, 44510, 43487, 44513, 43490, 44516, 43493, 44519, 43496, 44522, 43499, 44525, 43502, 44528, 43505, 44531, 43508, 44534, 43511, 44537, 43514, 44540, 43517, 44543, 43520, 44546, 43523, 44549, 43526, 44552, 43529, 44555, 43532, 44558, 43535, 44561, 43538, 44564, 43541, 44567, 43544, 44570, 43547, 44573, 43550, 44576, 43553, 44579, 43556, 44582, 43559, 44585, 43562, 44588, 43565, 44591, 43568, 44594, 43571, 44597, 43574, 44600, 43577, 44603, 43580, 44606, 43583, 44609, 43586, 44612, 43589, 44615, 43592, 44618, 43595, 44621, 43598, 44624, 43601, 44627, 43604, 44630, 43607, 44633, 43610, 44636, 43613, 44639, 43616, 44642, 43619, 44645, 43622, 44648, 43625, 44651, 43628, 44654, 43631, 44657, 43634, 44660, 43637, 44663, 43640, 44666, 43643, 44669, 43646, 44672, 43649, 44675, 43652, 44678, 43655, 44681, 43658, 44684, 43661, 44687, 43664, 44690, 43667, 44693, 43670, 44696, 43673, 44699, 43676, 44702, 43679, 44705, 43682, 44708, 43685, 44711, 43688, 44714, 43691, 44717, 43694, 44720, 43697, 44723, 43700, 44726, 43703, 44729, 43706, 44732, 43709, 44735, 43712, 44738, 43715, 44741, 43718, 44744, 43721, 44747, 43724, 44750, 43727, 44753, 43730, 44756, 43733, 44759, 43736, 44762, 43739, 44765, 43742, 44768, 43745, 44771, 43748, 44774, 43751, 44777, 43754, 44780, 43757, 44783, 43760, 44786, 43763, 44789, 43766, 44792, 43769, 44795, 43772, 44798, 43775, 44801, 43778, 44804, 43781, 44807, 43784, 44810, 43787, 44813, 43790, 42767, 44816, 43793, 42770, 44819, 43796, 42773, 44822, 43799, 42776, 44825, 43802, 42779, 44828, 43805, 42782, 44831, 43808, 42785, 44834, 43811, 42788, 44837, 43814, 42791, 44840, 43817, 42794, 44843, 43820, 42797, 44846, 43823, 42800, 44849, 43826, 42803, 44852, 43829, 42806, 44855, 43832, 42809, 44858, 43835, 42812, 44861, 43838, 42815, 44864, 43841, 42818, 44867, 43844, 42821, 44870, 43847, 42824, 44873, 43850, 42827, 44876, 43853, 42830, 44879, 43856, 42833, 44882, 43859, 42836, 44885, 43862, 42839, 44888, 43865, 42842, 44891, 43868, 42845, 44894, 43871, 42848, 44897, 43874, 42851, 44900, 43877, 42854, 44903, 43880, 42857, 44906, 43883, 42860, 44909, 43886, 42863, 44912, 43889, 42866, 44915, 43892, 42869, 44918, 43895, 42872, 44921, 43898, 42875, 44924, 43901, 42878, 44927, 43904, 42881, 44930, 43907, 42884, 44933, 43910, 42887, 44936, 43913, 42890, 44939, 43916, 42893, 44942, 43919, 42896, 44945, 43922, 42899, 44948, 43925, 42902, 44951, 43928, 42905, 44954, 43931, 42908, 44957, 43934, 42911, 44960, 43937, 42914, 44963, 43940, 42917, 44966, 43943, 42920, 43946, 42923, 43949, 42926, 43952, 42929, 43955, 42932, 43958, 42935, 43961, 42938, 43964, 42941, 43967, 42944, 43970, 42947, 43973, 42950, 43976, 42953, 43979, 42956, 43982, 42959, 43985, 42962, 43988, 42965, 43991, 42968, 43994, 42971, 43997, 42974, 44000, 42977, 44003, 42980, 44006, 42983, 44009, 42986, 44012, 42989, 44015, 42992, 44018, 42995, 44021, 42998, 44024, 43001, 44027, 43004, 44030, 43007]}
2024-06-20 16:48:51,407 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,407 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns/name)
2024-06-20 16:48:51,419 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"name","values":["9606.ENSP00000263160","9606.ENSP00000227507","9606.ENSP00000400142","9606.ENSP00000252804","9606.ENSP00000371985","9606.ENSP00000418447","9606.ENSP00000342056","9606.ENSP00000362014","9606.ENSP00000265459","9606.ENSP00000258106","9606.ENSP00000263038","9606.ENSP00000326366","9606.ENSP00000450873","9606.ENSP00000354929","9606.ENSP00000221996","9606.ENSP00000478887","9606.ENSP00000331040","9606.ENSP00000408526","9606.hsa-miR-155-5p","9606.ENSP00000477437","9606.ENSP00000246914","9606.ENSP00000359095","9606.ENSP00000299001","9606.ENSP00000432568","9606.ENSP00000220420","9606.ENSP00000380903","9606.ENSP00000392423","9606.ENSP00000498362","9606.hsa-miR-132-3p","9606.ENSP00000374354","9606.ENSP00000355231","9606.ENSP00000354923","9606.ENSP00000378394","9606.ENSP00000351777","9606.ENSP00000336712","9606.ENSP00000260665","9606.ENSP00000215095","9606.ENSP00000390941","9606.hsa-miR-106b-5p","9606.ENSP00000443631","9606.ENSP00000442920","9606.ENSP00000484060","9606.ENSP00000312987","9606.ENSP00000224140","9606.ENSP00000473623","9606.ENSP00000295987","9606.ENSP00000262039","9606.ENSP00000419243","9606.ENSP00000323511","9606.ENSP00000358283","9606.ENSP00000321455","9606.ENSP00000364204","9606.ENSP00000264335","9606.ENSP00000287713","9606.ENSP00000252482","9606.ENSP00000282020","9606.ENSP00000265421","9606.ENSP00000282146","9606.ENSP00000244769","9606.ENSP00000364210","9606.ENSP00000303709","9606.ENSP00000430432","9606.ENSP00000278616","9606.hsa-miR-1909-3p","9606.ENSP00000354497","9606.ENSP00000352738","9606.ENSP00000378284","9606.ENSP00000228872","9606.ENSP00000470248","9606.ENSP00000398698","9606.ENSP00000480050","9606.ENSP00000337353","9606.hsa-miR-760","9606.ENSP00000406293","9606.ENSP00000356790","9606.ENSP00000260116","9606.ENSP00000230354","9606.ENSP00000442793","9606.ENSP00000255631","9606.ENSP00000489624","9606.hsa-miR-144-3p","9606.ENSP00000464342","9606.ENSP00000252486","9606.ENSP00000285419","9606.ENSP00000369689","9606.ENSP00000286628","9606.ENSP00000343001","9606.ENSP00000391942","9606.hsa-miR-130a-3p","9606.ENSP00000441685","9606.ENSP00000302967","9606.ENSP00000490614","9606.ENSP00000263257","9606.ENSP00000358155","9606.ENSP00000428994","9606.ENSP00000383199","9606.ENSP00000359890","9606.ENSP00000340989","9606.ENSP00000265431","9606.ENSP00000292246","9606.ENSP00000354125","9606.ENSP00000295756","9606.ENSP00000358967","9606.ENSP00000358151","9606.ENSP00000310585","9606.ENSP00000362399","9606.ENSP00000357876","9606.ENSP00000363123","9606.ENSP00000417864","9606.ENSP00000295757","9606.ENSP00000354360","9606.ENSP00000040584","9606.ENSP00000492363","9606.ENSP00000365301","9606.ENSP00000219476","9606.ENSP00000386229","9606.ENSP00000291700","9606.ENSP00000287820","9606.ENSP00000368007","9606.ENSP00000263754","9606.ENSP00000288490","9606.ENSP00000284551","9606.ENSP00000434241","9606.ENSP00000302108","9606.ENSP00000403343","9606.ENSP00000385142","9606.ENSP00000264036","9606.ENSP00000283228","9606.ENSP00000391381","9606.ENSP00000406286","9606.hsa-miR-548ae","9606.ENSP00000479719","9606.ENSP00000320347","9606.ENSP00000264606","9606.ENSP00000258962","9606.ENSP00000337103","9606.ENSP00000424566","9606.ENSP00000270142","9606.ENSP00000426503","9606.ENSP00000272444","9606.ENSP00000402257","9606.ENSP00000298910","9606.ENSP00000264276","9606.ENSP00000341826","9606.ENSP00000269601","9606.ENSP00000345195","9606.ENSP00000366070","9606.ENSP00000294435","9606.ENSP00000277120","9606.ENSP00000480916","9606.ENSP00000391269","9606.ENSP00000357292","9606.ENSP00000480012","9606.ENSP00000303356","9606.ENSP00000494538","9606.ENSP00000323046","9606.ENSP00000220592","9606.ENSP00000053867","9606.ENSP00000354111","9606.ENSP00000387593","9606.ENSP00000415676","9606.ENSP00000282486","9606.ENSP00000240185","9606.ENSP00000391723","9606.ENSP00000497806","9606.ENSP00000351742","9606.ENSP00000496959","9606.ENSP00000376322","9606.ENSP00000254488","9606.ENSP00000335153","9606.ENSP00000266594","9606.ENSP00000261667","9606.ENSP00000435466","9606.ENSP00000263967","9606.ENSP00000313829","9606.ENSP00000487785","9606.ENSP00000265381","9606.ENSP00000410769","9606.ENSP00000345997","9606.ENSP00000261427","9606.ENSP00000265379","9606.ENSP00000257290","9606.ENSP00000225916","9606.ENSP00000246186","9606.ENSP00000481593","9606.ENSP00000500386","9606.ENSP00000439937","9606.ENSP00000313007","9606.ENSP00000370571","9606.ENSP00000295897","9606.ENSP00000297261","9606.ENSP00000362299","9606.ENSP00000310561","9606.ENSP00000295777","9606.ENSP00000354346","9606.ENSP00000345064","9606.ENSP00000282928","9606.ENSP00000387699","9606.ENSP00000309457","9606.ENSP00000258149","9606.ENSP00000381488","9606.ENSP00000364118","9606.ENSP00000298596","9606.ENSP00000272317","9606.ENSP00000267890","9606.ENSP00000497594","9606.ENSP00000379287","9606.ENSP00000497112","9606.ENSP00000360660","9606.ENSP00000397259","9606.ENSP00000266682","9606.ENSP00000477999","9606.ENSP00000265351","9606.ENSP00000282356","9606.ENSP00000301727","9606.ENSP00000351614","9606.ENSP00000369127","9606.ENSP00000313377","9606.ENSP00000370589","9606.ENSP00000339867","9606.ENSP00000302814","9606.ENSP00000228644","9606.ENSP00000343690","9606.ENSP00000410759","9606.ENSP00000264498","9606.ENSP00000356982","9606.ENSP00000264255","9606.NEAT1","9606.ENSP00000436679","9606.ENSP00000381382","9606.FAM41C","9606.ENSP00000379181","9606.ENSP00000324806","9606.ENSP00000435412","9606.ENSP00000469455","9606.ENSP00000436864","9606.ENSP00000354335","9606.ENSP00000401633","9606.ENSP00000361405","9606.ENSP00000386710","9606.ENSP00000384625","9606.ENSP00000265171","9606.ENSP00000489189","9606.ENSP00000259727","9606.ENSP00000332549","9606.ENSP00000340278","9606.ENSP00000231004","9606.ENSP00000343552","9606.ENSP00000494750","9606.ENSP00000260950","9606.ENSP00000264033","9606.ENSP00000369145","9606.ENSP00000363822","9606.ENSP00000409007","9606.ENSP00000254108","9606.ENSP00000354558","9606.ENSP00000425561","9606.ENSP00000482753","9606.ENSP00000370119","9606.ENSP00000355645","9606.ENSP00000319591","9606.ENSP00000354553","9606.ENSP00000340292","9606.ENSP00000370125","9606.ENSP00000265113","9606.ENSP00000375810","9606.ENSP00000355657","9606.ENSP00000352257","9606.ENSP00000451828","9606.ENSP00000382104","9606.ENSP00000401371","9606.ENSP00000222330","9606.hsa-miR-559","9606.ENSP00000308533","9606.ENSP00000377681","9606.hsa-miR-134-5p","9606.ENSP00000250113","9606.ENSP00000221485","9606.ENSP00000254719","9606.ENSP00000222574","9606.hsa-miR-433-3p","9606.ENSP00000352252","9606.ENSP00000418994","9606.hsa-miR-107","9606.ENSP00000306920","9606.ENSP00000364813","9606.ENSP00000365458","9606.ENSP00000352011","9606.ENSP00000397297","9606.hsa-miR-9-5p","9606.ENSP00000497217","9606.ENSP00000343535","9606.ENSP00000216200","9606.ENSP00000425979","9606.ENSP00000365576","9606.ENSP00000419395","9606.ENSP00000368966","9606.ENSP00000492795","9606.ENSP00000261366","9606.ENSP00000395535","9606.ENSP00000329918","9606.hsa-miR-101-3p","9606.hsa-miR-520c-3p","9606.ENSP00000291568","9606.ENSP00000368970","9606.ENSP00000262904","9606.ENSP00000405327","9606.ENSP00000467262","9606.ENSP00000261367","9606.ENSP00000371101","9606.ENSP00000489829","9606.ENSP00000392028","9606.ENSP00000471191","9606.ENSP00000221233","9606.ENSP00000305702","9606.ENSP00000481554","9606.ENSP00000379616","9606.ENSP00000467024","9606.ENSP00000374049","9606.ENSP00000355511","9606.ENSP00000250003","9606.ENSP00000332772","9606.ENSP00000339835","9606.ENSP00000362649","9606.ENSP00000338629","9606.ENSP00000360108","9606.ENSP00000365227","9606.ENSP00000353331","9606.ENSP00000301587","9606.ENSP00000222584","9606.ENSP00000380602","9606.ENSP00000259708","9606.ENSP00000327513","9606.ENSP00000447537","9606.ENSP00000340820","9606.ENSP00000246672","9606.ENSP00000254722","9606.ENSP00000311816","9606.ENSP00000499501","9606.ENSP00000320650","9606.ENSP00000498653","9606.hsa-miR-124-3p","9606.ENSP00000284240","9606.ENSP00000361433","9606.ENSP00000439585","9606.ENSP00000316032","9606.ENSP00000368984","9606.hsa-miR-17-5p","9606.ENSP00000366563","9606.ENSP00000419260","9606.ENSP00000237014","9606.AC007879.5","9606.ENSP00000323148","9606.ENSP00000446576","9606.ENSP00000263431","9606.ENSP00000355747","9606.ENSP00000405674","9606.ENSP00000354416","9606.ENSP00000338512","9606.ENSP00000356953","9606.ENSP00000399376","9606.ENSP00000359489","9606.ENSP00000298556","9606.ENSP00000355865","9606.ENSP00000226382","9606.ENSP00000355741","9606.ENSP00000346483","9606.ENSP00000246548","9606.ENSP00000304643","9606.ENSP00000373413","9606.ENSP00000254810","9606.ENSP00000376921","9606.ENSP00000302100","9606.ENSP00000350170","9606.ENSP00000252996","9606.hsa-miR-29a-3p","9606.ENSP00000366330","9606.ENSP00000248600","9606.ENSP00000216218","9606.ENSP00000306138","9606.ENSP00000288943","9606.ENSP00000202625","9606.ENSP00000349748","9606.ENSP00000245451","9606.ENSP00000366452","9606.ENSP00000360231","9606.hsa-miR-93-5p","9606.ENSP00000471851","9606.ENSP00000364270","9606.ENSP00000340125","9606.ENSP00000302216","9606.ENSP00000343515","9606.ENSP00000221801","9606.ENSP00000501150","9606.ENSP00000413035","9606.ENSP00000265164","9606.ENSP00000359804","9606.ENSP00000259711","9606.ENSP00000415579","9606.ENSP00000306253","9606.ENSP00000273320","9606.ENSP00000305288","9606.ENSP00000418721","9606.ENSP00000458663","9606.ENSP00000307900","9606.ENSP00000329357","9606.ENSP00000496695","9606.ENSP00000318585","9606.ENSP00000418960","9606.ENSP00000478249","9606.ENSP00000303540","9606.ENSP00000393379","9606.ENSP00000240316","9606.ENSP00000457205","9606.ENSP00000260386","9606.ENSP00000288135","9606.ENSP00000368884","9606.ENSP00000458537","9606.ENSP00000454852","9606.ENSP00000338173","9606.ENSP00000285667","9606.ENSP00000380070","9606.ENSP00000368881","9606.ENSP00000359019","9606.ENSP00000477715","9606.ENSP00000417901","9606.ENSP00000221930","9606.ENSP00000490107","9606.ENSP00000332194","9606.ENSP00000219197","9606.ENSP00000180166","9606.ENSP00000381185","9606.ENSP00000316842","9606.ENSP00000254079","9606.ENSP00000296271","9606.ENSP00000362300","9606.ENSP00000264867","9606.ENSP00000349298","9606.ENSP00000311032","9606.ENSP00000295900","9606.ENSP00000293288","9606.SNORD58B","9606.hsa-miR-34c-5p","9606.ENSP00000306561","9606.ENSP00000500990","9606.ENSP00000256261","9606.ENSP00000295589","9606.ENSP00000419081","9606.ENSP00000475626","9606.ENSP00000479667","9606.ENSP00000233813","9606.hsa-miR-1225-3p","9606.ENSP00000406209","9606.ENSP00000455698","9606.ENSP00000348645","9606.ENSP00000321835","9606.ENSP00000216127","9606.ENSP00000371133","9606.ENSP00000369863","9606.ENSP00000261601","9606.ENSP00000300213","9606.ENSP00000225504","9606.ENSP00000264552","9606.ENSP00000308610","9606.ENSP00000495360","9606.ENSP00000421339","9606.ENSP00000240100","9606.ENSP00000381057","9606.ENSP00000334002","9606.ENSP00000411355","9606.ENSP00000333277","9606.ENSP00000295910","9606.ENSP00000438574","9606.ENSP00000340467","9606.ENSP00000377372","9606.ENSP00000477141","9606.ENSP00000463653","9606.ENSP00000360493","9606.ENSP00000310036","9606.ENSP00000385410","9606.ENSP00000249396","9606.ENSP00000294702","9606.ENSP00000357583","9606.ENSP00000349168","9606.ENSP00000276654","9606.ENSP00000215832","9606.ENSP00000216254","9606.ENSP00000261731","9606.ENSP00000324560","9606.ENSP00000362680","9606.ENSP00000346694","9606.ENSP00000353414","9606.ENSP00000437125","9606.ENSP00000409279","9606.ENSP00000349722","9606.ENSP00000350386","9606.ENSP00000283195","9606.ENSP00000339004","9606.ENSP00000264689","9606.ENSP00000321606","9606.ENSP00000369996","9606.ENSP00000414856","9606.ENSP00000323588","9606.ENSP00000248975","9606.ENSP00000181796","9606.ENSP00000371267","9606.ENSP00000378338","9606.ENSP00000370058","9606.ENSP00000239231","9606.ENSP00000315299","9606.ENSP00000378699","9606.ENSP00000415822","9606.ENSP00000333262","9606.ENSP00000370193","9606.ENSP00000483254","9606.ENSP00000422435","9606.ENSP00000482169","9606.ENSP00000258415","9606.ENSP00000380432","9606.ENSP00000349156","9606.ENSP00000253408","9606.ENSP00000384474","9606.HTT-AS","9606.ENSP00000358784","9606.ENSP00000265195","9606.ENSP00000440045","9606.ENSP00000378476","9606.ENSP00000362205","9606.ENSP00000252934","9606.ENSP00000250495","9606.ENSP00000340330","9606.ENSP00000247225","9606.ENSP00000310129","9606.ENSP00000360266","9606.ENSP00000296755","9606.ENSP00000359719","9606.ENSP00000499387","9606.ENSP00000358089","9606.ENSP00000230321","9606.ENSP00000377936","9606.ENSP00000329403","9606.ENSP00000216144","9606.ENSP00000314173","9606.ENSP00000430241","9606.ENSP00000319060","9606.ENSP00000354859","9606.ENSP00000430000","9606.ENSP00000325863","9606.ENSP00000258302","9606.ENSP00000476119","9606.ENSP00000366488","9606.ENSP00000481848","9606.ENSP00000234389","9606.ENSP00000437256","9606.ENSP00000279488","9606.ENSP00000363435","9606.ENSP00000366249","9606.ENSP00000398632","9606.ENSP00000477455","9606.ENSP00000254976","9606.ENSP00000316357","9606.ENSP00000216714","9606.ENSP00000347896","9606.ENSP00000269305","9606.ENSP00000320821","9606.ENSP00000264657","9606.ENSP00000353646","9606.ENSP00000397563","9606.ENSP00000263205","9606.ENSP00000353767","9606.ENSP00000353864","9606.ENSP00000345347","9606.ENSP00000265081","9606.ENSP00000318635","9606.ENSP00000408617","9606.ENSP00000364639","9606.ENSP00000223129","9606.ENSP00000370744","9606.ENSP00000307786","9606.FMR1-AS1","9606.ENSP00000428426","9606.ENSP00000305480","9606.ENSP00000291295","9606.ENSP00000453858","9606.ENSP00000245255","9606.ENSP00000261523","9606.ENSP00000377015","9606.ENSP00000453170","9606.ENSP00000244061","9606.ENSP00000293190","9606.ENSP00000276079","9606.ENSP00000269143","9606.ENSP00000355028","9606.ENSP00000370083","9606.ENSP00000268058","9606.ENSP00000263209","9606.ENSP00000278379","9606.ENSP00000347184","9606.hsa-miR-150-5p","9606.ENSP00000365601","9606.ENSP00000307604","9606.ENSP00000357206","9606.hsa-miR-9-3p","9606.ENSP00000361021","9606.ENSP00000334463","9606.ENSP00000348056","9606.ENSP00000386786","9606.ENSP00000357565","9606.ENSP00000332706","9606.ENSP00000296526","9606.ENSP00000458065","9606.ENSP00000385675","9606.ENSP00000305422","9606.ENSP00000359727","9606.ENSP00000362578","9606.ENSP00000365861","9606.ENSP00000356231","9606.ENSP00000306330","9606.ENSP00000361027","9606.ENSP00000378487","9606.ENSP00000431162","9606.hsa-miR-548g-3p","9606.ENSP00000371729","9606.hsa-miR-320d","9606.ENSP00000304331","9606.ENSP00000013807","9606.ENSP00000435637","9606.ENSP00000385216","9606.ENSP00000346671","9606.ENSP00000427900","9606.MIR17HG","9606.ENSP00000350928","9606.ENSP00000360280","9606.AC006129.1","9606.ENSP00000219548","9606.ENSP00000282753","9606.ENSP00000216727","9606.ENSP00000284262","9606.ENSP00000261837","9606.ATXN8OS","9606.ENSP00000368314","9606.ENSP00000374552","9606.ENSP00000256079","9606.hsa-miR-128-3p","9606.hsa-miR-4305","9606.ENSP00000315137","9606.ENSP00000347997","9606.ENSP00000261712","9606.ENSP00000376753","9606.ENSP00000406549","9606.ENSP00000317333","9606.ENSP00000399851","9606.ENSP00000369531","9606.ENSP00000358886","9606.ENSP00000383042","9606.ENSP00000403397","9606.ENSP00000359978","9606.ENSP00000374455","9606.ENSP00000429763","9606.ENSP00000438886","9606.hsa-miR-379-3p","9606.ENSP00000262367","9606.ENSP00000353072","9606.ENSP00000376637","9606.ENSP00000369895","9606.ENSP00000376197","9606.ENSP00000462298","9606.ENSP00000262241","9606.ENSP00000355370","9606.ENSP00000225577","9606.ENSP00000333363","9606.ENSP00000376077","9606.ENSP00000347170","9606.ENSP00000358525","9606.ENSP00000302961","9606.ENSP00000324173","9606.ENSP00000309591","9606.ENSP00000419782","9606.ENSP00000345571","9606.ENSP00000418572","9606.ENSP00000495557","9606.ENSP00000327687","9606.ENSP00000309595","9606.ENSP00000365514","9606.ENSP00000361930","9606.ENSP00000270225","9606.ENSP00000290649","9606.ENSP00000362485","9606.ENSP00000309477","9606.ENSP00000386458","9606.ENSP00000345575","9606.ENSP00000388638","9606.ENSP00000346534","9606.ENSP00000270349","9606.ENSP00000368332","9606.ENSP00000212015","9606.ENSP00000405965","9606.ENSP00000284981","9606.ENSP00000345206","9606.ENSP00000282561","9606.ENSP00000493382","9606.ENSP00000498255","9606.ENSP00000263025","9606.ENSP00000478877","9606.hsa-miR-548w","9606.hsa-miR-133b","9606.ENSP00000462745","9606.ENSP00000352516","9606.ENSP00000358518","9606.ENSP00000405388","9606.ENSP00000268712","9606.ENSP00000359085","9606.ENSP00000360609","9606.ENSP00000362131","9606.hsa-miR-659-3p","9606.ENSP00000499582","9606.ENSP00000422185","9606.ENSP00000454229","9606.ENSP00000221742","9606.ENSP00000489407","9606.ENSP00000359506","9606.ENSP00000444433","9606.ENSP00000414303","9606.ENSP00000391803","9606.ENSP00000379350","9606.ENSP00000399403","9606.hsa-miR-106a-5p","9606.ENSP00000379915","9606.ENSP00000254322","9606.ENSP00000269228","9606.ENSP00000403888","9606.ENSP00000306894","9606.ENSP00000254325","9606.ENSP00000307863"]}
2024-06-20 16:48:51,419 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000263160', '9606.ENSP00000227507', '9606.ENSP00000400142', '9606.ENSP00000252804', '9606.ENSP00000371985', '9606.ENSP00000418447', '9606.ENSP00000342056', '9606.ENSP00000362014', '9606.ENSP00000265459', '9606.ENSP00000258106', '9606.ENSP00000263038', '9606.ENSP00000326366', '9606.ENSP00000450873', '9606.ENSP00000354929', '9606.ENSP00000221996', '9606.ENSP00000478887', '9606.ENSP00000331040', '9606.ENSP00000408526', '9606.hsa-miR-155-5p', '9606.ENSP00000477437', '9606.ENSP00000246914', '9606.ENSP00000359095', '9606.ENSP00000299001', '9606.ENSP00000432568', '9606.ENSP00000220420', '9606.ENSP00000380903', '9606.ENSP00000392423', '9606.ENSP00000498362', '9606.hsa-miR-132-3p', '9606.ENSP00000374354', '9606.ENSP00000355231', '9606.ENSP00000354923', '9606.ENSP00000378394', '9606.ENSP00000351777', '9606.ENSP00000336712', '9606.ENSP00000260665', '9606.ENSP00000215095', '9606.ENSP00000390941', '9606.hsa-miR-106b-5p', '9606.ENSP00000443631', '9606.ENSP00000442920', '9606.ENSP00000484060', '9606.ENSP00000312987', '9606.ENSP00000224140', '9606.ENSP00000473623', '9606.ENSP00000295987', '9606.ENSP00000262039', '9606.ENSP00000419243', '9606.ENSP00000323511', '9606.ENSP00000358283', '9606.ENSP00000321455', '9606.ENSP00000364204', '9606.ENSP00000264335', '9606.ENSP00000287713', '9606.ENSP00000252482', '9606.ENSP00000282020', '9606.ENSP00000265421', '9606.ENSP00000282146', '9606.ENSP00000244769', '9606.ENSP00000364210', '9606.ENSP00000303709', '9606.ENSP00000430432', '9606.ENSP00000278616', '9606.hsa-miR-1909-3p', '9606.ENSP00000354497', '9606.ENSP00000352738', '9606.ENSP00000378284', '9606.ENSP00000228872', '9606.ENSP00000470248', '9606.ENSP00000398698', '9606.ENSP00000480050', '9606.ENSP00000337353', '9606.hsa-miR-760', '9606.ENSP00000406293', '9606.ENSP00000356790', '9606.ENSP00000260116', '9606.ENSP00000230354', '9606.ENSP00000442793', '9606.ENSP00000255631', '9606.ENSP00000489624', '9606.hsa-miR-144-3p', '9606.ENSP00000464342', '9606.ENSP00000252486', '9606.ENSP00000285419', '9606.ENSP00000369689', '9606.ENSP00000286628', '9606.ENSP00000343001', '9606.ENSP00000391942', '9606.hsa-miR-130a-3p', '9606.ENSP00000441685', '9606.ENSP00000302967', '9606.ENSP00000490614', '9606.ENSP00000263257', '9606.ENSP00000358155', '9606.ENSP00000428994', '9606.ENSP00000383199', '9606.ENSP00000359890', '9606.ENSP00000340989', '9606.ENSP00000265431', '9606.ENSP00000292246', '9606.ENSP00000354125', '9606.ENSP00000295756', '9606.ENSP00000358967', '9606.ENSP00000358151', '9606.ENSP00000310585', '9606.ENSP00000362399', '9606.ENSP00000357876', '9606.ENSP00000363123', '9606.ENSP00000417864', '9606.ENSP00000295757', '9606.ENSP00000354360', '9606.ENSP00000040584', '9606.ENSP00000492363', '9606.ENSP00000365301', '9606.ENSP00000219476', '9606.ENSP00000386229', '9606.ENSP00000291700', '9606.ENSP00000287820', '9606.ENSP00000368007', '9606.ENSP00000263754', '9606.ENSP00000288490', '9606.ENSP00000284551', '9606.ENSP00000434241', '9606.ENSP00000302108', '9606.ENSP00000403343', '9606.ENSP00000385142', '9606.ENSP00000264036', '9606.ENSP00000283228', '9606.ENSP00000391381', '9606.ENSP00000406286', '9606.hsa-miR-548ae', '9606.ENSP00000479719', '9606.ENSP00000320347', '9606.ENSP00000264606', '9606.ENSP00000258962', '9606.ENSP00000337103', '9606.ENSP00000424566', '9606.ENSP00000270142', '9606.ENSP00000426503', '9606.ENSP00000272444', '9606.ENSP00000402257', '9606.ENSP00000298910', '9606.ENSP00000264276', '9606.ENSP00000341826', '9606.ENSP00000269601', '9606.ENSP00000345195', '9606.ENSP00000366070', '9606.ENSP00000294435', '9606.ENSP00000277120', '9606.ENSP00000480916', '9606.ENSP00000391269', '9606.ENSP00000357292', '9606.ENSP00000480012', '9606.ENSP00000303356', '9606.ENSP00000494538', '9606.ENSP00000323046', '9606.ENSP00000220592', '9606.ENSP00000053867', '9606.ENSP00000354111', '9606.ENSP00000387593', '9606.ENSP00000415676', '9606.ENSP00000282486', '9606.ENSP00000240185', '9606.ENSP00000391723', '9606.ENSP00000497806', '9606.ENSP00000351742', '9606.ENSP00000496959', '9606.ENSP00000376322', '9606.ENSP00000254488', '9606.ENSP00000335153', '9606.ENSP00000266594', '9606.ENSP00000261667', '9606.ENSP00000435466', '9606.ENSP00000263967', '9606.ENSP00000313829', '9606.ENSP00000487785', '9606.ENSP00000265381', '9606.ENSP00000410769', '9606.ENSP00000345997', '9606.ENSP00000261427', '9606.ENSP00000265379', '9606.ENSP00000257290', '9606.ENSP00000225916', '9606.ENSP00000246186', '9606.ENSP00000481593', '9606.ENSP00000500386', '9606.ENSP00000439937', '9606.ENSP00000313007', '9606.ENSP00000370571', '9606.ENSP00000295897', '9606.ENSP00000297261', '9606.ENSP00000362299', '9606.ENSP00000310561', '9606.ENSP00000295777', '9606.ENSP00000354346', '9606.ENSP00000345064', '9606.ENSP00000282928', '9606.ENSP00000387699', '9606.ENSP00000309457', '9606.ENSP00000258149', '9606.ENSP00000381488', '9606.ENSP00000364118', '9606.ENSP00000298596', '9606.ENSP00000272317', '9606.ENSP00000267890', '9606.ENSP00000497594', '9606.ENSP00000379287', '9606.ENSP00000497112', '9606.ENSP00000360660', '9606.ENSP00000397259', '9606.ENSP00000266682', '9606.ENSP00000477999', '9606.ENSP00000265351', '9606.ENSP00000282356', '9606.ENSP00000301727', '9606.ENSP00000351614', '9606.ENSP00000369127', '9606.ENSP00000313377', '9606.ENSP00000370589', '9606.ENSP00000339867', '9606.ENSP00000302814', '9606.ENSP00000228644', '9606.ENSP00000343690', '9606.ENSP00000410759', '9606.ENSP00000264498', '9606.ENSP00000356982', '9606.ENSP00000264255', '9606.NEAT1', '9606.ENSP00000436679', '9606.ENSP00000381382', '9606.FAM41C', '9606.ENSP00000379181', '9606.ENSP00000324806', '9606.ENSP00000435412', '9606.ENSP00000469455', '9606.ENSP00000436864', '9606.ENSP00000354335', '9606.ENSP00000401633', '9606.ENSP00000361405', '9606.ENSP00000386710', '9606.ENSP00000384625', '9606.ENSP00000265171', '9606.ENSP00000489189', '9606.ENSP00000259727', '9606.ENSP00000332549', '9606.ENSP00000340278', '9606.ENSP00000231004', '9606.ENSP00000343552', '9606.ENSP00000494750', '9606.ENSP00000260950', '9606.ENSP00000264033', '9606.ENSP00000369145', '9606.ENSP00000363822', '9606.ENSP00000409007', '9606.ENSP00000254108', '9606.ENSP00000354558', '9606.ENSP00000425561', '9606.ENSP00000482753', '9606.ENSP00000370119', '9606.ENSP00000355645', '9606.ENSP00000319591', '9606.ENSP00000354553', '9606.ENSP00000340292', '9606.ENSP00000370125', '9606.ENSP00000265113', '9606.ENSP00000375810', '9606.ENSP00000355657', '9606.ENSP00000352257', '9606.ENSP00000451828', '9606.ENSP00000382104', '9606.ENSP00000401371', '9606.ENSP00000222330', '9606.hsa-miR-559', '9606.ENSP00000308533', '9606.ENSP00000377681', '9606.hsa-miR-134-5p', '9606.ENSP00000250113', '9606.ENSP00000221485', '9606.ENSP00000254719', '9606.ENSP00000222574', '9606.hsa-miR-433-3p', '9606.ENSP00000352252', '9606.ENSP00000418994', '9606.hsa-miR-107', '9606.ENSP00000306920', '9606.ENSP00000364813', '9606.ENSP00000365458', '9606.ENSP00000352011', '9606.ENSP00000397297', '9606.hsa-miR-9-5p', '9606.ENSP00000497217', '9606.ENSP00000343535', '9606.ENSP00000216200', '9606.ENSP00000425979', '9606.ENSP00000365576', '9606.ENSP00000419395', '9606.ENSP00000368966', '9606.ENSP00000492795', '9606.ENSP00000261366', '9606.ENSP00000395535', '9606.ENSP00000329918', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.ENSP00000291568', '9606.ENSP00000368970', '9606.ENSP00000262904', '9606.ENSP00000405327', '9606.ENSP00000467262', '9606.ENSP00000261367', '9606.ENSP00000371101', '9606.ENSP00000489829', '9606.ENSP00000392028', '9606.ENSP00000471191', '9606.ENSP00000221233', '9606.ENSP00000305702', '9606.ENSP00000481554', '9606.ENSP00000379616', '9606.ENSP00000467024', '9606.ENSP00000374049', '9606.ENSP00000355511', '9606.ENSP00000250003', '9606.ENSP00000332772', '9606.ENSP00000339835', '9606.ENSP00000362649', '9606.ENSP00000338629', '9606.ENSP00000360108', '9606.ENSP00000365227', '9606.ENSP00000353331', '9606.ENSP00000301587', '9606.ENSP00000222584', '9606.ENSP00000380602', '9606.ENSP00000259708', '9606.ENSP00000327513', '9606.ENSP00000447537', '9606.ENSP00000340820', '9606.ENSP00000246672', '9606.ENSP00000254722', '9606.ENSP00000311816', '9606.ENSP00000499501', '9606.ENSP00000320650', '9606.ENSP00000498653', '9606.hsa-miR-124-3p', '9606.ENSP00000284240', '9606.ENSP00000361433', '9606.ENSP00000439585', '9606.ENSP00000316032', '9606.ENSP00000368984', '9606.hsa-miR-17-5p', '9606.ENSP00000366563', '9606.ENSP00000419260', '9606.ENSP00000237014', '9606.AC007879.5', '9606.ENSP00000323148', '9606.ENSP00000446576', '9606.ENSP00000263431', '9606.ENSP00000355747', '9606.ENSP00000405674', '9606.ENSP00000354416', '9606.ENSP00000338512', '9606.ENSP00000356953', '9606.ENSP00000399376', '9606.ENSP00000359489', '9606.ENSP00000298556', '9606.ENSP00000355865', '9606.ENSP00000226382', '9606.ENSP00000355741', '9606.ENSP00000346483', '9606.ENSP00000246548', '9606.ENSP00000304643', '9606.ENSP00000373413', '9606.ENSP00000254810', '9606.ENSP00000376921', '9606.ENSP00000302100', '9606.ENSP00000350170', '9606.ENSP00000252996', '9606.hsa-miR-29a-3p', '9606.ENSP00000366330', '9606.ENSP00000248600', '9606.ENSP00000216218', '9606.ENSP00000306138', '9606.ENSP00000288943', '9606.ENSP00000202625', '9606.ENSP00000349748', '9606.ENSP00000245451', '9606.ENSP00000366452', '9606.ENSP00000360231', '9606.hsa-miR-93-5p', '9606.ENSP00000471851', '9606.ENSP00000364270', '9606.ENSP00000340125', '9606.ENSP00000302216', '9606.ENSP00000343515', '9606.ENSP00000221801', '9606.ENSP00000501150', '9606.ENSP00000413035', '9606.ENSP00000265164', '9606.ENSP00000359804', '9606.ENSP00000259711', '9606.ENSP00000415579', '9606.ENSP00000306253', '9606.ENSP00000273320', '9606.ENSP00000305288', '9606.ENSP00000418721', '9606.ENSP00000458663', '9606.ENSP00000307900', '9606.ENSP00000329357', '9606.ENSP00000496695', '9606.ENSP00000318585', '9606.ENSP00000418960', '9606.ENSP00000478249', '9606.ENSP00000303540', '9606.ENSP00000393379', '9606.ENSP00000240316', '9606.ENSP00000457205', '9606.ENSP00000260386', '9606.ENSP00000288135', '9606.ENSP00000368884', '9606.ENSP00000458537', '9606.ENSP00000454852', '9606.ENSP00000338173', '9606.ENSP00000285667', '9606.ENSP00000380070', '9606.ENSP00000368881', '9606.ENSP00000359019', '9606.ENSP00000477715', '9606.ENSP00000417901', '9606.ENSP00000221930', '9606.ENSP00000490107', '9606.ENSP00000332194', '9606.ENSP00000219197', '9606.ENSP00000180166', '9606.ENSP00000381185', '9606.ENSP00000316842', '9606.ENSP00000254079', '9606.ENSP00000296271', '9606.ENSP00000362300', '9606.ENSP00000264867', '9606.ENSP00000349298', '9606.ENSP00000311032', '9606.ENSP00000295900', '9606.ENSP00000293288', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.ENSP00000306561', '9606.ENSP00000500990', '9606.ENSP00000256261', '9606.ENSP00000295589', '9606.ENSP00000419081', '9606.ENSP00000475626', '9606.ENSP00000479667', '9606.ENSP00000233813', '9606.hsa-miR-1225-3p', '9606.ENSP00000406209', '9606.ENSP00000455698', '9606.ENSP00000348645', '9606.ENSP00000321835', '9606.ENSP00000216127', '9606.ENSP00000371133', '9606.ENSP00000369863', '9606.ENSP00000261601', '9606.ENSP00000300213', '9606.ENSP00000225504', '9606.ENSP00000264552', '9606.ENSP00000308610', '9606.ENSP00000495360', '9606.ENSP00000421339', '9606.ENSP00000240100', '9606.ENSP00000381057', '9606.ENSP00000334002', '9606.ENSP00000411355', '9606.ENSP00000333277', '9606.ENSP00000295910', '9606.ENSP00000438574', '9606.ENSP00000340467', '9606.ENSP00000377372', '9606.ENSP00000477141', '9606.ENSP00000463653', '9606.ENSP00000360493', '9606.ENSP00000310036', '9606.ENSP00000385410', '9606.ENSP00000249396', '9606.ENSP00000294702', '9606.ENSP00000357583', '9606.ENSP00000349168', '9606.ENSP00000276654', '9606.ENSP00000215832', '9606.ENSP00000216254', '9606.ENSP00000261731', '9606.ENSP00000324560', '9606.ENSP00000362680', '9606.ENSP00000346694', '9606.ENSP00000353414', '9606.ENSP00000437125', '9606.ENSP00000409279', '9606.ENSP00000349722', '9606.ENSP00000350386', '9606.ENSP00000283195', '9606.ENSP00000339004', '9606.ENSP00000264689', '9606.ENSP00000321606', '9606.ENSP00000369996', '9606.ENSP00000414856', '9606.ENSP00000323588', '9606.ENSP00000248975', '9606.ENSP00000181796', '9606.ENSP00000371267', '9606.ENSP00000378338', '9606.ENSP00000370058', '9606.ENSP00000239231', '9606.ENSP00000315299', '9606.ENSP00000378699', '9606.ENSP00000415822', '9606.ENSP00000333262', '9606.ENSP00000370193', '9606.ENSP00000483254', '9606.ENSP00000422435', '9606.ENSP00000482169', '9606.ENSP00000258415', '9606.ENSP00000380432', '9606.ENSP00000349156', '9606.ENSP00000253408', '9606.ENSP00000384474', '9606.HTT-AS', '9606.ENSP00000358784', '9606.ENSP00000265195', '9606.ENSP00000440045', '9606.ENSP00000378476', '9606.ENSP00000362205', '9606.ENSP00000252934', '9606.ENSP00000250495', '9606.ENSP00000340330', '9606.ENSP00000247225', '9606.ENSP00000310129', '9606.ENSP00000360266', '9606.ENSP00000296755', '9606.ENSP00000359719', '9606.ENSP00000499387', '9606.ENSP00000358089', '9606.ENSP00000230321', '9606.ENSP00000377936', '9606.ENSP00000329403', '9606.ENSP00000216144', '9606.ENSP00000314173', '9606.ENSP00000430241', '9606.ENSP00000319060', '9606.ENSP00000354859', '9606.ENSP00000430000', '9606.ENSP00000325863', '9606.ENSP00000258302', '9606.ENSP00000476119', '9606.ENSP00000366488', '9606.ENSP00000481848', '9606.ENSP00000234389', '9606.ENSP00000437256', '9606.ENSP00000279488', '9606.ENSP00000363435', '9606.ENSP00000366249', '9606.ENSP00000398632', '9606.ENSP00000477455', '9606.ENSP00000254976', '9606.ENSP00000316357', '9606.ENSP00000216714', '9606.ENSP00000347896', '9606.ENSP00000269305', '9606.ENSP00000320821', '9606.ENSP00000264657', '9606.ENSP00000353646', '9606.ENSP00000397563', '9606.ENSP00000263205', '9606.ENSP00000353767', '9606.ENSP00000353864', '9606.ENSP00000345347', '9606.ENSP00000265081', '9606.ENSP00000318635', '9606.ENSP00000408617', '9606.ENSP00000364639', '9606.ENSP00000223129', '9606.ENSP00000370744', '9606.ENSP00000307786', '9606.FMR1-AS1', '9606.ENSP00000428426', '9606.ENSP00000305480', '9606.ENSP00000291295', '9606.ENSP00000453858', '9606.ENSP00000245255', '9606.ENSP00000261523', '9606.ENSP00000377015', '9606.ENSP00000453170', '9606.ENSP00000244061', '9606.ENSP00000293190', '9606.ENSP00000276079', '9606.ENSP00000269143', '9606.ENSP00000355028', '9606.ENSP00000370083', '9606.ENSP00000268058', '9606.ENSP00000263209', '9606.ENSP00000278379', '9606.ENSP00000347184', '9606.hsa-miR-150-5p', '9606.ENSP00000365601', '9606.ENSP00000307604', '9606.ENSP00000357206', '9606.hsa-miR-9-3p', '9606.ENSP00000361021', '9606.ENSP00000334463', '9606.ENSP00000348056', '9606.ENSP00000386786', '9606.ENSP00000357565', '9606.ENSP00000332706', '9606.ENSP00000296526', '9606.ENSP00000458065', '9606.ENSP00000385675', '9606.ENSP00000305422', '9606.ENSP00000359727', '9606.ENSP00000362578', '9606.ENSP00000365861', '9606.ENSP00000356231', '9606.ENSP00000306330', '9606.ENSP00000361027', '9606.ENSP00000378487', '9606.ENSP00000431162', '9606.hsa-miR-548g-3p', '9606.ENSP00000371729', '9606.hsa-miR-320d', '9606.ENSP00000304331', '9606.ENSP00000013807', '9606.ENSP00000435637', '9606.ENSP00000385216', '9606.ENSP00000346671', '9606.ENSP00000427900', '9606.MIR17HG', '9606.ENSP00000350928', '9606.ENSP00000360280', '9606.AC006129.1', '9606.ENSP00000219548', '9606.ENSP00000282753', '9606.ENSP00000216727', '9606.ENSP00000284262', '9606.ENSP00000261837', '9606.ATXN8OS', '9606.ENSP00000368314', '9606.ENSP00000374552', '9606.ENSP00000256079', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.ENSP00000315137', '9606.ENSP00000347997', '9606.ENSP00000261712', '9606.ENSP00000376753', '9606.ENSP00000406549', '9606.ENSP00000317333', '9606.ENSP00000399851', '9606.ENSP00000369531', '9606.ENSP00000358886', '9606.ENSP00000383042', '9606.ENSP00000403397', '9606.ENSP00000359978', '9606.ENSP00000374455', '9606.ENSP00000429763', '9606.ENSP00000438886', '9606.hsa-miR-379-3p', '9606.ENSP00000262367', '9606.ENSP00000353072', '9606.ENSP00000376637', '9606.ENSP00000369895', '9606.ENSP00000376197', '9606.ENSP00000462298', '9606.ENSP00000262241', '9606.ENSP00000355370', '9606.ENSP00000225577', '9606.ENSP00000333363', '9606.ENSP00000376077', '9606.ENSP00000347170', '9606.ENSP00000358525', '9606.ENSP00000302961', '9606.ENSP00000324173', '9606.ENSP00000309591', '9606.ENSP00000419782', '9606.ENSP00000345571', '9606.ENSP00000418572', '9606.ENSP00000495557', '9606.ENSP00000327687', '9606.ENSP00000309595', '9606.ENSP00000365514', '9606.ENSP00000361930', '9606.ENSP00000270225', '9606.ENSP00000290649', '9606.ENSP00000362485', '9606.ENSP00000309477', '9606.ENSP00000386458', '9606.ENSP00000345575', '9606.ENSP00000388638', '9606.ENSP00000346534', '9606.ENSP00000270349', '9606.ENSP00000368332', '9606.ENSP00000212015', '9606.ENSP00000405965', '9606.ENSP00000284981', '9606.ENSP00000345206', '9606.ENSP00000282561', '9606.ENSP00000493382', '9606.ENSP00000498255', '9606.ENSP00000263025', '9606.ENSP00000478877', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.ENSP00000462745', '9606.ENSP00000352516', '9606.ENSP00000358518', '9606.ENSP00000405388', '9606.ENSP00000268712', '9606.ENSP00000359085', '9606.ENSP00000360609', '9606.ENSP00000362131', '9606.hsa-miR-659-3p', '9606.ENSP00000499582', '9606.ENSP00000422185', '9606.ENSP00000454229', '9606.ENSP00000221742', '9606.ENSP00000489407', '9606.ENSP00000359506', '9606.ENSP00000444433', '9606.ENSP00000414303', '9606.ENSP00000391803', '9606.ENSP00000379350', '9606.ENSP00000399403', '9606.hsa-miR-106a-5p', '9606.ENSP00000379915', '9606.ENSP00000254322', '9606.ENSP00000269228', '9606.ENSP00000403888', '9606.ENSP00000306894', '9606.ENSP00000254325', '9606.ENSP00000307863']}
2024-06-20 16:48:51,423 [DEBUG] py4...: ǀǀReturning 'get_table_columns':                        name
44033  9606.ENSP00000263160
43010  9606.ENSP00000227507
44036  9606.ENSP00000400142
43013  9606.ENSP00000252804
44039  9606.ENSP00000371985
...                     ...
43001  9606.ENSP00000269228
44027  9606.ENSP00000403888
43004  9606.ENSP00000306894
44030  9606.ENSP00000254325
43007  9606.ENSP00000307863

[734 rows x 1 columns]
2024-06-20 16:48:51,424 [DEBUG] py4...: ǀReturning 'get_selected_nodes': ['9606.hsa-miR-155-5p', '9606.hsa-miR-132-3p', '9606.hsa-miR-106b-5p', '9606.hsa-miR-1909-3p', '9606.ENSP00000378284', '9606.hsa-miR-760', '9606.hsa-miR-144-3p', '9606.hsa-miR-130a-3p', '9606.hsa-miR-548ae', '9606.NEAT1', '9606.FAM41C', '9606.ENSP00000370119', '9606.hsa-miR-559', '9606.hsa-miR-134-5p', '9606.hsa-miR-433-3p', '9606.hsa-miR-107', '9606.hsa-miR-9-5p', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.hsa-miR-124-3p', '9606.ENSP00000439585', '9606.hsa-miR-17-5p', '9606.AC007879.5', '9606.hsa-miR-29a-3p', '9606.hsa-miR-93-5p', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.hsa-miR-1225-3p', '9606.HTT-AS', '9606.FMR1-AS1', '9606.hsa-miR-150-5p', '9606.hsa-miR-9-3p', '9606.hsa-miR-548g-3p', '9606.hsa-miR-320d', '9606.MIR17HG', '9606.AC006129.1', '9606.ATXN8OS', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.hsa-miR-379-3p', '9606.ENSP00000462298', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.hsa-miR-659-3p', '9606.hsa-miR-106a-5p']
2024-06-20 16:48:51,424 [DEBUG] py4...: ǀCalling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,425 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,425 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,425 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:48:51,435 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 42582
}
],
 "errors":[]
}
2024-06-20 16:48:51,436 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 42582}]
2024-06-20 16:48:51,436 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:51,437 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,437 [DEBUG] py4...: ǀǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,438 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,438 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:51,444 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:51,444 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:51,444 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:51,445 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,445 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:51,454 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:48:51,455 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:48:51,455 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:48:51,455 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:48:51,456 [DEBUG] py4...: Returning 'create_column_filter': {'nodes': ['9606.hsa-miR-155-5p', '9606.hsa-miR-132-3p', '9606.hsa-miR-106b-5p', '9606.hsa-miR-1909-3p', '9606.ENSP00000378284', '9606.hsa-miR-760', '9606.hsa-miR-144-3p', '9606.hsa-miR-130a-3p', '9606.hsa-miR-548ae', '9606.NEAT1', '9606.FAM41C', '9606.ENSP00000370119', '9606.hsa-miR-559', '9606.hsa-miR-134-5p', '9606.hsa-miR-433-3p', '9606.hsa-miR-107', '9606.hsa-miR-9-5p', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.hsa-miR-124-3p', '9606.ENSP00000439585', '9606.hsa-miR-17-5p', '9606.AC007879.5', '9606.hsa-miR-29a-3p', '9606.hsa-miR-93-5p', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.hsa-miR-1225-3p', '9606.HTT-AS', '9606.FMR1-AS1', '9606.hsa-miR-150-5p', '9606.hsa-miR-9-3p', '9606.hsa-miR-548g-3p', '9606.hsa-miR-320d', '9606.MIR17HG', '9606.AC006129.1', '9606.ATXN8OS', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.hsa-miR-379-3p', '9606.ENSP00000462298', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.hsa-miR-659-3p', '9606.hsa-miR-106a-5p'], 'edges': None}
2024-06-20 16:48:51,456 [DEBUG] py4...: --------------------
2024-06-20 16:48:51,456 [DEBUG] py4...: Calling apply_filter('Columns without canonical name', network=26235)
2024-06-20 16:48:51,457 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,457 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,457 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:48:51,465 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot","Columns without canonical name"],
 "errors":[]
}
2024-06-20 16:48:51,465 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot', 'Columns without canonical name']
2024-06-20 16:48:51,466 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot', 'Columns without canonical name']
2024-06-20 16:48:51,466 [DEBUG] py4...: ǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,466 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,466 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:51,472 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:51,473 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:51,473 [DEBUG] py4...: ǀReturning 'get_network_suid': 26235
2024-06-20 16:48:51,473 [DEBUG] py4...: ǀCalling set_current_network(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,473 [DEBUG] py4...: ǀǀCalling get_network_suid(26235)
2024-06-20 16:48:51,473 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,474 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:51,480 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:51,480 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:51,480 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:51,480 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:26235"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,480 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:26235'}
2024-06-20 16:48:51,992 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:51,993 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:48:51,993 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:48:51,993 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without canonical name" network=SUID:"26235"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:51,994 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without canonical name', 'network': 'SUID:26235'}
2024-06-20 16:48:52,005 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:52,006 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:48:52,006 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,006 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,007 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:48:52,011 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:48:52,012 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:48:52,012 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:48:52,012 [DEBUG] py4...: ǀCalling get_selected_nodes(network=26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,012 [DEBUG] py4...: ǀǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,012 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,014 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:52,019 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:52,019 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:52,020 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:52,020 [DEBUG] py4...: ǀǀCalling get_selected_node_count(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,020 [DEBUG] py4...: ǀǀǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,020 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,020 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:52,026 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:52,027 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:52,027 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:52,027 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/26235/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,028 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/26235/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:52,033 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:48:52,033 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:48:52,033 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:48:52,033 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:48:52,034 [DEBUG] py4...: ǀCalling get_selected_edges(network=26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,034 [DEBUG] py4...: ǀǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,034 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,034 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:52,039 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:52,040 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:52,040 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:52,040 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,040 [DEBUG] py4...: ǀǀǀCalling get_network_suid(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,040 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,041 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:52,045 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:52,045 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:52,046 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 26235
2024-06-20 16:48:52,046 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/26235/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,046 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/26235/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:52,052 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:48:52,053 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:48:52,053 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:48:52,054 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:48:52,054 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:48:52,054 [DEBUG] py4...: --------------------
2024-06-20 16:48:52,055 [DEBUG] py4...: Calling delete_selected_nodes(26235)
2024-06-20 16:48:52,055 [DEBUG] py4...: ǀCalling get_network_name(26235, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,055 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', {'column': 'suid', 'query': 26235}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,055 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names), params: {'column': 'suid', 'query': 26235}
2024-06-20 16:48:52,059 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"KEGG hsa05017 network stringified","SUID":26235}]
2024-06-20 16:48:52,059 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}]
2024-06-20 16:48:52,060 [DEBUG] py4...: ǀReturning 'get_network_name': 'KEGG hsa05017 network stringified'
2024-06-20 16:48:52,060 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="KEGG hsa05017 network stringified"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,060 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'KEGG hsa05017 network stringified'}
2024-06-20 16:48:52,066 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:52,066 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:48:52,066 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:48:52,067 [DEBUG] py4...: --------------------
2024-06-20 16:48:52,067 [DEBUG] py4...: Calling apply_filter('Columns without canonical name', network=41686)
2024-06-20 16:48:52,067 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,067 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,068 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:48:52,073 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot","Columns without canonical name"],
 "errors":[]
}
2024-06-20 16:48:52,074 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot', 'Columns without canonical name']
2024-06-20 16:48:52,074 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot', 'Columns without canonical name']
2024-06-20 16:48:52,074 [DEBUG] py4...: ǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,074 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,074 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:52,079 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:52,080 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:52,080 [DEBUG] py4...: ǀReturning 'get_network_suid': 41686
2024-06-20 16:48:52,080 [DEBUG] py4...: ǀCalling set_current_network(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,080 [DEBUG] py4...: ǀǀCalling get_network_suid(41686)
2024-06-20 16:48:52,080 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,080 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:52,084 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:52,085 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:52,085 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:52,086 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:41686"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:52,086 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:41686'}
2024-06-20 16:48:53,387 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:53,387 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:48:53,387 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:48:53,388 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without canonical name" network=SUID:"41686"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,388 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without canonical name', 'network': 'SUID:41686'}
2024-06-20 16:48:53,396 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:53,397 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:48:53,398 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,398 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,398 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:48:53,403 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:48:53,404 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:48:53,405 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:48:53,405 [DEBUG] py4...: ǀCalling get_selected_nodes(network=41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,405 [DEBUG] py4...: ǀǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,406 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,406 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:53,412 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:53,413 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:53,413 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:53,413 [DEBUG] py4...: ǀǀCalling get_selected_node_count(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,414 [DEBUG] py4...: ǀǀǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,414 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,414 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:53,420 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:53,420 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:53,421 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:53,421 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/41686/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,422 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/41686/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:53,427 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:48:53,428 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:48:53,428 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 0
2024-06-20 16:48:53,428 [DEBUG] py4...: ǀReturning 'get_selected_nodes': None
2024-06-20 16:48:53,429 [DEBUG] py4...: ǀCalling get_selected_edges(network=41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,429 [DEBUG] py4...: ǀǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,430 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,430 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:53,434 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:53,435 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:53,435 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:53,435 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,436 [DEBUG] py4...: ǀǀǀCalling get_network_suid(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,436 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,437 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:53,443 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:53,443 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:53,443 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 41686
2024-06-20 16:48:53,444 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/41686/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,444 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/41686/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:53,449 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:48:53,450 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:48:53,450 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:48:53,450 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:48:53,450 [DEBUG] py4...: Returning 'apply_filter': {'nodes': None, 'edges': None}
2024-06-20 16:48:53,450 [DEBUG] py4...: --------------------
2024-06-20 16:48:53,451 [DEBUG] py4...: Calling delete_selected_nodes(41686)
2024-06-20 16:48:53,451 [DEBUG] py4...: ǀCalling get_network_name(41686, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,452 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', {'column': 'suid', 'query': 41686}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,452 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names), params: {'column': 'suid', 'query': 41686}
2024-06-20 16:48:53,457 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Wikipathways WP4760 network stringified","SUID":41686}]
2024-06-20 16:48:53,457 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}]
2024-06-20 16:48:53,457 [DEBUG] py4...: ǀReturning 'get_network_name': 'Wikipathways WP4760 network stringified'
2024-06-20 16:48:53,457 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="Wikipathways WP4760 network stringified"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,457 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'Wikipathways WP4760 network stringified'}
2024-06-20 16:48:53,462 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:53,463 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:48:53,463 [DEBUG] py4...: Returning 'delete_selected_nodes': {}
2024-06-20 16:48:53,463 [DEBUG] py4...: --------------------
2024-06-20 16:48:53,464 [DEBUG] py4...: Calling apply_filter('Columns without canonical name', network=42582)
2024-06-20 16:48:53,464 [DEBUG] py4...: ǀCalling get_filter_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,464 [DEBUG] py4...: ǀǀCalling commands_post('filter list', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,464 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/list), json: {}
2024-06-20 16:48:53,470 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": ["Default filter","Columns without uniprot","Columns without canonical name"],
 "errors":[]
}
2024-06-20 16:48:53,471 [DEBUG] py4...: ǀǀReturning 'commands_post': ['Default filter', 'Columns without uniprot', 'Columns without canonical name']
2024-06-20 16:48:53,471 [DEBUG] py4...: ǀReturning 'get_filter_list': ['Default filter', 'Columns without uniprot', 'Columns without canonical name']
2024-06-20 16:48:53,471 [DEBUG] py4...: ǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,472 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,472 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:53,476 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:53,477 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:53,477 [DEBUG] py4...: ǀReturning 'get_network_suid': 42582
2024-06-20 16:48:53,478 [DEBUG] py4...: ǀCalling set_current_network(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,478 [DEBUG] py4...: ǀǀCalling get_network_suid(42582)
2024-06-20 16:48:53,478 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,479 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:53,483 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:53,484 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:53,484 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:53,484 [DEBUG] py4...: ǀǀCalling commands_post('network set current network="SUID:42582"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:53,484 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:42582'}
2024-06-20 16:48:54,250 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:54,251 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-06-20 16:48:54,251 [DEBUG] py4...: ǀReturning 'set_current_network': {}
2024-06-20 16:48:54,252 [DEBUG] py4...: ǀCalling commands_post('filter apply container="filter" name="Columns without canonical name" network=SUID:"42582"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,252 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/filter/apply), json: {'container': 'filter', 'name': 'Columns without canonical name', 'network': 'SUID:42582'}
2024-06-20 16:48:54,305 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:48:54,306 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:48:54,307 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,307 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,307 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-06-20 16:48:54,315 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.1"}
2024-06-20 16:48:54,316 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1'}
2024-06-20 16:48:54,317 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.1', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-06-20 16:48:54,317 [DEBUG] py4...: ǀCalling get_selected_nodes(network=42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,317 [DEBUG] py4...: ǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,318 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,318 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:54,324 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:54,325 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:54,326 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:54,326 [DEBUG] py4...: ǀǀCalling get_selected_node_count(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,327 [DEBUG] py4...: ǀǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,327 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,327 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:54,335 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:54,335 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:54,336 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:54,336 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,336 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:54,342 [DEBUG] py4...: ǀǀǀOK[200], content: [44060,44075,44090,43103,44132,44141,44153,44165,44228,43349,44378,44420,44441,43421,44453,43433,43442,43460,44486,43520,44549,43529,43535,43571,44612,43670,44696,43685,42767,42824,44891,43871,42866,43892,42875,42878,42884,44936,43913,42905,42911,43988,42965,44003,44021]
2024-06-20 16:48:54,343 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [44060, 44075, 44090, 43103, 44132, 44141, 44153, 44165, 44228, 43349, 44378, 44420, 44441, 43421, 44453, 43433, 43442, 43460, 44486, 43520, 44549, 43529, 43535, 43571, 44612, 43670, 44696, 43685, 42767, 42824, 44891, 43871, 42866, 43892, 42875, 42878, 42884, 44936, 43913, 42905, 42911, 43988, 42965, 44003, 44021]
2024-06-20 16:48:54,343 [DEBUG] py4...: ǀǀReturning 'get_selected_node_count': 45
2024-06-20 16:48:54,343 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/42582/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,344 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/nodes), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:54,350 [DEBUG] py4...: ǀǀOK[200], content: [44060,44075,44090,43103,44132,44141,44153,44165,44228,43349,44378,44420,44441,43421,44453,43433,43442,43460,44486,43520,44549,43529,43535,43571,44612,43670,44696,43685,42767,42824,44891,43871,42866,43892,42875,42878,42884,44936,43913,42905,42911,43988,42965,44003,44021]
2024-06-20 16:48:54,351 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [44060, 44075, 44090, 43103, 44132, 44141, 44153, 44165, 44228, 43349, 44378, 44420, 44441, 43421, 44453, 43433, 43442, 43460, 44486, 43520, 44549, 43529, 43535, 43571, 44612, 43670, 44696, 43685, 42767, 42824, 44891, 43871, 42866, 43892, 42875, 42878, 42884, 44936, 43913, 42905, 42911, 43988, 42965, 44003, 44021]
2024-06-20 16:48:54,351 [DEBUG] py4...: ǀǀCalling get_table_columns('node', ['name'], 'default', 42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,351 [DEBUG] py4...: ǀǀǀCalling get_network_suid(42582, 'http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,352 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,352 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:54,359 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:54,359 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:54,360 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:54,360 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,360 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,361 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,361 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:54,367 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:54,367 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:54,367 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:54,369 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,369 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns)
2024-06-20 16:48:54,376 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false}]
2024-06-20 16:48:54,377 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:48:54,377 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'stringdb::canonical name': 'String', 'display name': 'String', 'stringdb::full name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', '@id': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'query term': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::imageurl': 'String', 'stringdb::STRING style': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'stringdb::disease score': 'Double', 'string_db': 'Integer'}
2024-06-20 16:48:54,377 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,378 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns/SUID)
2024-06-20 16:48:54,385 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[44033,43010,44036,43013,44039,43016,44042,43019,44045,43022,44048,43025,44051,43028,44054,43031,44057,43034,44060,43037,44063,43040,44066,43043,44069,43046,44072,43049,44075,43052,44078,43055,44081,43058,44084,43061,44087,43064,44090,43067,44093,43070,44096,43073,44099,43076,44102,43079,44105,43082,44108,43085,44111,43088,44114,43091,44117,43094,44120,43097,44123,43100,44126,43103,44129,43106,44132,43109,44135,43112,44138,43115,44141,43118,44144,43121,44147,43124,44150,43127,44153,43130,44156,43133,44159,43136,44162,43139,44165,43142,44168,43145,44171,43148,44174,43151,44177,43154,44180,43157,44183,43160,44186,43163,44189,43166,44192,43169,44195,43172,44198,43175,44201,43178,44204,43181,44207,43184,44210,43187,44213,43190,44216,43193,44219,43196,44222,43199,44225,43202,44228,43205,44231,43208,44234,43211,44237,43214,44240,43217,44243,43220,44246,43223,44249,43226,44252,43229,44255,43232,44258,43235,44261,43238,44264,43241,44267,43244,44270,43247,44273,43250,44276,43253,44279,43256,44282,43259,44285,43262,44288,43265,44291,43268,44294,43271,44297,43274,44300,43277,44303,43280,44306,43283,44309,43286,44312,43289,44315,43292,44318,43295,44321,43298,44324,43301,44327,43304,44330,43307,44333,43310,44336,43313,44339,43316,44342,43319,44345,43322,44348,43325,44351,43328,44354,43331,44357,43334,44360,43337,44363,43340,44366,43343,44369,43346,44372,43349,44375,43352,44378,43355,44381,43358,44384,43361,44387,43364,44390,43367,44393,43370,44396,43373,44399,43376,44402,43379,44405,43382,44408,43385,44411,43388,44414,43391,44417,43394,44420,43397,44423,43400,44426,43403,44429,43406,44432,43409,44435,43412,44438,43415,44441,43418,44444,43421,44447,43424,44450,43427,44453,43430,44456,43433,44459,43436,44462,43439,44465,43442,44468,43445,44471,43448,44474,43451,44477,43454,44480,43457,44483,43460,44486,43463,44489,43466,44492,43469,44495,43472,44498,43475,44501,43478,44504,43481,44507,43484,44510,43487,44513,43490,44516,43493,44519,43496,44522,43499,44525,43502,44528,43505,44531,43508,44534,43511,44537,43514,44540,43517,44543,43520,44546,43523,44549,43526,44552,43529,44555,43532,44558,43535,44561,43538,44564,43541,44567,43544,44570,43547,44573,43550,44576,43553,44579,43556,44582,43559,44585,43562,44588,43565,44591,43568,44594,43571,44597,43574,44600,43577,44603,43580,44606,43583,44609,43586,44612,43589,44615,43592,44618,43595,44621,43598,44624,43601,44627,43604,44630,43607,44633,43610,44636,43613,44639,43616,44642,43619,44645,43622,44648,43625,44651,43628,44654,43631,44657,43634,44660,43637,44663,43640,44666,43643,44669,43646,44672,43649,44675,43652,44678,43655,44681,43658,44684,43661,44687,43664,44690,43667,44693,43670,44696,43673,44699,43676,44702,43679,44705,43682,44708,43685,44711,43688,44714,43691,44717,43694,44720,43697,44723,43700,44726,43703,44729,43706,44732,43709,44735,43712,44738,43715,44741,43718,44744,43721,44747,43724,44750,43727,44753,43730,44756,43733,44759,43736,44762,43739,44765,43742,44768,43745,44771,43748,44774,43751,44777,43754,44780,43757,44783,43760,44786,43763,44789,43766,44792,43769,44795,43772,44798,43775,44801,43778,44804,43781,44807,43784,44810,43787,44813,43790,42767,44816,43793,42770,44819,43796,42773,44822,43799,42776,44825,43802,42779,44828,43805,42782,44831,43808,42785,44834,43811,42788,44837,43814,42791,44840,43817,42794,44843,43820,42797,44846,43823,42800,44849,43826,42803,44852,43829,42806,44855,43832,42809,44858,43835,42812,44861,43838,42815,44864,43841,42818,44867,43844,42821,44870,43847,42824,44873,43850,42827,44876,43853,42830,44879,43856,42833,44882,43859,42836,44885,43862,42839,44888,43865,42842,44891,43868,42845,44894,43871,42848,44897,43874,42851,44900,43877,42854,44903,43880,42857,44906,43883,42860,44909,43886,42863,44912,43889,42866,44915,43892,42869,44918,43895,42872,44921,43898,42875,44924,43901,42878,44927,43904,42881,44930,43907,42884,44933,43910,42887,44936,43913,42890,44939,43916,42893,44942,43919,42896,44945,43922,42899,44948,43925,42902,44951,43928,42905,44954,43931,42908,44957,43934,42911,44960,43937,42914,44963,43940,42917,44966,43943,42920,43946,42923,43949,42926,43952,42929,43955,42932,43958,42935,43961,42938,43964,42941,43967,42944,43970,42947,43973,42950,43976,42953,43979,42956,43982,42959,43985,42962,43988,42965,43991,42968,43994,42971,43997,42974,44000,42977,44003,42980,44006,42983,44009,42986,44012,42989,44015,42992,44018,42995,44021,42998,44024,43001,44027,43004,44030,43007]}
2024-06-20 16:48:54,386 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [44033, 43010, 44036, 43013, 44039, 43016, 44042, 43019, 44045, 43022, 44048, 43025, 44051, 43028, 44054, 43031, 44057, 43034, 44060, 43037, 44063, 43040, 44066, 43043, 44069, 43046, 44072, 43049, 44075, 43052, 44078, 43055, 44081, 43058, 44084, 43061, 44087, 43064, 44090, 43067, 44093, 43070, 44096, 43073, 44099, 43076, 44102, 43079, 44105, 43082, 44108, 43085, 44111, 43088, 44114, 43091, 44117, 43094, 44120, 43097, 44123, 43100, 44126, 43103, 44129, 43106, 44132, 43109, 44135, 43112, 44138, 43115, 44141, 43118, 44144, 43121, 44147, 43124, 44150, 43127, 44153, 43130, 44156, 43133, 44159, 43136, 44162, 43139, 44165, 43142, 44168, 43145, 44171, 43148, 44174, 43151, 44177, 43154, 44180, 43157, 44183, 43160, 44186, 43163, 44189, 43166, 44192, 43169, 44195, 43172, 44198, 43175, 44201, 43178, 44204, 43181, 44207, 43184, 44210, 43187, 44213, 43190, 44216, 43193, 44219, 43196, 44222, 43199, 44225, 43202, 44228, 43205, 44231, 43208, 44234, 43211, 44237, 43214, 44240, 43217, 44243, 43220, 44246, 43223, 44249, 43226, 44252, 43229, 44255, 43232, 44258, 43235, 44261, 43238, 44264, 43241, 44267, 43244, 44270, 43247, 44273, 43250, 44276, 43253, 44279, 43256, 44282, 43259, 44285, 43262, 44288, 43265, 44291, 43268, 44294, 43271, 44297, 43274, 44300, 43277, 44303, 43280, 44306, 43283, 44309, 43286, 44312, 43289, 44315, 43292, 44318, 43295, 44321, 43298, 44324, 43301, 44327, 43304, 44330, 43307, 44333, 43310, 44336, 43313, 44339, 43316, 44342, 43319, 44345, 43322, 44348, 43325, 44351, 43328, 44354, 43331, 44357, 43334, 44360, 43337, 44363, 43340, 44366, 43343, 44369, 43346, 44372, 43349, 44375, 43352, 44378, 43355, 44381, 43358, 44384, 43361, 44387, 43364, 44390, 43367, 44393, 43370, 44396, 43373, 44399, 43376, 44402, 43379, 44405, 43382, 44408, 43385, 44411, 43388, 44414, 43391, 44417, 43394, 44420, 43397, 44423, 43400, 44426, 43403, 44429, 43406, 44432, 43409, 44435, 43412, 44438, 43415, 44441, 43418, 44444, 43421, 44447, 43424, 44450, 43427, 44453, 43430, 44456, 43433, 44459, 43436, 44462, 43439, 44465, 43442, 44468, 43445, 44471, 43448, 44474, 43451, 44477, 43454, 44480, 43457, 44483, 43460, 44486, 43463, 44489, 43466, 44492, 43469, 44495, 43472, 44498, 43475, 44501, 43478, 44504, 43481, 44507, 43484, 44510, 43487, 44513, 43490, 44516, 43493, 44519, 43496, 44522, 43499, 44525, 43502, 44528, 43505, 44531, 43508, 44534, 43511, 44537, 43514, 44540, 43517, 44543, 43520, 44546, 43523, 44549, 43526, 44552, 43529, 44555, 43532, 44558, 43535, 44561, 43538, 44564, 43541, 44567, 43544, 44570, 43547, 44573, 43550, 44576, 43553, 44579, 43556, 44582, 43559, 44585, 43562, 44588, 43565, 44591, 43568, 44594, 43571, 44597, 43574, 44600, 43577, 44603, 43580, 44606, 43583, 44609, 43586, 44612, 43589, 44615, 43592, 44618, 43595, 44621, 43598, 44624, 43601, 44627, 43604, 44630, 43607, 44633, 43610, 44636, 43613, 44639, 43616, 44642, 43619, 44645, 43622, 44648, 43625, 44651, 43628, 44654, 43631, 44657, 43634, 44660, 43637, 44663, 43640, 44666, 43643, 44669, 43646, 44672, 43649, 44675, 43652, 44678, 43655, 44681, 43658, 44684, 43661, 44687, 43664, 44690, 43667, 44693, 43670, 44696, 43673, 44699, 43676, 44702, 43679, 44705, 43682, 44708, 43685, 44711, 43688, 44714, 43691, 44717, 43694, 44720, 43697, 44723, 43700, 44726, 43703, 44729, 43706, 44732, 43709, 44735, 43712, 44738, 43715, 44741, 43718, 44744, 43721, 44747, 43724, 44750, 43727, 44753, 43730, 44756, 43733, 44759, 43736, 44762, 43739, 44765, 43742, 44768, 43745, 44771, 43748, 44774, 43751, 44777, 43754, 44780, 43757, 44783, 43760, 44786, 43763, 44789, 43766, 44792, 43769, 44795, 43772, 44798, 43775, 44801, 43778, 44804, 43781, 44807, 43784, 44810, 43787, 44813, 43790, 42767, 44816, 43793, 42770, 44819, 43796, 42773, 44822, 43799, 42776, 44825, 43802, 42779, 44828, 43805, 42782, 44831, 43808, 42785, 44834, 43811, 42788, 44837, 43814, 42791, 44840, 43817, 42794, 44843, 43820, 42797, 44846, 43823, 42800, 44849, 43826, 42803, 44852, 43829, 42806, 44855, 43832, 42809, 44858, 43835, 42812, 44861, 43838, 42815, 44864, 43841, 42818, 44867, 43844, 42821, 44870, 43847, 42824, 44873, 43850, 42827, 44876, 43853, 42830, 44879, 43856, 42833, 44882, 43859, 42836, 44885, 43862, 42839, 44888, 43865, 42842, 44891, 43868, 42845, 44894, 43871, 42848, 44897, 43874, 42851, 44900, 43877, 42854, 44903, 43880, 42857, 44906, 43883, 42860, 44909, 43886, 42863, 44912, 43889, 42866, 44915, 43892, 42869, 44918, 43895, 42872, 44921, 43898, 42875, 44924, 43901, 42878, 44927, 43904, 42881, 44930, 43907, 42884, 44933, 43910, 42887, 44936, 43913, 42890, 44939, 43916, 42893, 44942, 43919, 42896, 44945, 43922, 42899, 44948, 43925, 42902, 44951, 43928, 42905, 44954, 43931, 42908, 44957, 43934, 42911, 44960, 43937, 42914, 44963, 43940, 42917, 44966, 43943, 42920, 43946, 42923, 43949, 42926, 43952, 42929, 43955, 42932, 43958, 42935, 43961, 42938, 43964, 42941, 43967, 42944, 43970, 42947, 43973, 42950, 43976, 42953, 43979, 42956, 43982, 42959, 43985, 42962, 43988, 42965, 43991, 42968, 43994, 42971, 43997, 42974, 44000, 42977, 44003, 42980, 44006, 42983, 44009, 42986, 44012, 42989, 44015, 42992, 44018, 42995, 44021, 42998, 44024, 43001, 44027, 43004, 44030, 43007]}
2024-06-20 16:48:54,387 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,388 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/tables/defaultnode/columns/name)
2024-06-20 16:48:54,394 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"name","values":["9606.ENSP00000263160","9606.ENSP00000227507","9606.ENSP00000400142","9606.ENSP00000252804","9606.ENSP00000371985","9606.ENSP00000418447","9606.ENSP00000342056","9606.ENSP00000362014","9606.ENSP00000265459","9606.ENSP00000258106","9606.ENSP00000263038","9606.ENSP00000326366","9606.ENSP00000450873","9606.ENSP00000354929","9606.ENSP00000221996","9606.ENSP00000478887","9606.ENSP00000331040","9606.ENSP00000408526","9606.hsa-miR-155-5p","9606.ENSP00000477437","9606.ENSP00000246914","9606.ENSP00000359095","9606.ENSP00000299001","9606.ENSP00000432568","9606.ENSP00000220420","9606.ENSP00000380903","9606.ENSP00000392423","9606.ENSP00000498362","9606.hsa-miR-132-3p","9606.ENSP00000374354","9606.ENSP00000355231","9606.ENSP00000354923","9606.ENSP00000378394","9606.ENSP00000351777","9606.ENSP00000336712","9606.ENSP00000260665","9606.ENSP00000215095","9606.ENSP00000390941","9606.hsa-miR-106b-5p","9606.ENSP00000443631","9606.ENSP00000442920","9606.ENSP00000484060","9606.ENSP00000312987","9606.ENSP00000224140","9606.ENSP00000473623","9606.ENSP00000295987","9606.ENSP00000262039","9606.ENSP00000419243","9606.ENSP00000323511","9606.ENSP00000358283","9606.ENSP00000321455","9606.ENSP00000364204","9606.ENSP00000264335","9606.ENSP00000287713","9606.ENSP00000252482","9606.ENSP00000282020","9606.ENSP00000265421","9606.ENSP00000282146","9606.ENSP00000244769","9606.ENSP00000364210","9606.ENSP00000303709","9606.ENSP00000430432","9606.ENSP00000278616","9606.hsa-miR-1909-3p","9606.ENSP00000354497","9606.ENSP00000352738","9606.ENSP00000378284","9606.ENSP00000228872","9606.ENSP00000470248","9606.ENSP00000398698","9606.ENSP00000480050","9606.ENSP00000337353","9606.hsa-miR-760","9606.ENSP00000406293","9606.ENSP00000356790","9606.ENSP00000260116","9606.ENSP00000230354","9606.ENSP00000442793","9606.ENSP00000255631","9606.ENSP00000489624","9606.hsa-miR-144-3p","9606.ENSP00000464342","9606.ENSP00000252486","9606.ENSP00000285419","9606.ENSP00000369689","9606.ENSP00000286628","9606.ENSP00000343001","9606.ENSP00000391942","9606.hsa-miR-130a-3p","9606.ENSP00000441685","9606.ENSP00000302967","9606.ENSP00000490614","9606.ENSP00000263257","9606.ENSP00000358155","9606.ENSP00000428994","9606.ENSP00000383199","9606.ENSP00000359890","9606.ENSP00000340989","9606.ENSP00000265431","9606.ENSP00000292246","9606.ENSP00000354125","9606.ENSP00000295756","9606.ENSP00000358967","9606.ENSP00000358151","9606.ENSP00000310585","9606.ENSP00000362399","9606.ENSP00000357876","9606.ENSP00000363123","9606.ENSP00000417864","9606.ENSP00000295757","9606.ENSP00000354360","9606.ENSP00000040584","9606.ENSP00000492363","9606.ENSP00000365301","9606.ENSP00000219476","9606.ENSP00000386229","9606.ENSP00000291700","9606.ENSP00000287820","9606.ENSP00000368007","9606.ENSP00000263754","9606.ENSP00000288490","9606.ENSP00000284551","9606.ENSP00000434241","9606.ENSP00000302108","9606.ENSP00000403343","9606.ENSP00000385142","9606.ENSP00000264036","9606.ENSP00000283228","9606.ENSP00000391381","9606.ENSP00000406286","9606.hsa-miR-548ae","9606.ENSP00000479719","9606.ENSP00000320347","9606.ENSP00000264606","9606.ENSP00000258962","9606.ENSP00000337103","9606.ENSP00000424566","9606.ENSP00000270142","9606.ENSP00000426503","9606.ENSP00000272444","9606.ENSP00000402257","9606.ENSP00000298910","9606.ENSP00000264276","9606.ENSP00000341826","9606.ENSP00000269601","9606.ENSP00000345195","9606.ENSP00000366070","9606.ENSP00000294435","9606.ENSP00000277120","9606.ENSP00000480916","9606.ENSP00000391269","9606.ENSP00000357292","9606.ENSP00000480012","9606.ENSP00000303356","9606.ENSP00000494538","9606.ENSP00000323046","9606.ENSP00000220592","9606.ENSP00000053867","9606.ENSP00000354111","9606.ENSP00000387593","9606.ENSP00000415676","9606.ENSP00000282486","9606.ENSP00000240185","9606.ENSP00000391723","9606.ENSP00000497806","9606.ENSP00000351742","9606.ENSP00000496959","9606.ENSP00000376322","9606.ENSP00000254488","9606.ENSP00000335153","9606.ENSP00000266594","9606.ENSP00000261667","9606.ENSP00000435466","9606.ENSP00000263967","9606.ENSP00000313829","9606.ENSP00000487785","9606.ENSP00000265381","9606.ENSP00000410769","9606.ENSP00000345997","9606.ENSP00000261427","9606.ENSP00000265379","9606.ENSP00000257290","9606.ENSP00000225916","9606.ENSP00000246186","9606.ENSP00000481593","9606.ENSP00000500386","9606.ENSP00000439937","9606.ENSP00000313007","9606.ENSP00000370571","9606.ENSP00000295897","9606.ENSP00000297261","9606.ENSP00000362299","9606.ENSP00000310561","9606.ENSP00000295777","9606.ENSP00000354346","9606.ENSP00000345064","9606.ENSP00000282928","9606.ENSP00000387699","9606.ENSP00000309457","9606.ENSP00000258149","9606.ENSP00000381488","9606.ENSP00000364118","9606.ENSP00000298596","9606.ENSP00000272317","9606.ENSP00000267890","9606.ENSP00000497594","9606.ENSP00000379287","9606.ENSP00000497112","9606.ENSP00000360660","9606.ENSP00000397259","9606.ENSP00000266682","9606.ENSP00000477999","9606.ENSP00000265351","9606.ENSP00000282356","9606.ENSP00000301727","9606.ENSP00000351614","9606.ENSP00000369127","9606.ENSP00000313377","9606.ENSP00000370589","9606.ENSP00000339867","9606.ENSP00000302814","9606.ENSP00000228644","9606.ENSP00000343690","9606.ENSP00000410759","9606.ENSP00000264498","9606.ENSP00000356982","9606.ENSP00000264255","9606.NEAT1","9606.ENSP00000436679","9606.ENSP00000381382","9606.FAM41C","9606.ENSP00000379181","9606.ENSP00000324806","9606.ENSP00000435412","9606.ENSP00000469455","9606.ENSP00000436864","9606.ENSP00000354335","9606.ENSP00000401633","9606.ENSP00000361405","9606.ENSP00000386710","9606.ENSP00000384625","9606.ENSP00000265171","9606.ENSP00000489189","9606.ENSP00000259727","9606.ENSP00000332549","9606.ENSP00000340278","9606.ENSP00000231004","9606.ENSP00000343552","9606.ENSP00000494750","9606.ENSP00000260950","9606.ENSP00000264033","9606.ENSP00000369145","9606.ENSP00000363822","9606.ENSP00000409007","9606.ENSP00000254108","9606.ENSP00000354558","9606.ENSP00000425561","9606.ENSP00000482753","9606.ENSP00000370119","9606.ENSP00000355645","9606.ENSP00000319591","9606.ENSP00000354553","9606.ENSP00000340292","9606.ENSP00000370125","9606.ENSP00000265113","9606.ENSP00000375810","9606.ENSP00000355657","9606.ENSP00000352257","9606.ENSP00000451828","9606.ENSP00000382104","9606.ENSP00000401371","9606.ENSP00000222330","9606.hsa-miR-559","9606.ENSP00000308533","9606.ENSP00000377681","9606.hsa-miR-134-5p","9606.ENSP00000250113","9606.ENSP00000221485","9606.ENSP00000254719","9606.ENSP00000222574","9606.hsa-miR-433-3p","9606.ENSP00000352252","9606.ENSP00000418994","9606.hsa-miR-107","9606.ENSP00000306920","9606.ENSP00000364813","9606.ENSP00000365458","9606.ENSP00000352011","9606.ENSP00000397297","9606.hsa-miR-9-5p","9606.ENSP00000497217","9606.ENSP00000343535","9606.ENSP00000216200","9606.ENSP00000425979","9606.ENSP00000365576","9606.ENSP00000419395","9606.ENSP00000368966","9606.ENSP00000492795","9606.ENSP00000261366","9606.ENSP00000395535","9606.ENSP00000329918","9606.hsa-miR-101-3p","9606.hsa-miR-520c-3p","9606.ENSP00000291568","9606.ENSP00000368970","9606.ENSP00000262904","9606.ENSP00000405327","9606.ENSP00000467262","9606.ENSP00000261367","9606.ENSP00000371101","9606.ENSP00000489829","9606.ENSP00000392028","9606.ENSP00000471191","9606.ENSP00000221233","9606.ENSP00000305702","9606.ENSP00000481554","9606.ENSP00000379616","9606.ENSP00000467024","9606.ENSP00000374049","9606.ENSP00000355511","9606.ENSP00000250003","9606.ENSP00000332772","9606.ENSP00000339835","9606.ENSP00000362649","9606.ENSP00000338629","9606.ENSP00000360108","9606.ENSP00000365227","9606.ENSP00000353331","9606.ENSP00000301587","9606.ENSP00000222584","9606.ENSP00000380602","9606.ENSP00000259708","9606.ENSP00000327513","9606.ENSP00000447537","9606.ENSP00000340820","9606.ENSP00000246672","9606.ENSP00000254722","9606.ENSP00000311816","9606.ENSP00000499501","9606.ENSP00000320650","9606.ENSP00000498653","9606.hsa-miR-124-3p","9606.ENSP00000284240","9606.ENSP00000361433","9606.ENSP00000439585","9606.ENSP00000316032","9606.ENSP00000368984","9606.hsa-miR-17-5p","9606.ENSP00000366563","9606.ENSP00000419260","9606.ENSP00000237014","9606.AC007879.5","9606.ENSP00000323148","9606.ENSP00000446576","9606.ENSP00000263431","9606.ENSP00000355747","9606.ENSP00000405674","9606.ENSP00000354416","9606.ENSP00000338512","9606.ENSP00000356953","9606.ENSP00000399376","9606.ENSP00000359489","9606.ENSP00000298556","9606.ENSP00000355865","9606.ENSP00000226382","9606.ENSP00000355741","9606.ENSP00000346483","9606.ENSP00000246548","9606.ENSP00000304643","9606.ENSP00000373413","9606.ENSP00000254810","9606.ENSP00000376921","9606.ENSP00000302100","9606.ENSP00000350170","9606.ENSP00000252996","9606.hsa-miR-29a-3p","9606.ENSP00000366330","9606.ENSP00000248600","9606.ENSP00000216218","9606.ENSP00000306138","9606.ENSP00000288943","9606.ENSP00000202625","9606.ENSP00000349748","9606.ENSP00000245451","9606.ENSP00000366452","9606.ENSP00000360231","9606.hsa-miR-93-5p","9606.ENSP00000471851","9606.ENSP00000364270","9606.ENSP00000340125","9606.ENSP00000302216","9606.ENSP00000343515","9606.ENSP00000221801","9606.ENSP00000501150","9606.ENSP00000413035","9606.ENSP00000265164","9606.ENSP00000359804","9606.ENSP00000259711","9606.ENSP00000415579","9606.ENSP00000306253","9606.ENSP00000273320","9606.ENSP00000305288","9606.ENSP00000418721","9606.ENSP00000458663","9606.ENSP00000307900","9606.ENSP00000329357","9606.ENSP00000496695","9606.ENSP00000318585","9606.ENSP00000418960","9606.ENSP00000478249","9606.ENSP00000303540","9606.ENSP00000393379","9606.ENSP00000240316","9606.ENSP00000457205","9606.ENSP00000260386","9606.ENSP00000288135","9606.ENSP00000368884","9606.ENSP00000458537","9606.ENSP00000454852","9606.ENSP00000338173","9606.ENSP00000285667","9606.ENSP00000380070","9606.ENSP00000368881","9606.ENSP00000359019","9606.ENSP00000477715","9606.ENSP00000417901","9606.ENSP00000221930","9606.ENSP00000490107","9606.ENSP00000332194","9606.ENSP00000219197","9606.ENSP00000180166","9606.ENSP00000381185","9606.ENSP00000316842","9606.ENSP00000254079","9606.ENSP00000296271","9606.ENSP00000362300","9606.ENSP00000264867","9606.ENSP00000349298","9606.ENSP00000311032","9606.ENSP00000295900","9606.ENSP00000293288","9606.SNORD58B","9606.hsa-miR-34c-5p","9606.ENSP00000306561","9606.ENSP00000500990","9606.ENSP00000256261","9606.ENSP00000295589","9606.ENSP00000419081","9606.ENSP00000475626","9606.ENSP00000479667","9606.ENSP00000233813","9606.hsa-miR-1225-3p","9606.ENSP00000406209","9606.ENSP00000455698","9606.ENSP00000348645","9606.ENSP00000321835","9606.ENSP00000216127","9606.ENSP00000371133","9606.ENSP00000369863","9606.ENSP00000261601","9606.ENSP00000300213","9606.ENSP00000225504","9606.ENSP00000264552","9606.ENSP00000308610","9606.ENSP00000495360","9606.ENSP00000421339","9606.ENSP00000240100","9606.ENSP00000381057","9606.ENSP00000334002","9606.ENSP00000411355","9606.ENSP00000333277","9606.ENSP00000295910","9606.ENSP00000438574","9606.ENSP00000340467","9606.ENSP00000377372","9606.ENSP00000477141","9606.ENSP00000463653","9606.ENSP00000360493","9606.ENSP00000310036","9606.ENSP00000385410","9606.ENSP00000249396","9606.ENSP00000294702","9606.ENSP00000357583","9606.ENSP00000349168","9606.ENSP00000276654","9606.ENSP00000215832","9606.ENSP00000216254","9606.ENSP00000261731","9606.ENSP00000324560","9606.ENSP00000362680","9606.ENSP00000346694","9606.ENSP00000353414","9606.ENSP00000437125","9606.ENSP00000409279","9606.ENSP00000349722","9606.ENSP00000350386","9606.ENSP00000283195","9606.ENSP00000339004","9606.ENSP00000264689","9606.ENSP00000321606","9606.ENSP00000369996","9606.ENSP00000414856","9606.ENSP00000323588","9606.ENSP00000248975","9606.ENSP00000181796","9606.ENSP00000371267","9606.ENSP00000378338","9606.ENSP00000370058","9606.ENSP00000239231","9606.ENSP00000315299","9606.ENSP00000378699","9606.ENSP00000415822","9606.ENSP00000333262","9606.ENSP00000370193","9606.ENSP00000483254","9606.ENSP00000422435","9606.ENSP00000482169","9606.ENSP00000258415","9606.ENSP00000380432","9606.ENSP00000349156","9606.ENSP00000253408","9606.ENSP00000384474","9606.HTT-AS","9606.ENSP00000358784","9606.ENSP00000265195","9606.ENSP00000440045","9606.ENSP00000378476","9606.ENSP00000362205","9606.ENSP00000252934","9606.ENSP00000250495","9606.ENSP00000340330","9606.ENSP00000247225","9606.ENSP00000310129","9606.ENSP00000360266","9606.ENSP00000296755","9606.ENSP00000359719","9606.ENSP00000499387","9606.ENSP00000358089","9606.ENSP00000230321","9606.ENSP00000377936","9606.ENSP00000329403","9606.ENSP00000216144","9606.ENSP00000314173","9606.ENSP00000430241","9606.ENSP00000319060","9606.ENSP00000354859","9606.ENSP00000430000","9606.ENSP00000325863","9606.ENSP00000258302","9606.ENSP00000476119","9606.ENSP00000366488","9606.ENSP00000481848","9606.ENSP00000234389","9606.ENSP00000437256","9606.ENSP00000279488","9606.ENSP00000363435","9606.ENSP00000366249","9606.ENSP00000398632","9606.ENSP00000477455","9606.ENSP00000254976","9606.ENSP00000316357","9606.ENSP00000216714","9606.ENSP00000347896","9606.ENSP00000269305","9606.ENSP00000320821","9606.ENSP00000264657","9606.ENSP00000353646","9606.ENSP00000397563","9606.ENSP00000263205","9606.ENSP00000353767","9606.ENSP00000353864","9606.ENSP00000345347","9606.ENSP00000265081","9606.ENSP00000318635","9606.ENSP00000408617","9606.ENSP00000364639","9606.ENSP00000223129","9606.ENSP00000370744","9606.ENSP00000307786","9606.FMR1-AS1","9606.ENSP00000428426","9606.ENSP00000305480","9606.ENSP00000291295","9606.ENSP00000453858","9606.ENSP00000245255","9606.ENSP00000261523","9606.ENSP00000377015","9606.ENSP00000453170","9606.ENSP00000244061","9606.ENSP00000293190","9606.ENSP00000276079","9606.ENSP00000269143","9606.ENSP00000355028","9606.ENSP00000370083","9606.ENSP00000268058","9606.ENSP00000263209","9606.ENSP00000278379","9606.ENSP00000347184","9606.hsa-miR-150-5p","9606.ENSP00000365601","9606.ENSP00000307604","9606.ENSP00000357206","9606.hsa-miR-9-3p","9606.ENSP00000361021","9606.ENSP00000334463","9606.ENSP00000348056","9606.ENSP00000386786","9606.ENSP00000357565","9606.ENSP00000332706","9606.ENSP00000296526","9606.ENSP00000458065","9606.ENSP00000385675","9606.ENSP00000305422","9606.ENSP00000359727","9606.ENSP00000362578","9606.ENSP00000365861","9606.ENSP00000356231","9606.ENSP00000306330","9606.ENSP00000361027","9606.ENSP00000378487","9606.ENSP00000431162","9606.hsa-miR-548g-3p","9606.ENSP00000371729","9606.hsa-miR-320d","9606.ENSP00000304331","9606.ENSP00000013807","9606.ENSP00000435637","9606.ENSP00000385216","9606.ENSP00000346671","9606.ENSP00000427900","9606.MIR17HG","9606.ENSP00000350928","9606.ENSP00000360280","9606.AC006129.1","9606.ENSP00000219548","9606.ENSP00000282753","9606.ENSP00000216727","9606.ENSP00000284262","9606.ENSP00000261837","9606.ATXN8OS","9606.ENSP00000368314","9606.ENSP00000374552","9606.ENSP00000256079","9606.hsa-miR-128-3p","9606.hsa-miR-4305","9606.ENSP00000315137","9606.ENSP00000347997","9606.ENSP00000261712","9606.ENSP00000376753","9606.ENSP00000406549","9606.ENSP00000317333","9606.ENSP00000399851","9606.ENSP00000369531","9606.ENSP00000358886","9606.ENSP00000383042","9606.ENSP00000403397","9606.ENSP00000359978","9606.ENSP00000374455","9606.ENSP00000429763","9606.ENSP00000438886","9606.hsa-miR-379-3p","9606.ENSP00000262367","9606.ENSP00000353072","9606.ENSP00000376637","9606.ENSP00000369895","9606.ENSP00000376197","9606.ENSP00000462298","9606.ENSP00000262241","9606.ENSP00000355370","9606.ENSP00000225577","9606.ENSP00000333363","9606.ENSP00000376077","9606.ENSP00000347170","9606.ENSP00000358525","9606.ENSP00000302961","9606.ENSP00000324173","9606.ENSP00000309591","9606.ENSP00000419782","9606.ENSP00000345571","9606.ENSP00000418572","9606.ENSP00000495557","9606.ENSP00000327687","9606.ENSP00000309595","9606.ENSP00000365514","9606.ENSP00000361930","9606.ENSP00000270225","9606.ENSP00000290649","9606.ENSP00000362485","9606.ENSP00000309477","9606.ENSP00000386458","9606.ENSP00000345575","9606.ENSP00000388638","9606.ENSP00000346534","9606.ENSP00000270349","9606.ENSP00000368332","9606.ENSP00000212015","9606.ENSP00000405965","9606.ENSP00000284981","9606.ENSP00000345206","9606.ENSP00000282561","9606.ENSP00000493382","9606.ENSP00000498255","9606.ENSP00000263025","9606.ENSP00000478877","9606.hsa-miR-548w","9606.hsa-miR-133b","9606.ENSP00000462745","9606.ENSP00000352516","9606.ENSP00000358518","9606.ENSP00000405388","9606.ENSP00000268712","9606.ENSP00000359085","9606.ENSP00000360609","9606.ENSP00000362131","9606.hsa-miR-659-3p","9606.ENSP00000499582","9606.ENSP00000422185","9606.ENSP00000454229","9606.ENSP00000221742","9606.ENSP00000489407","9606.ENSP00000359506","9606.ENSP00000444433","9606.ENSP00000414303","9606.ENSP00000391803","9606.ENSP00000379350","9606.ENSP00000399403","9606.hsa-miR-106a-5p","9606.ENSP00000379915","9606.ENSP00000254322","9606.ENSP00000269228","9606.ENSP00000403888","9606.ENSP00000306894","9606.ENSP00000254325","9606.ENSP00000307863"]}
2024-06-20 16:48:54,396 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000263160', '9606.ENSP00000227507', '9606.ENSP00000400142', '9606.ENSP00000252804', '9606.ENSP00000371985', '9606.ENSP00000418447', '9606.ENSP00000342056', '9606.ENSP00000362014', '9606.ENSP00000265459', '9606.ENSP00000258106', '9606.ENSP00000263038', '9606.ENSP00000326366', '9606.ENSP00000450873', '9606.ENSP00000354929', '9606.ENSP00000221996', '9606.ENSP00000478887', '9606.ENSP00000331040', '9606.ENSP00000408526', '9606.hsa-miR-155-5p', '9606.ENSP00000477437', '9606.ENSP00000246914', '9606.ENSP00000359095', '9606.ENSP00000299001', '9606.ENSP00000432568', '9606.ENSP00000220420', '9606.ENSP00000380903', '9606.ENSP00000392423', '9606.ENSP00000498362', '9606.hsa-miR-132-3p', '9606.ENSP00000374354', '9606.ENSP00000355231', '9606.ENSP00000354923', '9606.ENSP00000378394', '9606.ENSP00000351777', '9606.ENSP00000336712', '9606.ENSP00000260665', '9606.ENSP00000215095', '9606.ENSP00000390941', '9606.hsa-miR-106b-5p', '9606.ENSP00000443631', '9606.ENSP00000442920', '9606.ENSP00000484060', '9606.ENSP00000312987', '9606.ENSP00000224140', '9606.ENSP00000473623', '9606.ENSP00000295987', '9606.ENSP00000262039', '9606.ENSP00000419243', '9606.ENSP00000323511', '9606.ENSP00000358283', '9606.ENSP00000321455', '9606.ENSP00000364204', '9606.ENSP00000264335', '9606.ENSP00000287713', '9606.ENSP00000252482', '9606.ENSP00000282020', '9606.ENSP00000265421', '9606.ENSP00000282146', '9606.ENSP00000244769', '9606.ENSP00000364210', '9606.ENSP00000303709', '9606.ENSP00000430432', '9606.ENSP00000278616', '9606.hsa-miR-1909-3p', '9606.ENSP00000354497', '9606.ENSP00000352738', '9606.ENSP00000378284', '9606.ENSP00000228872', '9606.ENSP00000470248', '9606.ENSP00000398698', '9606.ENSP00000480050', '9606.ENSP00000337353', '9606.hsa-miR-760', '9606.ENSP00000406293', '9606.ENSP00000356790', '9606.ENSP00000260116', '9606.ENSP00000230354', '9606.ENSP00000442793', '9606.ENSP00000255631', '9606.ENSP00000489624', '9606.hsa-miR-144-3p', '9606.ENSP00000464342', '9606.ENSP00000252486', '9606.ENSP00000285419', '9606.ENSP00000369689', '9606.ENSP00000286628', '9606.ENSP00000343001', '9606.ENSP00000391942', '9606.hsa-miR-130a-3p', '9606.ENSP00000441685', '9606.ENSP00000302967', '9606.ENSP00000490614', '9606.ENSP00000263257', '9606.ENSP00000358155', '9606.ENSP00000428994', '9606.ENSP00000383199', '9606.ENSP00000359890', '9606.ENSP00000340989', '9606.ENSP00000265431', '9606.ENSP00000292246', '9606.ENSP00000354125', '9606.ENSP00000295756', '9606.ENSP00000358967', '9606.ENSP00000358151', '9606.ENSP00000310585', '9606.ENSP00000362399', '9606.ENSP00000357876', '9606.ENSP00000363123', '9606.ENSP00000417864', '9606.ENSP00000295757', '9606.ENSP00000354360', '9606.ENSP00000040584', '9606.ENSP00000492363', '9606.ENSP00000365301', '9606.ENSP00000219476', '9606.ENSP00000386229', '9606.ENSP00000291700', '9606.ENSP00000287820', '9606.ENSP00000368007', '9606.ENSP00000263754', '9606.ENSP00000288490', '9606.ENSP00000284551', '9606.ENSP00000434241', '9606.ENSP00000302108', '9606.ENSP00000403343', '9606.ENSP00000385142', '9606.ENSP00000264036', '9606.ENSP00000283228', '9606.ENSP00000391381', '9606.ENSP00000406286', '9606.hsa-miR-548ae', '9606.ENSP00000479719', '9606.ENSP00000320347', '9606.ENSP00000264606', '9606.ENSP00000258962', '9606.ENSP00000337103', '9606.ENSP00000424566', '9606.ENSP00000270142', '9606.ENSP00000426503', '9606.ENSP00000272444', '9606.ENSP00000402257', '9606.ENSP00000298910', '9606.ENSP00000264276', '9606.ENSP00000341826', '9606.ENSP00000269601', '9606.ENSP00000345195', '9606.ENSP00000366070', '9606.ENSP00000294435', '9606.ENSP00000277120', '9606.ENSP00000480916', '9606.ENSP00000391269', '9606.ENSP00000357292', '9606.ENSP00000480012', '9606.ENSP00000303356', '9606.ENSP00000494538', '9606.ENSP00000323046', '9606.ENSP00000220592', '9606.ENSP00000053867', '9606.ENSP00000354111', '9606.ENSP00000387593', '9606.ENSP00000415676', '9606.ENSP00000282486', '9606.ENSP00000240185', '9606.ENSP00000391723', '9606.ENSP00000497806', '9606.ENSP00000351742', '9606.ENSP00000496959', '9606.ENSP00000376322', '9606.ENSP00000254488', '9606.ENSP00000335153', '9606.ENSP00000266594', '9606.ENSP00000261667', '9606.ENSP00000435466', '9606.ENSP00000263967', '9606.ENSP00000313829', '9606.ENSP00000487785', '9606.ENSP00000265381', '9606.ENSP00000410769', '9606.ENSP00000345997', '9606.ENSP00000261427', '9606.ENSP00000265379', '9606.ENSP00000257290', '9606.ENSP00000225916', '9606.ENSP00000246186', '9606.ENSP00000481593', '9606.ENSP00000500386', '9606.ENSP00000439937', '9606.ENSP00000313007', '9606.ENSP00000370571', '9606.ENSP00000295897', '9606.ENSP00000297261', '9606.ENSP00000362299', '9606.ENSP00000310561', '9606.ENSP00000295777', '9606.ENSP00000354346', '9606.ENSP00000345064', '9606.ENSP00000282928', '9606.ENSP00000387699', '9606.ENSP00000309457', '9606.ENSP00000258149', '9606.ENSP00000381488', '9606.ENSP00000364118', '9606.ENSP00000298596', '9606.ENSP00000272317', '9606.ENSP00000267890', '9606.ENSP00000497594', '9606.ENSP00000379287', '9606.ENSP00000497112', '9606.ENSP00000360660', '9606.ENSP00000397259', '9606.ENSP00000266682', '9606.ENSP00000477999', '9606.ENSP00000265351', '9606.ENSP00000282356', '9606.ENSP00000301727', '9606.ENSP00000351614', '9606.ENSP00000369127', '9606.ENSP00000313377', '9606.ENSP00000370589', '9606.ENSP00000339867', '9606.ENSP00000302814', '9606.ENSP00000228644', '9606.ENSP00000343690', '9606.ENSP00000410759', '9606.ENSP00000264498', '9606.ENSP00000356982', '9606.ENSP00000264255', '9606.NEAT1', '9606.ENSP00000436679', '9606.ENSP00000381382', '9606.FAM41C', '9606.ENSP00000379181', '9606.ENSP00000324806', '9606.ENSP00000435412', '9606.ENSP00000469455', '9606.ENSP00000436864', '9606.ENSP00000354335', '9606.ENSP00000401633', '9606.ENSP00000361405', '9606.ENSP00000386710', '9606.ENSP00000384625', '9606.ENSP00000265171', '9606.ENSP00000489189', '9606.ENSP00000259727', '9606.ENSP00000332549', '9606.ENSP00000340278', '9606.ENSP00000231004', '9606.ENSP00000343552', '9606.ENSP00000494750', '9606.ENSP00000260950', '9606.ENSP00000264033', '9606.ENSP00000369145', '9606.ENSP00000363822', '9606.ENSP00000409007', '9606.ENSP00000254108', '9606.ENSP00000354558', '9606.ENSP00000425561', '9606.ENSP00000482753', '9606.ENSP00000370119', '9606.ENSP00000355645', '9606.ENSP00000319591', '9606.ENSP00000354553', '9606.ENSP00000340292', '9606.ENSP00000370125', '9606.ENSP00000265113', '9606.ENSP00000375810', '9606.ENSP00000355657', '9606.ENSP00000352257', '9606.ENSP00000451828', '9606.ENSP00000382104', '9606.ENSP00000401371', '9606.ENSP00000222330', '9606.hsa-miR-559', '9606.ENSP00000308533', '9606.ENSP00000377681', '9606.hsa-miR-134-5p', '9606.ENSP00000250113', '9606.ENSP00000221485', '9606.ENSP00000254719', '9606.ENSP00000222574', '9606.hsa-miR-433-3p', '9606.ENSP00000352252', '9606.ENSP00000418994', '9606.hsa-miR-107', '9606.ENSP00000306920', '9606.ENSP00000364813', '9606.ENSP00000365458', '9606.ENSP00000352011', '9606.ENSP00000397297', '9606.hsa-miR-9-5p', '9606.ENSP00000497217', '9606.ENSP00000343535', '9606.ENSP00000216200', '9606.ENSP00000425979', '9606.ENSP00000365576', '9606.ENSP00000419395', '9606.ENSP00000368966', '9606.ENSP00000492795', '9606.ENSP00000261366', '9606.ENSP00000395535', '9606.ENSP00000329918', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.ENSP00000291568', '9606.ENSP00000368970', '9606.ENSP00000262904', '9606.ENSP00000405327', '9606.ENSP00000467262', '9606.ENSP00000261367', '9606.ENSP00000371101', '9606.ENSP00000489829', '9606.ENSP00000392028', '9606.ENSP00000471191', '9606.ENSP00000221233', '9606.ENSP00000305702', '9606.ENSP00000481554', '9606.ENSP00000379616', '9606.ENSP00000467024', '9606.ENSP00000374049', '9606.ENSP00000355511', '9606.ENSP00000250003', '9606.ENSP00000332772', '9606.ENSP00000339835', '9606.ENSP00000362649', '9606.ENSP00000338629', '9606.ENSP00000360108', '9606.ENSP00000365227', '9606.ENSP00000353331', '9606.ENSP00000301587', '9606.ENSP00000222584', '9606.ENSP00000380602', '9606.ENSP00000259708', '9606.ENSP00000327513', '9606.ENSP00000447537', '9606.ENSP00000340820', '9606.ENSP00000246672', '9606.ENSP00000254722', '9606.ENSP00000311816', '9606.ENSP00000499501', '9606.ENSP00000320650', '9606.ENSP00000498653', '9606.hsa-miR-124-3p', '9606.ENSP00000284240', '9606.ENSP00000361433', '9606.ENSP00000439585', '9606.ENSP00000316032', '9606.ENSP00000368984', '9606.hsa-miR-17-5p', '9606.ENSP00000366563', '9606.ENSP00000419260', '9606.ENSP00000237014', '9606.AC007879.5', '9606.ENSP00000323148', '9606.ENSP00000446576', '9606.ENSP00000263431', '9606.ENSP00000355747', '9606.ENSP00000405674', '9606.ENSP00000354416', '9606.ENSP00000338512', '9606.ENSP00000356953', '9606.ENSP00000399376', '9606.ENSP00000359489', '9606.ENSP00000298556', '9606.ENSP00000355865', '9606.ENSP00000226382', '9606.ENSP00000355741', '9606.ENSP00000346483', '9606.ENSP00000246548', '9606.ENSP00000304643', '9606.ENSP00000373413', '9606.ENSP00000254810', '9606.ENSP00000376921', '9606.ENSP00000302100', '9606.ENSP00000350170', '9606.ENSP00000252996', '9606.hsa-miR-29a-3p', '9606.ENSP00000366330', '9606.ENSP00000248600', '9606.ENSP00000216218', '9606.ENSP00000306138', '9606.ENSP00000288943', '9606.ENSP00000202625', '9606.ENSP00000349748', '9606.ENSP00000245451', '9606.ENSP00000366452', '9606.ENSP00000360231', '9606.hsa-miR-93-5p', '9606.ENSP00000471851', '9606.ENSP00000364270', '9606.ENSP00000340125', '9606.ENSP00000302216', '9606.ENSP00000343515', '9606.ENSP00000221801', '9606.ENSP00000501150', '9606.ENSP00000413035', '9606.ENSP00000265164', '9606.ENSP00000359804', '9606.ENSP00000259711', '9606.ENSP00000415579', '9606.ENSP00000306253', '9606.ENSP00000273320', '9606.ENSP00000305288', '9606.ENSP00000418721', '9606.ENSP00000458663', '9606.ENSP00000307900', '9606.ENSP00000329357', '9606.ENSP00000496695', '9606.ENSP00000318585', '9606.ENSP00000418960', '9606.ENSP00000478249', '9606.ENSP00000303540', '9606.ENSP00000393379', '9606.ENSP00000240316', '9606.ENSP00000457205', '9606.ENSP00000260386', '9606.ENSP00000288135', '9606.ENSP00000368884', '9606.ENSP00000458537', '9606.ENSP00000454852', '9606.ENSP00000338173', '9606.ENSP00000285667', '9606.ENSP00000380070', '9606.ENSP00000368881', '9606.ENSP00000359019', '9606.ENSP00000477715', '9606.ENSP00000417901', '9606.ENSP00000221930', '9606.ENSP00000490107', '9606.ENSP00000332194', '9606.ENSP00000219197', '9606.ENSP00000180166', '9606.ENSP00000381185', '9606.ENSP00000316842', '9606.ENSP00000254079', '9606.ENSP00000296271', '9606.ENSP00000362300', '9606.ENSP00000264867', '9606.ENSP00000349298', '9606.ENSP00000311032', '9606.ENSP00000295900', '9606.ENSP00000293288', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.ENSP00000306561', '9606.ENSP00000500990', '9606.ENSP00000256261', '9606.ENSP00000295589', '9606.ENSP00000419081', '9606.ENSP00000475626', '9606.ENSP00000479667', '9606.ENSP00000233813', '9606.hsa-miR-1225-3p', '9606.ENSP00000406209', '9606.ENSP00000455698', '9606.ENSP00000348645', '9606.ENSP00000321835', '9606.ENSP00000216127', '9606.ENSP00000371133', '9606.ENSP00000369863', '9606.ENSP00000261601', '9606.ENSP00000300213', '9606.ENSP00000225504', '9606.ENSP00000264552', '9606.ENSP00000308610', '9606.ENSP00000495360', '9606.ENSP00000421339', '9606.ENSP00000240100', '9606.ENSP00000381057', '9606.ENSP00000334002', '9606.ENSP00000411355', '9606.ENSP00000333277', '9606.ENSP00000295910', '9606.ENSP00000438574', '9606.ENSP00000340467', '9606.ENSP00000377372', '9606.ENSP00000477141', '9606.ENSP00000463653', '9606.ENSP00000360493', '9606.ENSP00000310036', '9606.ENSP00000385410', '9606.ENSP00000249396', '9606.ENSP00000294702', '9606.ENSP00000357583', '9606.ENSP00000349168', '9606.ENSP00000276654', '9606.ENSP00000215832', '9606.ENSP00000216254', '9606.ENSP00000261731', '9606.ENSP00000324560', '9606.ENSP00000362680', '9606.ENSP00000346694', '9606.ENSP00000353414', '9606.ENSP00000437125', '9606.ENSP00000409279', '9606.ENSP00000349722', '9606.ENSP00000350386', '9606.ENSP00000283195', '9606.ENSP00000339004', '9606.ENSP00000264689', '9606.ENSP00000321606', '9606.ENSP00000369996', '9606.ENSP00000414856', '9606.ENSP00000323588', '9606.ENSP00000248975', '9606.ENSP00000181796', '9606.ENSP00000371267', '9606.ENSP00000378338', '9606.ENSP00000370058', '9606.ENSP00000239231', '9606.ENSP00000315299', '9606.ENSP00000378699', '9606.ENSP00000415822', '9606.ENSP00000333262', '9606.ENSP00000370193', '9606.ENSP00000483254', '9606.ENSP00000422435', '9606.ENSP00000482169', '9606.ENSP00000258415', '9606.ENSP00000380432', '9606.ENSP00000349156', '9606.ENSP00000253408', '9606.ENSP00000384474', '9606.HTT-AS', '9606.ENSP00000358784', '9606.ENSP00000265195', '9606.ENSP00000440045', '9606.ENSP00000378476', '9606.ENSP00000362205', '9606.ENSP00000252934', '9606.ENSP00000250495', '9606.ENSP00000340330', '9606.ENSP00000247225', '9606.ENSP00000310129', '9606.ENSP00000360266', '9606.ENSP00000296755', '9606.ENSP00000359719', '9606.ENSP00000499387', '9606.ENSP00000358089', '9606.ENSP00000230321', '9606.ENSP00000377936', '9606.ENSP00000329403', '9606.ENSP00000216144', '9606.ENSP00000314173', '9606.ENSP00000430241', '9606.ENSP00000319060', '9606.ENSP00000354859', '9606.ENSP00000430000', '9606.ENSP00000325863', '9606.ENSP00000258302', '9606.ENSP00000476119', '9606.ENSP00000366488', '9606.ENSP00000481848', '9606.ENSP00000234389', '9606.ENSP00000437256', '9606.ENSP00000279488', '9606.ENSP00000363435', '9606.ENSP00000366249', '9606.ENSP00000398632', '9606.ENSP00000477455', '9606.ENSP00000254976', '9606.ENSP00000316357', '9606.ENSP00000216714', '9606.ENSP00000347896', '9606.ENSP00000269305', '9606.ENSP00000320821', '9606.ENSP00000264657', '9606.ENSP00000353646', '9606.ENSP00000397563', '9606.ENSP00000263205', '9606.ENSP00000353767', '9606.ENSP00000353864', '9606.ENSP00000345347', '9606.ENSP00000265081', '9606.ENSP00000318635', '9606.ENSP00000408617', '9606.ENSP00000364639', '9606.ENSP00000223129', '9606.ENSP00000370744', '9606.ENSP00000307786', '9606.FMR1-AS1', '9606.ENSP00000428426', '9606.ENSP00000305480', '9606.ENSP00000291295', '9606.ENSP00000453858', '9606.ENSP00000245255', '9606.ENSP00000261523', '9606.ENSP00000377015', '9606.ENSP00000453170', '9606.ENSP00000244061', '9606.ENSP00000293190', '9606.ENSP00000276079', '9606.ENSP00000269143', '9606.ENSP00000355028', '9606.ENSP00000370083', '9606.ENSP00000268058', '9606.ENSP00000263209', '9606.ENSP00000278379', '9606.ENSP00000347184', '9606.hsa-miR-150-5p', '9606.ENSP00000365601', '9606.ENSP00000307604', '9606.ENSP00000357206', '9606.hsa-miR-9-3p', '9606.ENSP00000361021', '9606.ENSP00000334463', '9606.ENSP00000348056', '9606.ENSP00000386786', '9606.ENSP00000357565', '9606.ENSP00000332706', '9606.ENSP00000296526', '9606.ENSP00000458065', '9606.ENSP00000385675', '9606.ENSP00000305422', '9606.ENSP00000359727', '9606.ENSP00000362578', '9606.ENSP00000365861', '9606.ENSP00000356231', '9606.ENSP00000306330', '9606.ENSP00000361027', '9606.ENSP00000378487', '9606.ENSP00000431162', '9606.hsa-miR-548g-3p', '9606.ENSP00000371729', '9606.hsa-miR-320d', '9606.ENSP00000304331', '9606.ENSP00000013807', '9606.ENSP00000435637', '9606.ENSP00000385216', '9606.ENSP00000346671', '9606.ENSP00000427900', '9606.MIR17HG', '9606.ENSP00000350928', '9606.ENSP00000360280', '9606.AC006129.1', '9606.ENSP00000219548', '9606.ENSP00000282753', '9606.ENSP00000216727', '9606.ENSP00000284262', '9606.ENSP00000261837', '9606.ATXN8OS', '9606.ENSP00000368314', '9606.ENSP00000374552', '9606.ENSP00000256079', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.ENSP00000315137', '9606.ENSP00000347997', '9606.ENSP00000261712', '9606.ENSP00000376753', '9606.ENSP00000406549', '9606.ENSP00000317333', '9606.ENSP00000399851', '9606.ENSP00000369531', '9606.ENSP00000358886', '9606.ENSP00000383042', '9606.ENSP00000403397', '9606.ENSP00000359978', '9606.ENSP00000374455', '9606.ENSP00000429763', '9606.ENSP00000438886', '9606.hsa-miR-379-3p', '9606.ENSP00000262367', '9606.ENSP00000353072', '9606.ENSP00000376637', '9606.ENSP00000369895', '9606.ENSP00000376197', '9606.ENSP00000462298', '9606.ENSP00000262241', '9606.ENSP00000355370', '9606.ENSP00000225577', '9606.ENSP00000333363', '9606.ENSP00000376077', '9606.ENSP00000347170', '9606.ENSP00000358525', '9606.ENSP00000302961', '9606.ENSP00000324173', '9606.ENSP00000309591', '9606.ENSP00000419782', '9606.ENSP00000345571', '9606.ENSP00000418572', '9606.ENSP00000495557', '9606.ENSP00000327687', '9606.ENSP00000309595', '9606.ENSP00000365514', '9606.ENSP00000361930', '9606.ENSP00000270225', '9606.ENSP00000290649', '9606.ENSP00000362485', '9606.ENSP00000309477', '9606.ENSP00000386458', '9606.ENSP00000345575', '9606.ENSP00000388638', '9606.ENSP00000346534', '9606.ENSP00000270349', '9606.ENSP00000368332', '9606.ENSP00000212015', '9606.ENSP00000405965', '9606.ENSP00000284981', '9606.ENSP00000345206', '9606.ENSP00000282561', '9606.ENSP00000493382', '9606.ENSP00000498255', '9606.ENSP00000263025', '9606.ENSP00000478877', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.ENSP00000462745', '9606.ENSP00000352516', '9606.ENSP00000358518', '9606.ENSP00000405388', '9606.ENSP00000268712', '9606.ENSP00000359085', '9606.ENSP00000360609', '9606.ENSP00000362131', '9606.hsa-miR-659-3p', '9606.ENSP00000499582', '9606.ENSP00000422185', '9606.ENSP00000454229', '9606.ENSP00000221742', '9606.ENSP00000489407', '9606.ENSP00000359506', '9606.ENSP00000444433', '9606.ENSP00000414303', '9606.ENSP00000391803', '9606.ENSP00000379350', '9606.ENSP00000399403', '9606.hsa-miR-106a-5p', '9606.ENSP00000379915', '9606.ENSP00000254322', '9606.ENSP00000269228', '9606.ENSP00000403888', '9606.ENSP00000306894', '9606.ENSP00000254325', '9606.ENSP00000307863']}
2024-06-20 16:48:54,400 [DEBUG] py4...: ǀǀReturning 'get_table_columns':                        name
44033  9606.ENSP00000263160
43010  9606.ENSP00000227507
44036  9606.ENSP00000400142
43013  9606.ENSP00000252804
44039  9606.ENSP00000371985
...                     ...
43001  9606.ENSP00000269228
44027  9606.ENSP00000403888
43004  9606.ENSP00000306894
44030  9606.ENSP00000254325
43007  9606.ENSP00000307863

[734 rows x 1 columns]
2024-06-20 16:48:54,402 [DEBUG] py4...: ǀReturning 'get_selected_nodes': ['9606.hsa-miR-155-5p', '9606.hsa-miR-132-3p', '9606.hsa-miR-106b-5p', '9606.hsa-miR-1909-3p', '9606.ENSP00000378284', '9606.hsa-miR-760', '9606.hsa-miR-144-3p', '9606.hsa-miR-130a-3p', '9606.hsa-miR-548ae', '9606.NEAT1', '9606.FAM41C', '9606.ENSP00000370119', '9606.hsa-miR-559', '9606.hsa-miR-134-5p', '9606.hsa-miR-433-3p', '9606.hsa-miR-107', '9606.hsa-miR-9-5p', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.hsa-miR-124-3p', '9606.ENSP00000439585', '9606.hsa-miR-17-5p', '9606.AC007879.5', '9606.hsa-miR-29a-3p', '9606.hsa-miR-93-5p', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.hsa-miR-1225-3p', '9606.HTT-AS', '9606.FMR1-AS1', '9606.hsa-miR-150-5p', '9606.hsa-miR-9-3p', '9606.hsa-miR-548g-3p', '9606.hsa-miR-320d', '9606.MIR17HG', '9606.AC006129.1', '9606.ATXN8OS', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.hsa-miR-379-3p', '9606.ENSP00000462298', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.hsa-miR-659-3p', '9606.hsa-miR-106a-5p']
2024-06-20 16:48:54,403 [DEBUG] py4...: ǀCalling get_selected_edges(network=42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,403 [DEBUG] py4...: ǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,404 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,404 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:54,412 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:54,412 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:54,413 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:54,413 [DEBUG] py4...: ǀǀCalling get_selected_edge_count(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,413 [DEBUG] py4...: ǀǀǀCalling get_network_suid(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,414 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,414 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:48:54,420 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981]
2024-06-20 16:48:54,421 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981]
2024-06-20 16:48:54,421 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 42582
2024-06-20 16:48:54,422 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/42582/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,422 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/42582/edges), params: {'column': 'selected', 'query': 'true'}
2024-06-20 16:48:54,432 [DEBUG] py4...: ǀǀǀOK[200], content: []
2024-06-20 16:48:54,433 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': []
2024-06-20 16:48:54,434 [DEBUG] py4...: ǀǀReturning 'get_selected_edge_count': 0
2024-06-20 16:48:54,434 [DEBUG] py4...: ǀReturning 'get_selected_edges': None
2024-06-20 16:48:54,435 [DEBUG] py4...: Returning 'apply_filter': {'nodes': ['9606.hsa-miR-155-5p', '9606.hsa-miR-132-3p', '9606.hsa-miR-106b-5p', '9606.hsa-miR-1909-3p', '9606.ENSP00000378284', '9606.hsa-miR-760', '9606.hsa-miR-144-3p', '9606.hsa-miR-130a-3p', '9606.hsa-miR-548ae', '9606.NEAT1', '9606.FAM41C', '9606.ENSP00000370119', '9606.hsa-miR-559', '9606.hsa-miR-134-5p', '9606.hsa-miR-433-3p', '9606.hsa-miR-107', '9606.hsa-miR-9-5p', '9606.hsa-miR-101-3p', '9606.hsa-miR-520c-3p', '9606.hsa-miR-124-3p', '9606.ENSP00000439585', '9606.hsa-miR-17-5p', '9606.AC007879.5', '9606.hsa-miR-29a-3p', '9606.hsa-miR-93-5p', '9606.SNORD58B', '9606.hsa-miR-34c-5p', '9606.hsa-miR-1225-3p', '9606.HTT-AS', '9606.FMR1-AS1', '9606.hsa-miR-150-5p', '9606.hsa-miR-9-3p', '9606.hsa-miR-548g-3p', '9606.hsa-miR-320d', '9606.MIR17HG', '9606.AC006129.1', '9606.ATXN8OS', '9606.hsa-miR-128-3p', '9606.hsa-miR-4305', '9606.hsa-miR-379-3p', '9606.ENSP00000462298', '9606.hsa-miR-548w', '9606.hsa-miR-133b', '9606.hsa-miR-659-3p', '9606.hsa-miR-106a-5p'], 'edges': None}
2024-06-20 16:48:54,436 [DEBUG] py4...: --------------------
2024-06-20 16:48:54,437 [DEBUG] py4...: Calling delete_selected_nodes(42582)
2024-06-20 16:48:54,437 [DEBUG] py4...: ǀCalling get_network_name(42582, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,437 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', {'column': 'suid', 'query': 42582}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,438 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names), params: {'column': 'suid', 'query': 42582}
2024-06-20 16:48:54,445 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"STRING 0050954 network C0.4","SUID":42582}]
2024-06-20 16:48:54,448 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'STRING 0050954 network C0.4', 'SUID': 42582}]
2024-06-20 16:48:54,448 [DEBUG] py4...: ǀReturning 'get_network_name': 'STRING 0050954 network C0.4'
2024-06-20 16:48:54,449 [DEBUG] py4...: ǀCalling commands_post('network delete nodeList="selected" network="STRING 0050954 network C0.4"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:48:54,449 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'STRING 0050954 network C0.4'}
2024-06-20 16:48:54,496 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"nodes":[
  42866,
  43460,
  43529,
  42824,
  44228,
  44612,
  43520,
  43913,
  42767,
  43871,
  44696,
  43103,
  42878,
  43988,
  43685,
  44936,
  43670,
  44090,
  42965,
  44891,
  44420,
  42884,
  44486,
  42911,
  43421,
  44441,
  44060,
  44021,
  44549,
  44378,
  44075,
  42905,
  43433,
  44153,
  44132,
  44003,
  42875,
  43571,
  43535,
  44165,
  43349,
  43442,
  44141,
  44453,
  43892
], "edges":[
  73976,
  91127,
  65786,
  82685,
  89090,
  45569,
  52739,
  87299,
  88328,
  79367,
  48398,
  73487,
  89105,
  89108,
  87830,
  71957,
  70421,
  51734,
  72983,
  89114,
  77081,
  68894,
  49694,
  89117,
  89120,
  64799,
  88097,
  88100,
  89123,
  88103,
  89129,
  63275,
  89132,
  47915,
  89135,
  89138,
  49202,
  84788,
  88118,
  54581,
  89141,
  88124,
  78140,
  88127,
  88130,
  49217,
  82499,
  88133,
  59462,
  77384,
  90695,
  88139,
  63056,
  78674,
  53843,
  92243,
  87635,
  83030,
  92246,
  51287,
  88919,
  59480,
  54617,
  92249,
  74075,
  84062,
  60254,
  92255,
  92258,
  91745,
  51299,
  88166,
  92261,
  92264,
  51563,
  81260,
  60017,
  55412,
  64886,
  72569,
  81788,
  92030,
  78974,
  78977,
  62852,
  92294,
  69254,
  80261,
  84869,
  84368,
  83600,
  48017,
  45464,
  66458,
  59291,
  92063,
  80291,
  85157,
  62375,
  73895,
  89513,
  81068,
  85166,
  56759,
  83384,
  81080,
  80567,
  64697,
  80570,
  72635,
  72638,
  48833,
  84932,
  76739,
  92102,
  49097,
  89033,
  64205,
  56783,
  64211,
  88019,
  57305,
  87257,
  74969,
  48347,
  86495,
  53987,
  85475,
  50660,
  88550,
  73958,
  80357,
  84455,
  82151,
  70892,
  50924,
  88046,
  81902
]},
 "errors":[]
}
2024-06-20 16:48:54,496 [DEBUG] py4...: ǀReturning 'commands_post': {'nodes': [42866, 43460, 43529, 42824, 44228, 44612, 43520, 43913, 42767, 43871, 44696, 43103, 42878, 43988, 43685, 44936, 43670, 44090, 42965, 44891, 44420, 42884, 44486, 42911, 43421, 44441, 44060, 44021, 44549, 44378, 44075, 42905, 43433, 44153, 44132, 44003, 42875, 43571, 43535, 44165, 43349, 43442, 44141, 44453, 43892], 'edges': [73976, 91127, 65786, 82685, 89090, 45569, 52739, 87299, 88328, 79367, 48398, 73487, 89105, 89108, 87830, 71957, 70421, 51734, 72983, 89114, 77081, 68894, 49694, 89117, 89120, 64799, 88097, 88100, 89123, 88103, 89129, 63275, 89132, 47915, 89135, 89138, 49202, 84788, 88118, 54581, 89141, 88124, 78140, 88127, 88130, 49217, 82499, 88133, 59462, 77384, 90695, 88139, 63056, 78674, 53843, 92243, 87635, 83030, 92246, 51287, 88919, 59480, 54617, 92249, 74075, 84062, 60254, 92255, 92258, 91745, 51299, 88166, 92261, 92264, 51563, 81260, 60017, 55412, 64886, 72569, 81788, 92030, 78974, 78977, 62852, 92294, 69254, 80261, 84869, 84368, 83600, 48017, 45464, 66458, 59291, 92063, 80291, 85157, 62375, 73895, 89513, 81068, 85166, 56759, 83384, 81080, 80567, 64697, 80570, 72635, 72638, 48833, 84932, 76739, 92102, 49097, 89033, 64205, 56783, 64211, 88019, 57305, 87257, 74969, 48347, 86495, 53987, 85475, 50660, 88550, 73958, 80357, 84455, 82151, 70892, 50924, 88046, 81902]}
2024-06-20 16:48:54,497 [DEBUG] py4...: Returning 'delete_selected_nodes': {'nodes': [42866, 43460, 43529, 42824, 44228, 44612, 43520, 43913, 42767, 43871, 44696, 43103, 42878, 43988, 43685, 44936, 43670, 44090, 42965, 44891, 44420, 42884, 44486, 42911, 43421, 44441, 44060, 44021, 44549, 44378, 44075, 42905, 43433, 44153, 44132, 44003, 42875, 43571, 43535, 44165, 43349, 43442, 44141, 44453, 43892], 'edges': [73976, 91127, 65786, 82685, 89090, 45569, 52739, 87299, 88328, 79367, 48398, 73487, 89105, 89108, 87830, 71957, 70421, 51734, 72983, 89114, 77081, 68894, 49694, 89117, 89120, 64799, 88097, 88100, 89123, 88103, 89129, 63275, 89132, 47915, 89135, 89138, 49202, 84788, 88118, 54581, 89141, 88124, 78140, 88127, 88130, 49217, 82499, 88133, 59462, 77384, 90695, 88139, 63056, 78674, 53843, 92243, 87635, 83030, 92246, 51287, 88919, 59480, 54617, 92249, 74075, 84062, 60254, 92255, 92258, 91745, 51299, 88166, 92261, 92264, 51563, 81260, 60017, 55412, 64886, 72569, 81788, 92030, 78974, 78977, 62852, 92294, 69254, 80261, 84869, 84368, 83600, 48017, 45464, 66458, 59291, 92063, 80291, 85157, 62375, 73895, 89513, 81068, 85166, 56759, 83384, 81080, 80567, 64697, 80570, 72635, 72638, 48833, 84932, 76739, 92102, 49097, 89033, 64205, 56783, 64211, 88019, 57305, 87257, 74969, 48347, 86495, 53987, 85475, 50660, 88550, 73958, 80357, 84455, 82151, 70892, 50924, 88046, 81902]}
2024-06-20 16:48:54,497 [DEBUG] py4...: --------------------
2024-06-20 16:49:03,081 [DEBUG] py4...: Calling merge_networks(sources=['KEGG hsa05017 network stringified', 'STRING 0050954 network C0.4', 'Wikipathways WP470 network stringified'], title='Merged STRING KEGG Wiki network cutoff 0.4', node_keys=['stringdb::canonical name', 'stringdb::canonical name', 'stringdb::canonical name'])
2024-06-20 16:49:03,082 [DEBUG] py4...: ǀCalling commands_post('network merge sources="KEGG hsa05017 network stringified,STRING 0050954 network C0.4,Wikipathways WP470 network stringified" operation=union nodesOnly=False inNetworkMerge=True netName="Merged STRING KEGG Wiki network cutoff 0.4" nodeKeys="stringdb::canonical name,stringdb::canonical name,stringdb::canonical name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:49:03,082 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/merge), json: {'sources': 'KEGG hsa05017 network stringified,STRING 0050954 network C0.4,Wikipathways WP470 network stringified', 'operation': 'union', 'nodesOnly': 'False', 'inNetworkMerge': 'True', 'netName': 'Merged STRING KEGG Wiki network cutoff 0.4', 'nodeKeys': 'stringdb::canonical name,stringdb::canonical name,stringdb::canonical name'}
2024-06-20 16:49:03,096 [DEBUG] py4...: ǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Cannot invoke \"org.cytoscape.model.CyNetwork.getDefaultNetworkTable()\" because \"net\" is null","link":"file:/C:/Users/emmab/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-06-20 16:49:03,096 [DEBUG] py4...: ǀ'commands_post' exception CyError('In commands_post(): Cannot invoke "org.cytoscape.model.CyNetwork.getDefaultNetworkTable()" because "net" is null')
2024-06-20 16:49:03,097 [DEBUG] py4...: 'merge_networks' exception CyError('In commands_post(): Cannot invoke "org.cytoscape.model.CyNetwork.getDefaultNetworkTable()" because "net" is null')
2024-06-20 16:49:03,097 [DEBUG] py4...: --------------------
2024-06-20 16:49:21,122 [DEBUG] py4...: Calling merge_networks(sources=['KEGG hsa05017 network stringified', 'STRING 0050954 network C0.4', 'Wikipathways WP4760 network stringified'], title='Merged STRING KEGG Wiki network cutoff 0.4', node_keys=['stringdb::canonical name', 'stringdb::canonical name', 'stringdb::canonical name'])
2024-06-20 16:49:21,123 [DEBUG] py4...: ǀCalling commands_post('network merge sources="KEGG hsa05017 network stringified,STRING 0050954 network C0.4,Wikipathways WP4760 network stringified" operation=union nodesOnly=False inNetworkMerge=True netName="Merged STRING KEGG Wiki network cutoff 0.4" nodeKeys="stringdb::canonical name,stringdb::canonical name,stringdb::canonical name"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:49:21,123 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/merge), json: {'sources': 'KEGG hsa05017 network stringified,STRING 0050954 network C0.4,Wikipathways WP4760 network stringified', 'operation': 'union', 'nodesOnly': 'False', 'inNetworkMerge': 'True', 'netName': 'Merged STRING KEGG Wiki network cutoff 0.4', 'nodeKeys': 'stringdb::canonical name,stringdb::canonical name,stringdb::canonical name'}
2024-06-20 16:49:31,335 [DEBUG] py4...: ǀOK[200], content: {
 "data": {
  "__Annotations": [],
  "uri": "https://api12.jensenlab.org/network",
  "enrichmentTables": null,
  "shared name": "Merged STRING KEGG Wiki network cutoff 0.4",
  "database": "string",
  "has images": false,
  "network type": "full STRING network",
  "confidence score": 0.4,
  "species": "Homo sapiens;org.cytoscape.work.util.ListSingleSelection@140c7656;org.cytoscape.work.util.ListSingleSelection@39aff725",
  "name": "Merged STRING KEGG Wiki network cutoff 0.4",
  "SUID": 126975,
  "selected": true,
  "data version": "12"
},
 "errors":[]
}
2024-06-20 16:49:31,335 [DEBUG] py4...: ǀReturning 'commands_post': {'__Annotations': [], 'uri': 'https://api12.jensenlab.org/network', 'enrichmentTables': None, 'shared name': 'Merged STRING KEGG Wiki network cutoff 0.4', 'database': 'string', 'has images': False, 'network type': 'full STRING network', 'confidence score': 0.4, 'species': 'Homo sapiens;org.cytoscape.work.util.ListSingleSelection@140c7656;org.cytoscape.work.util.ListSingleSelection@39aff725', 'name': 'Merged STRING KEGG Wiki network cutoff 0.4', 'SUID': 126975, 'selected': True, 'data version': '12'}
2024-06-20 16:49:32,337 [DEBUG] py4...: Returning 'merge_networks': 126975
2024-06-20 16:49:32,337 [DEBUG] py4...: --------------------
2024-06-20 16:49:32,337 [DEBUG] py4...: Calling get_network_suid('Merged STRING KEGG Wiki network cutoff 0.4')
2024-06-20 16:49:32,337 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:49:32,337 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:49:32,338 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:49:32,345 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Merged STRING KEGG Wiki network cutoff 0.4","SUID":126975}]
2024-06-20 16:49:32,346 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Merged STRING KEGG Wiki network cutoff 0.4', 'SUID': 126975}]
2024-06-20 16:49:32,346 [DEBUG] py4...: ǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network', 'Merged STRING KEGG Wiki network cutoff 0.4']
2024-06-20 16:49:32,346 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Merged STRING KEGG Wiki network cutoff 0.4" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:49:32,347 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Merged STRING KEGG Wiki network cutoff 0.4', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:49:32,355 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 126975
}
],
 "errors":[]
}
2024-06-20 16:49:32,356 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 126975}]
2024-06-20 16:49:32,356 [DEBUG] py4...: Returning 'get_network_suid': 126975
2024-06-20 16:49:32,356 [DEBUG] py4...: --------------------
2024-06-20 16:50:05,304 [DEBUG] py4...: Calling get_table_columns('node', columns=['name', 'kegg_db', 'wiki_db', 'string_db'], network=126975)
2024-06-20 16:50:05,305 [DEBUG] py4...: ǀCalling get_network_suid(126975, 'http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,306 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,306 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:05,315 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:05,315 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:05,316 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:05,317 [DEBUG] py4...: ǀCalling get_table_column_types('node', namespace='default', network=126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,317 [DEBUG] py4...: ǀǀCalling get_network_suid(126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,317 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,319 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:05,326 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:05,327 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:05,327 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 126975
2024-06-20 16:50:05,328 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,328 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns)
2024-06-20 16:50:05,334 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false}]
2024-06-20 16:50:05,335 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:50:05,336 [DEBUG] py4...: ǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', '@id': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'display name': 'String', 'kegg_db': 'Integer', 'label': 'String', 'link': 'String', 'name.copy': 'String', 'query term': 'String', 'stringdb::STRING style': 'String', 'stringdb::canonical name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'stringdb::full name': 'String', 'stringdb::imageurl': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'type': 'String', 'uniprot': 'String', 'string_db': 'Integer', 'stringdb::disease score': 'Double', 'Border Width': 'Double', 'ChEBI': 'String', 'Color': 'String', 'Ensembl': 'String', 'GraphID': 'String', 'Label Font Size': 'Double', 'Node Size': 'Double', 'XrefDatasource': 'String', 'XrefId': 'String', 'wiki_db': 'Integer'}
2024-06-20 16:50:05,336 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,336 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/SUID)
2024-06-20 16:50:05,343 [DEBUG] py4...: ǀOK[200], content: {"name":"SUID","values":[129026,129029,129032,129035,129038,129041,129044,129047,129050,129053,129056,129059,129062,129065,129068,129071,129074,129077,129080,129083,129282,127403,127406,127409,127412,127415,127418,127421,127424,127427,127430,127433,127436,127439,127442,127445,127448,127451,127454,127457,127460,127463,127466,127469,127472,127475,127478,127481,127484,127487,127490,127493,127496,127499,127502,127505,127508,127511,127514,127517,127520,127523,127526,127529,127532,127535,127538,127541,127544,127547,127550,127553,127556,127559,127562,127565,127568,127571,127574,127577,127580,127583,127586,127589,127592,127595,127598,129646,127601,129649,127604,129652,127607,129655,127610,129658,127613,129661,127616,129664,127619,129667,127622,129670,127625,129673,127628,129676,127631,129679,127634,129682,127637,129685,127640,129688,127643,129691,127646,129694,127649,129697,127652,129700,127655,129703,127658,129706,127661,129709,127664,129712,127667,129715,127670,129718,127673,129721,127676,129724,127679,129727,127682,129730,127685,129733,127688,129736,127691,129739,127694,129742,127697,129745,127700,129748,127703,129751,127706,129754,127709,129757,127712,129760,127715,129763,127718,129766,127721,129769,127724,129772,127727,129775,127730,129778,127733,129781,127736,129784,127739,129787,127742,129790,127745,129793,127748,129796,127751,129799,127754,129802,127757,129805,127760,129808,127763,129811,127766,129814,127769,129817,127772,129820,127775,129823,127778,129826,127781,129829,127784,129832,127787,129835,127790,129838,127793,129841,127796,129844,127799,129847,127802,129850,127805,129853,127808,129856,127811,129859,127814,129862,127817,129865,127820,129868,127823,129871,127826,129874,127829,129877,127832,129880,127835,129883,127838,129886,127841,129889,127844,129892,127847,129895,127850,129898,127853,129901,127856,129904,127859,129907,127862,129910,127865,129913,127868,129916,127871,129919,127874,129922,127877,129925,127880,129928,127883,129931,127886,129934,127889,129937,127892,129940,127895,129943,127898,129946,127901,129949,127904,129952,127907,129955,127910,129958,127913,129961,127916,129964,127919,129967,127922,129970,127925,129973,127928,129976,127931,129979,127934,129982,127937,129985,127940,129988,127943,129991,127946,129994,127949,129997,127952,130000,127955,130003,127958,130006,127961,130009,127964,130012,127967,130015,127970,130018,127973,130021,127976,130024,127979,130027,127982,130030,127985,130033,127988,130036,127991,130039,127994,130042,127997,130045,128000,130048,128003,130051,128006,130054,128009,130057,128012,130060,128015,130063,128018,130066,128021,130069,128024,130072,128027,130075,128030,130078,128033,130081,128036,130084,128039,130087,128042,130090,128045,130093,128048,130096,128051,130099,128054,130102,128057,130105,128060,130108,128063,130111,128066,130114,128069,130117,128072,130120,128075,130123,128078,130126,128081,130129,128084,130132,128087,130135,128090,130138,128093,130141,128096,130144,128099,130147,128102,130150,128105,130153,128108,130156,128111,130159,128114,130162,128117,130165,128120,130168,128123,130171,128126,130174,128129,130177,128132,130180,128135,130183,128138,130186,128141,130189,128144,130192,128147,130195,128150,130198,128153,130201,128156,130204,128159,130207,128162,130210,128165,130213,128168,130216,128171,130219,128174,130222,128177,130225,128180,130228,128183,130231,128186,130234,128189,130237,128192,130240,128195,130243,128198,130246,128201,130249,128204,130252,128207,130255,128210,130258,128213,130261,128216,130264,128219,130267,128222,130270,128225,130273,128228,130276,128231,130279,128234,130282,128237,130285,128240,130288,128243,130291,128246,130294,128249,130297,128252,128255,128258,128261,128264,128267,128270,128273,128276,128279,128282,128285,128288,128291,128294,128297,128300,128303,128306,128309,128312,128315,128318,128321,128324,128327,128330,128333,128336,128339,128342,128345,128348,128351,128354,128357,128360,128363,128366,128369,128372,128375,128378,128381,128384,128387,128390,128393,128396,128399,128402,128405,128408,128411,128414,128417,128420,128423,128426,128429,128432,128435,128438,128441,128444,128447,128450,128453,128456,128459,128462,128465,128468,128471,128474,128477,128480,128483,128486,128489,128492,128495,128498,128501,128504,128507,128510,128513,128516,128519,128522,128525,128528,128531,128534,128537,128540,128543,128546,128549,128552,128555,128558,128561,128564,128567,128570,128573,128576,128579,128582,128585,128588,128591,128594,128597,128600,128603,128606,128609,128612,128615,128618,128621,128624,128627,128630,128633,128636,128639,128642,128645,128648,128651,128654,128657,128660,128663,128666,128669,128672,128675,128678,128681,128684,128687,128690,128693,128696,128699,128702,128705,128708,128711,128714,128717,128720,128723,128726,128729,128732,128735,128738,128741,128744,128747,128750,128753,128756,128759,128762,128765,128768,128771,128774,128777,128780,128783,128786,128789,128792,128795,128798,128801,128804,128807,128810,128813,128816,128819,128822,128825,128828,128831,128834,128837,128840,128843,128846,128849,128852,128855,128858,128861,128864,128867,128870,128873,128876,128879,128882,128885,128888,128891,128894,128897,128900,128903,128906,128909,128912,128915,128918,128921,128924,128927,128930,128933,128936,128939,128942,128945,128948,128951,128954,128957,128960,128963,128966,128969,128972,128975,128978,128981,128984,128987,128990,128993,128996,128999,129002,129005,129008,129011,129014,129017,129020,129023]}
2024-06-20 16:50:05,343 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'SUID', 'values': [129026, 129029, 129032, 129035, 129038, 129041, 129044, 129047, 129050, 129053, 129056, 129059, 129062, 129065, 129068, 129071, 129074, 129077, 129080, 129083, 129282, 127403, 127406, 127409, 127412, 127415, 127418, 127421, 127424, 127427, 127430, 127433, 127436, 127439, 127442, 127445, 127448, 127451, 127454, 127457, 127460, 127463, 127466, 127469, 127472, 127475, 127478, 127481, 127484, 127487, 127490, 127493, 127496, 127499, 127502, 127505, 127508, 127511, 127514, 127517, 127520, 127523, 127526, 127529, 127532, 127535, 127538, 127541, 127544, 127547, 127550, 127553, 127556, 127559, 127562, 127565, 127568, 127571, 127574, 127577, 127580, 127583, 127586, 127589, 127592, 127595, 127598, 129646, 127601, 129649, 127604, 129652, 127607, 129655, 127610, 129658, 127613, 129661, 127616, 129664, 127619, 129667, 127622, 129670, 127625, 129673, 127628, 129676, 127631, 129679, 127634, 129682, 127637, 129685, 127640, 129688, 127643, 129691, 127646, 129694, 127649, 129697, 127652, 129700, 127655, 129703, 127658, 129706, 127661, 129709, 127664, 129712, 127667, 129715, 127670, 129718, 127673, 129721, 127676, 129724, 127679, 129727, 127682, 129730, 127685, 129733, 127688, 129736, 127691, 129739, 127694, 129742, 127697, 129745, 127700, 129748, 127703, 129751, 127706, 129754, 127709, 129757, 127712, 129760, 127715, 129763, 127718, 129766, 127721, 129769, 127724, 129772, 127727, 129775, 127730, 129778, 127733, 129781, 127736, 129784, 127739, 129787, 127742, 129790, 127745, 129793, 127748, 129796, 127751, 129799, 127754, 129802, 127757, 129805, 127760, 129808, 127763, 129811, 127766, 129814, 127769, 129817, 127772, 129820, 127775, 129823, 127778, 129826, 127781, 129829, 127784, 129832, 127787, 129835, 127790, 129838, 127793, 129841, 127796, 129844, 127799, 129847, 127802, 129850, 127805, 129853, 127808, 129856, 127811, 129859, 127814, 129862, 127817, 129865, 127820, 129868, 127823, 129871, 127826, 129874, 127829, 129877, 127832, 129880, 127835, 129883, 127838, 129886, 127841, 129889, 127844, 129892, 127847, 129895, 127850, 129898, 127853, 129901, 127856, 129904, 127859, 129907, 127862, 129910, 127865, 129913, 127868, 129916, 127871, 129919, 127874, 129922, 127877, 129925, 127880, 129928, 127883, 129931, 127886, 129934, 127889, 129937, 127892, 129940, 127895, 129943, 127898, 129946, 127901, 129949, 127904, 129952, 127907, 129955, 127910, 129958, 127913, 129961, 127916, 129964, 127919, 129967, 127922, 129970, 127925, 129973, 127928, 129976, 127931, 129979, 127934, 129982, 127937, 129985, 127940, 129988, 127943, 129991, 127946, 129994, 127949, 129997, 127952, 130000, 127955, 130003, 127958, 130006, 127961, 130009, 127964, 130012, 127967, 130015, 127970, 130018, 127973, 130021, 127976, 130024, 127979, 130027, 127982, 130030, 127985, 130033, 127988, 130036, 127991, 130039, 127994, 130042, 127997, 130045, 128000, 130048, 128003, 130051, 128006, 130054, 128009, 130057, 128012, 130060, 128015, 130063, 128018, 130066, 128021, 130069, 128024, 130072, 128027, 130075, 128030, 130078, 128033, 130081, 128036, 130084, 128039, 130087, 128042, 130090, 128045, 130093, 128048, 130096, 128051, 130099, 128054, 130102, 128057, 130105, 128060, 130108, 128063, 130111, 128066, 130114, 128069, 130117, 128072, 130120, 128075, 130123, 128078, 130126, 128081, 130129, 128084, 130132, 128087, 130135, 128090, 130138, 128093, 130141, 128096, 130144, 128099, 130147, 128102, 130150, 128105, 130153, 128108, 130156, 128111, 130159, 128114, 130162, 128117, 130165, 128120, 130168, 128123, 130171, 128126, 130174, 128129, 130177, 128132, 130180, 128135, 130183, 128138, 130186, 128141, 130189, 128144, 130192, 128147, 130195, 128150, 130198, 128153, 130201, 128156, 130204, 128159, 130207, 128162, 130210, 128165, 130213, 128168, 130216, 128171, 130219, 128174, 130222, 128177, 130225, 128180, 130228, 128183, 130231, 128186, 130234, 128189, 130237, 128192, 130240, 128195, 130243, 128198, 130246, 128201, 130249, 128204, 130252, 128207, 130255, 128210, 130258, 128213, 130261, 128216, 130264, 128219, 130267, 128222, 130270, 128225, 130273, 128228, 130276, 128231, 130279, 128234, 130282, 128237, 130285, 128240, 130288, 128243, 130291, 128246, 130294, 128249, 130297, 128252, 128255, 128258, 128261, 128264, 128267, 128270, 128273, 128276, 128279, 128282, 128285, 128288, 128291, 128294, 128297, 128300, 128303, 128306, 128309, 128312, 128315, 128318, 128321, 128324, 128327, 128330, 128333, 128336, 128339, 128342, 128345, 128348, 128351, 128354, 128357, 128360, 128363, 128366, 128369, 128372, 128375, 128378, 128381, 128384, 128387, 128390, 128393, 128396, 128399, 128402, 128405, 128408, 128411, 128414, 128417, 128420, 128423, 128426, 128429, 128432, 128435, 128438, 128441, 128444, 128447, 128450, 128453, 128456, 128459, 128462, 128465, 128468, 128471, 128474, 128477, 128480, 128483, 128486, 128489, 128492, 128495, 128498, 128501, 128504, 128507, 128510, 128513, 128516, 128519, 128522, 128525, 128528, 128531, 128534, 128537, 128540, 128543, 128546, 128549, 128552, 128555, 128558, 128561, 128564, 128567, 128570, 128573, 128576, 128579, 128582, 128585, 128588, 128591, 128594, 128597, 128600, 128603, 128606, 128609, 128612, 128615, 128618, 128621, 128624, 128627, 128630, 128633, 128636, 128639, 128642, 128645, 128648, 128651, 128654, 128657, 128660, 128663, 128666, 128669, 128672, 128675, 128678, 128681, 128684, 128687, 128690, 128693, 128696, 128699, 128702, 128705, 128708, 128711, 128714, 128717, 128720, 128723, 128726, 128729, 128732, 128735, 128738, 128741, 128744, 128747, 128750, 128753, 128756, 128759, 128762, 128765, 128768, 128771, 128774, 128777, 128780, 128783, 128786, 128789, 128792, 128795, 128798, 128801, 128804, 128807, 128810, 128813, 128816, 128819, 128822, 128825, 128828, 128831, 128834, 128837, 128840, 128843, 128846, 128849, 128852, 128855, 128858, 128861, 128864, 128867, 128870, 128873, 128876, 128879, 128882, 128885, 128888, 128891, 128894, 128897, 128900, 128903, 128906, 128909, 128912, 128915, 128918, 128921, 128924, 128927, 128930, 128933, 128936, 128939, 128942, 128945, 128948, 128951, 128954, 128957, 128960, 128963, 128966, 128969, 128972, 128975, 128978, 128981, 128984, 128987, 128990, 128993, 128996, 128999, 129002, 129005, 129008, 129011, 129014, 129017, 129020, 129023]}
2024-06-20 16:50:05,344 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,345 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/name)
2024-06-20 16:50:05,351 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["9606.ENSP00000350170","9606.ENSP00000376921","9606.ENSP00000373413","9606.ENSP00000246548","9606.ENSP00000355741","9606.ENSP00000355865","9606.ENSP00000359489","9606.ENSP00000356953","9606.ENSP00000354416","9606.ENSP00000355747","9606.ENSP00000419260","9606.ENSP00000316032","9606.ENSP00000361433","9606.ENSP00000320650","9606.ENSP00000311816","9606.ENSP00000246672","9606.ENSP00000447537","9606.ENSP00000259708","9606.ENSP00000222584","9606.ENSP00000353331","9606.ENSP00000360108","9606.ENSP00000261712","9606.ENSP00000247668","9606.ENSP00000451828","9606.ENSP00000378914","9606.ENSP00000282753","9606.ENSP00000360280","9606.ENSP00000319591","9606.ENSP00000378917","9606.ENSP00000362334","9606.ENSP00000216037","9606.ENSP00000360671","9606.ENSP00000332549","9606.ENSP00000378487","9606.ENSP00000375892","9606.ENSP00000307786","9606.ENSP00000261303","9606.ENSP00000263967","9606.ENSP00000293190","9606.ENSP00000408695","9606.ENSP00000391723","9606.ENSP00000290541","9606.ENSP00000360270","9606.ENSP00000281154","9606.ENSP00000370744","9606.ENSP00000370589","9606.ENSP00000340330","9606.ENSP00000351908","9606.ENSP00000488361","9606.ENSP00000310129","9606.ENSP00000415822","9606.ENSP00000361635","9606.ENSP00000355155","9606.ENSP00000353010","9606.ENSP00000260402","9606.ENSP00000378974","9606.ENSP00000369996","9606.ENSP00000352608","9606.ENSP00000349205","9606.ENSP00000365301","9606.ENSP00000324560","9606.ENSP00000222254","9606.ENSP00000277746","9606.ENSP00000431926","9606.ENSP00000262139","9606.ENSP00000371532","9606.ENSP00000442793","9606.ENSP00000355325","9606.ENSP00000311121","9606.ENSP00000281456","9606.ENSP00000401445","9606.ENSP00000366475","9606.ENSP00000434241","9606.ENSP00000362144","9606.ENSP00000414359","9606.ENSP00000443631","9606.ENSP00000440485","9606.ENSP00000440185","9606.ENSP00000357876","9606.ENSP00000261479","9606.ENSP00000359531","9606.ENSP00000338173","9606.ENSP00000432568","9606.ENSP00000428994","9606.ENSP00000458663","9606.ENSP00000329357","9606.ENSP00000306253","9606.ENSP00000362649","9606.ENSP00000271308","9606.ENSP00000332772","9606.ENSP00000496695","9606.ENSP00000355511","9606.ENSP00000501150","9606.ENSP00000467024","9606.ENSP00000230354","9606.ENSP00000221233","9606.ENSP00000500582","9606.ENSP00000392028","9606.ENSP00000223321","9606.ENSP00000371101","9606.ENSP00000288828","9606.ENSP00000467262","9606.ENSP00000310572","9606.ENSP00000262904","9606.ENSP00000244769","9606.ENSP00000291568","9606.ENSP00000396937","9606.ENSP00000395535","9606.ENSP00000484998","9606.ENSP00000492795","9606.ENSP00000446576","9606.ENSP00000419395","9606.ENSP00000338185","9606.ENSP00000425979","9606.ENSP00000345702","9606.ENSP00000343535","9606.ENSP00000478877","9606.ENSP00000352011","9606.ENSP00000262039","9606.ENSP00000364813","9606.ENSP00000418695","9606.ENSP00000352252","9606.ENSP00000349595","9606.ENSP00000222574","9606.ENSP00000225174","9606.ENSP00000221485","9606.ENSP00000270586","9606.ENSP00000308533","9606.ENSP00000355231","9606.ENSP00000222330","9606.ENSP00000359910","9606.ENSP00000382104","9606.ENSP00000481554","9606.ENSP00000352257","9606.ENSP00000392423","9606.ENSP00000375810","9606.ENSP00000428056","9606.ENSP00000370125","9606.ENSP00000394560","9606.ENSP00000354553","9606.ENSP00000263431","9606.ENSP00000355645","9606.ENSP00000338990","9606.ENSP00000482753","9606.ENSP00000262741","9606.ENSP00000409007","9606.ENSP00000391211","9606.ENSP00000369145","9606.ENSP00000366563","9606.ENSP00000260950","9606.ENSP00000025008","9606.ENSP00000343552","9606.ENSP00000216455","9606.ENSP00000340278","9606.ENSP00000296526","9606.ENSP00000259727","9606.ENSP00000262193","9606.ENSP00000265171","9606.ENSP00000386541","9606.ENSP00000386710","9606.ENSP00000269143","9606.ENSP00000401633","9606.ENSP00000250003","9606.ENSP00000436864","9606.ENSP00000247178","9606.ENSP00000435412","9606.ENSP00000221742","9606.ENSP00000379181","9606.ENSP00000261523","9606.ENSP00000381382","9606.ENSP00000264639","9606.ENSP00000356982","9606.ENSP00000286548","9606.ENSP00000410759","9606.ENSP00000360608","9606.ENSP00000228644","9606.ENSP00000483688","9606.ENSP00000339867","9606.ENSP00000481021","9606.ENSP00000313377","9606.ENSP00000247219","9606.ENSP00000351614","9606.ENSP00000354558","9606.ENSP00000282356","9606.ENSP00000237264","9606.ENSP00000477999","9606.ENSP00000489829","9606.ENSP00000397259","9606.ENSP00000259457","9606.ENSP00000497112","9606.ENSP00000428845","9606.ENSP00000497594","9606.ENSP00000432412","9606.ENSP00000272317","9606.ENSP00000345206","9606.ENSP00000364118","9606.ENSP00000263269","9606.ENSP00000258149","9606.ENSP00000367762","9606.ENSP00000387699","9606.ENSP00000481029","9606.ENSP00000345064","9606.ENSP00000157812","9606.ENSP00000295777","9606.ENSP00000477455","9606.ENSP00000362299","9606.ENSP00000368966","9606.ENSP00000295897","9606.ENSP00000341243","9606.ENSP00000313007","9606.ENSP00000044462","9606.ENSP00000500386","9606.ENSP00000363435","9606.ENSP00000246186","9606.ENSP00000496129","9606.ENSP00000257290","9606.ENSP00000309595","9606.ENSP00000261427","9606.ENSP00000309474","9606.ENSP00000410769","9606.ENSP00000234389","9606.ENSP00000487785","9606.ENSP00000348442","9606.ENSP00000261667","9606.ENSP00000370808","9606.ENSP00000335153","9606.ENSP00000219313","9606.ENSP00000376322","9606.ENSP00000353072","9606.ENSP00000351742","9606.ENSP00000215071","9606.ENSP00000282486","9606.ENSP00000440045","9606.ENSP00000387593","9606.ENSP00000252934","9606.ENSP00000053867","9606.ENSP00000354681","9606.ENSP00000323046","9606.ENSP00000358525","9606.ENSP00000303356","9606.ENSP00000333363","9606.ENSP00000357292","9606.ENSP00000262241","9606.ENSP00000480916","9606.ENSP00000369895","9606.ENSP00000294435","9606.ENSP00000262367","9606.ENSP00000345195","9606.ENSP00000429763","9606.ENSP00000341826","9606.ENSP00000403397","9606.ENSP00000298910","9606.ENSP00000369531","9606.ENSP00000272444","9606.ENSP00000406549","9606.ENSP00000270142","9606.ENSP00000347997","9606.ENSP00000337103","9606.ENSP00000368314","9606.ENSP00000264606","9606.ENSP00000284262","9606.ENSP00000479719","9606.ENSP00000219548","9606.ENSP00000406286","9606.ENSP00000350928","9606.ENSP00000283228","9606.ENSP00000346671","9606.ENSP00000385142","9606.ENSP00000013807","9606.ENSP00000302108","9606.ENSP00000371729","9606.ENSP00000284551","9606.ENSP00000356231","9606.ENSP00000263754","9606.ENSP00000359727","9606.ENSP00000287820","9606.ENSP00000458065","9606.ENSP00000386229","9606.ENSP00000357565","9606.ENSP00000040584","9606.ENSP00000334463","9606.ENSP00000295757","9606.ENSP00000357206","9606.ENSP00000363123","9606.ENSP00000263209","9606.ENSP00000362399","9606.ENSP00000355028","9606.ENSP00000358151","9606.ENSP00000377015","9606.ENSP00000295756","9606.ENSP00000453858","9606.ENSP00000292246","9606.ENSP00000428426","9606.ENSP00000340989","9606.ENSP00000408617","9606.ENSP00000383199","9606.ENSP00000345347","9606.ENSP00000358155","9606.ENSP00000263205","9606.ENSP00000490614","9606.ENSP00000264657","9606.ENSP00000441685","9606.ENSP00000347896","9606.ENSP00000391942","9606.ENSP00000254976","9606.ENSP00000286628","9606.ENSP00000366249","9606.ENSP00000285419","9606.ENSP00000437256","9606.ENSP00000464342","9606.ENSP00000366488","9606.ENSP00000489624","9606.ENSP00000325863","9606.ENSP00000260116","9606.ENSP00000319060","9606.ENSP00000406293","9606.ENSP00000216144","9606.ENSP00000337353","9606.ENSP00000230321","9606.ENSP00000398698","9606.ENSP00000359719","9606.ENSP00000228872","9606.ENSP00000250495","9606.ENSP00000352738","9606.ENSP00000378476","9606.ENSP00000430432","9606.ENSP00000358784","9606.ENSP00000364210","9606.ENSP00000253408","9606.ENSP00000282146","9606.ENSP00000380432","9606.ENSP00000282020","9606.ENSP00000482169","9606.ENSP00000287713","9606.ENSP00000483254","9606.ENSP00000364204","9606.ENSP00000333262","9606.ENSP00000358283","9606.ENSP00000378699","9606.ENSP00000419243","9606.ENSP00000239231","9606.ENSP00000295987","9606.ENSP00000378338","9606.ENSP00000224140","9606.ENSP00000181796","9606.ENSP00000484060","9606.ENSP00000323588","9606.ENSP00000390941","9606.ENSP00000264689","9606.ENSP00000260665","9606.ENSP00000283195","9606.ENSP00000351777","9606.ENSP00000349722","9606.ENSP00000354923","9606.ENSP00000437125","9606.ENSP00000374354","9606.ENSP00000346694","9606.ENSP00000498362","9606.ENSP00000216254","9606.ENSP00000380903","9606.ENSP00000276654","9606.ENSP00000359095","9606.ENSP00000357583","9606.ENSP00000477437","9606.ENSP00000249396","9606.ENSP00000408526","9606.ENSP00000310036","9606.ENSP00000478887","9606.ENSP00000463653","9606.ENSP00000354929","9606.ENSP00000377372","9606.ENSP00000326366","9606.ENSP00000438574","9606.ENSP00000258106","9606.ENSP00000333277","9606.ENSP00000362014","9606.ENSP00000334002","9606.ENSP00000418447","9606.ENSP00000240100","9606.ENSP00000252804","9606.ENSP00000495360","9606.ENSP00000227507","9606.ENSP00000264552","9606.ENSP00000307863","9606.ENSP00000300213","9606.ENSP00000306894","9606.ENSP00000369863","9606.ENSP00000269228","9606.ENSP00000216127","9606.ENSP00000379915","9606.ENSP00000348645","9606.ENSP00000399403","9606.ENSP00000406209","9606.ENSP00000391803","9606.ENSP00000233813","9606.ENSP00000444433","9606.ENSP00000475626","9606.ENSP00000489407","9606.ENSP00000295589","9606.ENSP00000454229","9606.ENSP00000500990","9606.ENSP00000499582","9606.ENSP00000293288","9606.ENSP00000362131","9606.ENSP00000311032","9606.ENSP00000359085","9606.ENSP00000264867","9606.ENSP00000405388","9606.ENSP00000296271","9606.ENSP00000352516","9606.ENSP00000316842","9606.ENSP00000498255","9606.ENSP00000180166","9606.ENSP00000282561","9606.ENSP00000332194","9606.ENSP00000284981","9606.ENSP00000221930","9606.ENSP00000212015","9606.ENSP00000477715","9606.ENSP00000270349","9606.ENSP00000368881","9606.ENSP00000388638","9606.ENSP00000285667","9606.ENSP00000386458","9606.ENSP00000454852","9606.ENSP00000362485","9606.ENSP00000368884","9606.ENSP00000270225","9606.ENSP00000260386","9606.ENSP00000365514","9606.ENSP00000240316","9606.ENSP00000327687","9606.ENSP00000303540","9606.ENSP00000418572","9606.ENSP00000418960","9606.ENSP00000419782","9606.ENSP00000307900","9606.ENSP00000324173","9606.ENSP00000418721","9606.ENSP00000347170","9606.ENSP00000273320","9606.ENSP00000225577","9606.ENSP00000415579","9606.ENSP00000376637","9606.ENSP00000359804","9606.ENSP00000374455","9606.ENSP00000413035","9606.ENSP00000383042","9606.ENSP00000221801","9606.ENSP00000399851","9606.ENSP00000302216","9606.ENSP00000376753","9606.ENSP00000364270","9606.ENSP00000315137","9606.ENSP00000366452","9606.ENSP00000256079","9606.ENSP00000349748","9606.ENSP00000216727","9606.ENSP00000288943","9606.ENSP00000385216","9606.ENSP00000216218","9606.ENSP00000304331","9606.ENSP00000366330","9606.ENSP00000361027","9606.ENSP00000252996","9606.ENSP00000365861","9606.ENSP00000302100","9606.ENSP00000305422","9606.ENSP00000254810","9606.ENSP00000386786","9606.ENSP00000304643","9606.ENSP00000361021","9606.ENSP00000346483","9606.ENSP00000307604","9606.ENSP00000226382","9606.ENSP00000347184","9606.ENSP00000298556","9606.ENSP00000268058","9606.ENSP00000399376","9606.ENSP00000244061","9606.ENSP00000338512","9606.ENSP00000291295","9606.ENSP00000405674","9606.ENSP00000223129","9606.ENSP00000323148","9606.ENSP00000318635","9606.ENSP00000237014","9606.ENSP00000353864","9606.ENSP00000368984","9606.ENSP00000397563","9606.ENSP00000284240","9606.ENSP00000320821","9606.ENSP00000498653","9606.ENSP00000216714","9606.ENSP00000499501","9606.ENSP00000476119","9606.ENSP00000254722","9606.ENSP00000430000","9606.ENSP00000340820","9606.ENSP00000430241","9606.ENSP00000327513","9606.ENSP00000329403","9606.ENSP00000380602","9606.ENSP00000358089","9606.ENSP00000301587","9606.ENSP00000296755","9606.ENSP00000365227","9606.ENSP00000247225","9606.ENSP00000338629","9606.ENSP00000262958","9606.ENSP00000339835","9606.ENSP00000282499","9606.ENSP00000374049","9606.ENSP00000078429","9606.ENSP00000379616","9606.ENSP00000489262","9606.ENSP00000305702","9606.ENSP00000376352","9606.ENSP00000471191","9606.ENSP00000314407","9606.ENSP00000261367","9606.ENSP00000365807","9606.ENSP00000405327","9606.ENSP00000368970","9606.ENSP00000329918","9606.ENSP00000261366","9606.ENSP00000365576","9606.ENSP00000216200","9606.ENSP00000497217","9606.ENSP00000397297","9606.ENSP00000365458","9606.ENSP00000306920","9606.ENSP00000418994","9606.ENSP00000254719","9606.ENSP00000250113","9606.ENSP00000377681","9606.ENSP00000401371","9606.ENSP00000355657","9606.ENSP00000265113","9606.ENSP00000340292","9606.ENSP00000425561","9606.ENSP00000254108","9606.ENSP00000363822","9606.ENSP00000264033","9606.ENSP00000494750","9606.ENSP00000231004","9606.ENSP00000489189","9606.ENSP00000384625","9606.ENSP00000361405","9606.ENSP00000354335","9606.ENSP00000469455","9606.ENSP00000324806","9606.ENSP00000436679","9606.ENSP00000264255","9606.ENSP00000264498","9606.ENSP00000343690","9606.ENSP00000302814","9606.ENSP00000369127","9606.ENSP00000301727","9606.ENSP00000265351","9606.ENSP00000266682","9606.ENSP00000360660","9606.ENSP00000379287","9606.ENSP00000267890","9606.ENSP00000298596","9606.ENSP00000381488","9606.ENSP00000309457","9606.ENSP00000282928","9606.ENSP00000354346","9606.ENSP00000310561","9606.ENSP00000297261","9606.ENSP00000370571","9606.ENSP00000439937","9606.ENSP00000481593","9606.ENSP00000225916","9606.ENSP00000265379","9606.ENSP00000345997","9606.ENSP00000265381","9606.ENSP00000313829","9606.ENSP00000435466","9606.ENSP00000266594","9606.ENSP00000254488","9606.ENSP00000496959","9606.ENSP00000497806","9606.ENSP00000240185","9606.ENSP00000415676","9606.ENSP00000354111","9606.ENSP00000220592","9606.ENSP00000494538","9606.ENSP00000480012","9606.ENSP00000391269","9606.ENSP00000277120","9606.ENSP00000366070","9606.ENSP00000269601","9606.ENSP00000264276","9606.ENSP00000402257","9606.ENSP00000426503","9606.ENSP00000424566","9606.ENSP00000258962","9606.ENSP00000320347","9606.ENSP00000391381","9606.ENSP00000264036","9606.ENSP00000403343","9606.ENSP00000288490","9606.ENSP00000368007","9606.ENSP00000291700","9606.ENSP00000219476","9606.ENSP00000492363","9606.ENSP00000354360","9606.ENSP00000417864","9606.ENSP00000310585","9606.ENSP00000358967","9606.ENSP00000354125","9606.ENSP00000265431","9606.ENSP00000359890","9606.ENSP00000263257","9606.ENSP00000302967","9606.ENSP00000343001","9606.ENSP00000369689","9606.ENSP00000252486","9606.ENSP00000255631","9606.ENSP00000356790","9606.ENSP00000480050","9606.ENSP00000470248","9606.ENSP00000354497","9606.ENSP00000278616","9606.ENSP00000303709","9606.ENSP00000265421","9606.ENSP00000252482","9606.ENSP00000264335","9606.ENSP00000321455","9606.ENSP00000323511","9606.ENSP00000473623","9606.ENSP00000312987","9606.ENSP00000442920","9606.ENSP00000215095","9606.ENSP00000336712","9606.ENSP00000378394","9606.ENSP00000220420","9606.ENSP00000299001","9606.ENSP00000246914","9606.ENSP00000331040","9606.ENSP00000221996","9606.ENSP00000450873","9606.ENSP00000263038","9606.ENSP00000265459","9606.ENSP00000342056","9606.ENSP00000371985","9606.ENSP00000400142","9606.ENSP00000263160","9606.ENSP00000254325","9606.ENSP00000403888","9606.ENSP00000254322","9606.ENSP00000379350","9606.ENSP00000414303","9606.ENSP00000359506","9606.ENSP00000422185","9606.ENSP00000360609","9606.ENSP00000268712","9606.ENSP00000358518","9606.ENSP00000462745","9606.ENSP00000263025","9606.ENSP00000493382","9606.ENSP00000405965","9606.ENSP00000368332","9606.ENSP00000346534","9606.ENSP00000345575","9606.ENSP00000309477","9606.ENSP00000290649","9606.ENSP00000361930","9606.ENSP00000495557","9606.ENSP00000345571","9606.ENSP00000309591","9606.ENSP00000302961","9606.ENSP00000376077","9606.ENSP00000355370","9606.ENSP00000376197","9606.ENSP00000438886","9606.ENSP00000359978","9606.ENSP00000358886","9606.ENSP00000317333","9606.ENSP00000374552","9606.ENSP00000261837","9606.ENSP00000427900","9606.ENSP00000435637","9606.ENSP00000431162","9606.ENSP00000306330","9606.ENSP00000362578","9606.ENSP00000385675","9606.ENSP00000332706","9606.ENSP00000348056","9606.ENSP00000365601","9606.ENSP00000278379","9606.ENSP00000370083","9606.ENSP00000276079","9606.ENSP00000453170","9606.ENSP00000245255","9606.ENSP00000305480","9606.ENSP00000364639","9606.ENSP00000265081","9606.ENSP00000353767","9606.ENSP00000353646","9606.ENSP00000269305","9606.ENSP00000316357","9606.ENSP00000398632","9606.ENSP00000279488","9606.ENSP00000481848","9606.ENSP00000258302","9606.ENSP00000354859","9606.ENSP00000314173","9606.ENSP00000377936","9606.ENSP00000499387","9606.ENSP00000360266","9606.ENSP00000362205","9606.ENSP00000265195","9606.ENSP00000384474","9606.ENSP00000349156","9606.ENSP00000258415","9606.ENSP00000422435","9606.ENSP00000370193","9606.ENSP00000315299","9606.ENSP00000370058","9606.ENSP00000371267","9606.ENSP00000248975","9606.ENSP00000414856","9606.ENSP00000321606","9606.ENSP00000339004","9606.ENSP00000350386","9606.ENSP00000409279","9606.ENSP00000353414","9606.ENSP00000362680","9606.ENSP00000261731","9606.ENSP00000215832","9606.ENSP00000349168","9606.ENSP00000294702","9606.ENSP00000385410","9606.ENSP00000360493","9606.ENSP00000477141","9606.ENSP00000340467","9606.ENSP00000295910","9606.ENSP00000411355","9606.ENSP00000381057","9606.ENSP00000421339","9606.ENSP00000308610","9606.ENSP00000225504","9606.ENSP00000261601","9606.ENSP00000371133","9606.ENSP00000321835","9606.ENSP00000455698","9606.ENSP00000479667","9606.ENSP00000419081","9606.ENSP00000256261","9606.ENSP00000306561","9606.ENSP00000295900","9606.ENSP00000349298","9606.ENSP00000362300","9606.ENSP00000254079","9606.ENSP00000381185","9606.ENSP00000219197","9606.ENSP00000490107","9606.ENSP00000417901","9606.ENSP00000359019","9606.ENSP00000380070","9606.ENSP00000458537","9606.ENSP00000288135","9606.ENSP00000457205","9606.ENSP00000393379","9606.ENSP00000478249","9606.ENSP00000318585","9606.ENSP00000305288","9606.ENSP00000259711","9606.ENSP00000265164","9606.ENSP00000343515","9606.ENSP00000340125","9606.ENSP00000471851","9606.ENSP00000360231","9606.ENSP00000245451","9606.ENSP00000202625","9606.ENSP00000306138","9606.ENSP00000248600"]}
2024-06-20 16:50:05,352 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000350170', '9606.ENSP00000376921', '9606.ENSP00000373413', '9606.ENSP00000246548', '9606.ENSP00000355741', '9606.ENSP00000355865', '9606.ENSP00000359489', '9606.ENSP00000356953', '9606.ENSP00000354416', '9606.ENSP00000355747', '9606.ENSP00000419260', '9606.ENSP00000316032', '9606.ENSP00000361433', '9606.ENSP00000320650', '9606.ENSP00000311816', '9606.ENSP00000246672', '9606.ENSP00000447537', '9606.ENSP00000259708', '9606.ENSP00000222584', '9606.ENSP00000353331', '9606.ENSP00000360108', '9606.ENSP00000261712', '9606.ENSP00000247668', '9606.ENSP00000451828', '9606.ENSP00000378914', '9606.ENSP00000282753', '9606.ENSP00000360280', '9606.ENSP00000319591', '9606.ENSP00000378917', '9606.ENSP00000362334', '9606.ENSP00000216037', '9606.ENSP00000360671', '9606.ENSP00000332549', '9606.ENSP00000378487', '9606.ENSP00000375892', '9606.ENSP00000307786', '9606.ENSP00000261303', '9606.ENSP00000263967', '9606.ENSP00000293190', '9606.ENSP00000408695', '9606.ENSP00000391723', '9606.ENSP00000290541', '9606.ENSP00000360270', '9606.ENSP00000281154', '9606.ENSP00000370744', '9606.ENSP00000370589', '9606.ENSP00000340330', '9606.ENSP00000351908', '9606.ENSP00000488361', '9606.ENSP00000310129', '9606.ENSP00000415822', '9606.ENSP00000361635', '9606.ENSP00000355155', '9606.ENSP00000353010', '9606.ENSP00000260402', '9606.ENSP00000378974', '9606.ENSP00000369996', '9606.ENSP00000352608', '9606.ENSP00000349205', '9606.ENSP00000365301', '9606.ENSP00000324560', '9606.ENSP00000222254', '9606.ENSP00000277746', '9606.ENSP00000431926', '9606.ENSP00000262139', '9606.ENSP00000371532', '9606.ENSP00000442793', '9606.ENSP00000355325', '9606.ENSP00000311121', '9606.ENSP00000281456', '9606.ENSP00000401445', '9606.ENSP00000366475', '9606.ENSP00000434241', '9606.ENSP00000362144', '9606.ENSP00000414359', '9606.ENSP00000443631', '9606.ENSP00000440485', '9606.ENSP00000440185', '9606.ENSP00000357876', '9606.ENSP00000261479', '9606.ENSP00000359531', '9606.ENSP00000338173', '9606.ENSP00000432568', '9606.ENSP00000428994', '9606.ENSP00000458663', '9606.ENSP00000329357', '9606.ENSP00000306253', '9606.ENSP00000362649', '9606.ENSP00000271308', '9606.ENSP00000332772', '9606.ENSP00000496695', '9606.ENSP00000355511', '9606.ENSP00000501150', '9606.ENSP00000467024', '9606.ENSP00000230354', '9606.ENSP00000221233', '9606.ENSP00000500582', '9606.ENSP00000392028', '9606.ENSP00000223321', '9606.ENSP00000371101', '9606.ENSP00000288828', '9606.ENSP00000467262', '9606.ENSP00000310572', '9606.ENSP00000262904', '9606.ENSP00000244769', '9606.ENSP00000291568', '9606.ENSP00000396937', '9606.ENSP00000395535', '9606.ENSP00000484998', '9606.ENSP00000492795', '9606.ENSP00000446576', '9606.ENSP00000419395', '9606.ENSP00000338185', '9606.ENSP00000425979', '9606.ENSP00000345702', '9606.ENSP00000343535', '9606.ENSP00000478877', '9606.ENSP00000352011', '9606.ENSP00000262039', '9606.ENSP00000364813', '9606.ENSP00000418695', '9606.ENSP00000352252', '9606.ENSP00000349595', '9606.ENSP00000222574', '9606.ENSP00000225174', '9606.ENSP00000221485', '9606.ENSP00000270586', '9606.ENSP00000308533', '9606.ENSP00000355231', '9606.ENSP00000222330', '9606.ENSP00000359910', '9606.ENSP00000382104', '9606.ENSP00000481554', '9606.ENSP00000352257', '9606.ENSP00000392423', '9606.ENSP00000375810', '9606.ENSP00000428056', '9606.ENSP00000370125', '9606.ENSP00000394560', '9606.ENSP00000354553', '9606.ENSP00000263431', '9606.ENSP00000355645', '9606.ENSP00000338990', '9606.ENSP00000482753', '9606.ENSP00000262741', '9606.ENSP00000409007', '9606.ENSP00000391211', '9606.ENSP00000369145', '9606.ENSP00000366563', '9606.ENSP00000260950', '9606.ENSP00000025008', '9606.ENSP00000343552', '9606.ENSP00000216455', '9606.ENSP00000340278', '9606.ENSP00000296526', '9606.ENSP00000259727', '9606.ENSP00000262193', '9606.ENSP00000265171', '9606.ENSP00000386541', '9606.ENSP00000386710', '9606.ENSP00000269143', '9606.ENSP00000401633', '9606.ENSP00000250003', '9606.ENSP00000436864', '9606.ENSP00000247178', '9606.ENSP00000435412', '9606.ENSP00000221742', '9606.ENSP00000379181', '9606.ENSP00000261523', '9606.ENSP00000381382', '9606.ENSP00000264639', '9606.ENSP00000356982', '9606.ENSP00000286548', '9606.ENSP00000410759', '9606.ENSP00000360608', '9606.ENSP00000228644', '9606.ENSP00000483688', '9606.ENSP00000339867', '9606.ENSP00000481021', '9606.ENSP00000313377', '9606.ENSP00000247219', '9606.ENSP00000351614', '9606.ENSP00000354558', '9606.ENSP00000282356', '9606.ENSP00000237264', '9606.ENSP00000477999', '9606.ENSP00000489829', '9606.ENSP00000397259', '9606.ENSP00000259457', '9606.ENSP00000497112', '9606.ENSP00000428845', '9606.ENSP00000497594', '9606.ENSP00000432412', '9606.ENSP00000272317', '9606.ENSP00000345206', '9606.ENSP00000364118', '9606.ENSP00000263269', '9606.ENSP00000258149', '9606.ENSP00000367762', '9606.ENSP00000387699', '9606.ENSP00000481029', '9606.ENSP00000345064', '9606.ENSP00000157812', '9606.ENSP00000295777', '9606.ENSP00000477455', '9606.ENSP00000362299', '9606.ENSP00000368966', '9606.ENSP00000295897', '9606.ENSP00000341243', '9606.ENSP00000313007', '9606.ENSP00000044462', '9606.ENSP00000500386', '9606.ENSP00000363435', '9606.ENSP00000246186', '9606.ENSP00000496129', '9606.ENSP00000257290', '9606.ENSP00000309595', '9606.ENSP00000261427', '9606.ENSP00000309474', '9606.ENSP00000410769', '9606.ENSP00000234389', '9606.ENSP00000487785', '9606.ENSP00000348442', '9606.ENSP00000261667', '9606.ENSP00000370808', '9606.ENSP00000335153', '9606.ENSP00000219313', '9606.ENSP00000376322', '9606.ENSP00000353072', '9606.ENSP00000351742', '9606.ENSP00000215071', '9606.ENSP00000282486', '9606.ENSP00000440045', '9606.ENSP00000387593', '9606.ENSP00000252934', '9606.ENSP00000053867', '9606.ENSP00000354681', '9606.ENSP00000323046', '9606.ENSP00000358525', '9606.ENSP00000303356', '9606.ENSP00000333363', '9606.ENSP00000357292', '9606.ENSP00000262241', '9606.ENSP00000480916', '9606.ENSP00000369895', '9606.ENSP00000294435', '9606.ENSP00000262367', '9606.ENSP00000345195', '9606.ENSP00000429763', '9606.ENSP00000341826', '9606.ENSP00000403397', '9606.ENSP00000298910', '9606.ENSP00000369531', '9606.ENSP00000272444', '9606.ENSP00000406549', '9606.ENSP00000270142', '9606.ENSP00000347997', '9606.ENSP00000337103', '9606.ENSP00000368314', '9606.ENSP00000264606', '9606.ENSP00000284262', '9606.ENSP00000479719', '9606.ENSP00000219548', '9606.ENSP00000406286', '9606.ENSP00000350928', '9606.ENSP00000283228', '9606.ENSP00000346671', '9606.ENSP00000385142', '9606.ENSP00000013807', '9606.ENSP00000302108', '9606.ENSP00000371729', '9606.ENSP00000284551', '9606.ENSP00000356231', '9606.ENSP00000263754', '9606.ENSP00000359727', '9606.ENSP00000287820', '9606.ENSP00000458065', '9606.ENSP00000386229', '9606.ENSP00000357565', '9606.ENSP00000040584', '9606.ENSP00000334463', '9606.ENSP00000295757', '9606.ENSP00000357206', '9606.ENSP00000363123', '9606.ENSP00000263209', '9606.ENSP00000362399', '9606.ENSP00000355028', '9606.ENSP00000358151', '9606.ENSP00000377015', '9606.ENSP00000295756', '9606.ENSP00000453858', '9606.ENSP00000292246', '9606.ENSP00000428426', '9606.ENSP00000340989', '9606.ENSP00000408617', '9606.ENSP00000383199', '9606.ENSP00000345347', '9606.ENSP00000358155', '9606.ENSP00000263205', '9606.ENSP00000490614', '9606.ENSP00000264657', '9606.ENSP00000441685', '9606.ENSP00000347896', '9606.ENSP00000391942', '9606.ENSP00000254976', '9606.ENSP00000286628', '9606.ENSP00000366249', '9606.ENSP00000285419', '9606.ENSP00000437256', '9606.ENSP00000464342', '9606.ENSP00000366488', '9606.ENSP00000489624', '9606.ENSP00000325863', '9606.ENSP00000260116', '9606.ENSP00000319060', '9606.ENSP00000406293', '9606.ENSP00000216144', '9606.ENSP00000337353', '9606.ENSP00000230321', '9606.ENSP00000398698', '9606.ENSP00000359719', '9606.ENSP00000228872', '9606.ENSP00000250495', '9606.ENSP00000352738', '9606.ENSP00000378476', '9606.ENSP00000430432', '9606.ENSP00000358784', '9606.ENSP00000364210', '9606.ENSP00000253408', '9606.ENSP00000282146', '9606.ENSP00000380432', '9606.ENSP00000282020', '9606.ENSP00000482169', '9606.ENSP00000287713', '9606.ENSP00000483254', '9606.ENSP00000364204', '9606.ENSP00000333262', '9606.ENSP00000358283', '9606.ENSP00000378699', '9606.ENSP00000419243', '9606.ENSP00000239231', '9606.ENSP00000295987', '9606.ENSP00000378338', '9606.ENSP00000224140', '9606.ENSP00000181796', '9606.ENSP00000484060', '9606.ENSP00000323588', '9606.ENSP00000390941', '9606.ENSP00000264689', '9606.ENSP00000260665', '9606.ENSP00000283195', '9606.ENSP00000351777', '9606.ENSP00000349722', '9606.ENSP00000354923', '9606.ENSP00000437125', '9606.ENSP00000374354', '9606.ENSP00000346694', '9606.ENSP00000498362', '9606.ENSP00000216254', '9606.ENSP00000380903', '9606.ENSP00000276654', '9606.ENSP00000359095', '9606.ENSP00000357583', '9606.ENSP00000477437', '9606.ENSP00000249396', '9606.ENSP00000408526', '9606.ENSP00000310036', '9606.ENSP00000478887', '9606.ENSP00000463653', '9606.ENSP00000354929', '9606.ENSP00000377372', '9606.ENSP00000326366', '9606.ENSP00000438574', '9606.ENSP00000258106', '9606.ENSP00000333277', '9606.ENSP00000362014', '9606.ENSP00000334002', '9606.ENSP00000418447', '9606.ENSP00000240100', '9606.ENSP00000252804', '9606.ENSP00000495360', '9606.ENSP00000227507', '9606.ENSP00000264552', '9606.ENSP00000307863', '9606.ENSP00000300213', '9606.ENSP00000306894', '9606.ENSP00000369863', '9606.ENSP00000269228', '9606.ENSP00000216127', '9606.ENSP00000379915', '9606.ENSP00000348645', '9606.ENSP00000399403', '9606.ENSP00000406209', '9606.ENSP00000391803', '9606.ENSP00000233813', '9606.ENSP00000444433', '9606.ENSP00000475626', '9606.ENSP00000489407', '9606.ENSP00000295589', '9606.ENSP00000454229', '9606.ENSP00000500990', '9606.ENSP00000499582', '9606.ENSP00000293288', '9606.ENSP00000362131', '9606.ENSP00000311032', '9606.ENSP00000359085', '9606.ENSP00000264867', '9606.ENSP00000405388', '9606.ENSP00000296271', '9606.ENSP00000352516', '9606.ENSP00000316842', '9606.ENSP00000498255', '9606.ENSP00000180166', '9606.ENSP00000282561', '9606.ENSP00000332194', '9606.ENSP00000284981', '9606.ENSP00000221930', '9606.ENSP00000212015', '9606.ENSP00000477715', '9606.ENSP00000270349', '9606.ENSP00000368881', '9606.ENSP00000388638', '9606.ENSP00000285667', '9606.ENSP00000386458', '9606.ENSP00000454852', '9606.ENSP00000362485', '9606.ENSP00000368884', '9606.ENSP00000270225', '9606.ENSP00000260386', '9606.ENSP00000365514', '9606.ENSP00000240316', '9606.ENSP00000327687', '9606.ENSP00000303540', '9606.ENSP00000418572', '9606.ENSP00000418960', '9606.ENSP00000419782', '9606.ENSP00000307900', '9606.ENSP00000324173', '9606.ENSP00000418721', '9606.ENSP00000347170', '9606.ENSP00000273320', '9606.ENSP00000225577', '9606.ENSP00000415579', '9606.ENSP00000376637', '9606.ENSP00000359804', '9606.ENSP00000374455', '9606.ENSP00000413035', '9606.ENSP00000383042', '9606.ENSP00000221801', '9606.ENSP00000399851', '9606.ENSP00000302216', '9606.ENSP00000376753', '9606.ENSP00000364270', '9606.ENSP00000315137', '9606.ENSP00000366452', '9606.ENSP00000256079', '9606.ENSP00000349748', '9606.ENSP00000216727', '9606.ENSP00000288943', '9606.ENSP00000385216', '9606.ENSP00000216218', '9606.ENSP00000304331', '9606.ENSP00000366330', '9606.ENSP00000361027', '9606.ENSP00000252996', '9606.ENSP00000365861', '9606.ENSP00000302100', '9606.ENSP00000305422', '9606.ENSP00000254810', '9606.ENSP00000386786', '9606.ENSP00000304643', '9606.ENSP00000361021', '9606.ENSP00000346483', '9606.ENSP00000307604', '9606.ENSP00000226382', '9606.ENSP00000347184', '9606.ENSP00000298556', '9606.ENSP00000268058', '9606.ENSP00000399376', '9606.ENSP00000244061', '9606.ENSP00000338512', '9606.ENSP00000291295', '9606.ENSP00000405674', '9606.ENSP00000223129', '9606.ENSP00000323148', '9606.ENSP00000318635', '9606.ENSP00000237014', '9606.ENSP00000353864', '9606.ENSP00000368984', '9606.ENSP00000397563', '9606.ENSP00000284240', '9606.ENSP00000320821', '9606.ENSP00000498653', '9606.ENSP00000216714', '9606.ENSP00000499501', '9606.ENSP00000476119', '9606.ENSP00000254722', '9606.ENSP00000430000', '9606.ENSP00000340820', '9606.ENSP00000430241', '9606.ENSP00000327513', '9606.ENSP00000329403', '9606.ENSP00000380602', '9606.ENSP00000358089', '9606.ENSP00000301587', '9606.ENSP00000296755', '9606.ENSP00000365227', '9606.ENSP00000247225', '9606.ENSP00000338629', '9606.ENSP00000262958', '9606.ENSP00000339835', '9606.ENSP00000282499', '9606.ENSP00000374049', '9606.ENSP00000078429', '9606.ENSP00000379616', '9606.ENSP00000489262', '9606.ENSP00000305702', '9606.ENSP00000376352', '9606.ENSP00000471191', '9606.ENSP00000314407', '9606.ENSP00000261367', '9606.ENSP00000365807', '9606.ENSP00000405327', '9606.ENSP00000368970', '9606.ENSP00000329918', '9606.ENSP00000261366', '9606.ENSP00000365576', '9606.ENSP00000216200', '9606.ENSP00000497217', '9606.ENSP00000397297', '9606.ENSP00000365458', '9606.ENSP00000306920', '9606.ENSP00000418994', '9606.ENSP00000254719', '9606.ENSP00000250113', '9606.ENSP00000377681', '9606.ENSP00000401371', '9606.ENSP00000355657', '9606.ENSP00000265113', '9606.ENSP00000340292', '9606.ENSP00000425561', '9606.ENSP00000254108', '9606.ENSP00000363822', '9606.ENSP00000264033', '9606.ENSP00000494750', '9606.ENSP00000231004', '9606.ENSP00000489189', '9606.ENSP00000384625', '9606.ENSP00000361405', '9606.ENSP00000354335', '9606.ENSP00000469455', '9606.ENSP00000324806', '9606.ENSP00000436679', '9606.ENSP00000264255', '9606.ENSP00000264498', '9606.ENSP00000343690', '9606.ENSP00000302814', '9606.ENSP00000369127', '9606.ENSP00000301727', '9606.ENSP00000265351', '9606.ENSP00000266682', '9606.ENSP00000360660', '9606.ENSP00000379287', '9606.ENSP00000267890', '9606.ENSP00000298596', '9606.ENSP00000381488', '9606.ENSP00000309457', '9606.ENSP00000282928', '9606.ENSP00000354346', '9606.ENSP00000310561', '9606.ENSP00000297261', '9606.ENSP00000370571', '9606.ENSP00000439937', '9606.ENSP00000481593', '9606.ENSP00000225916', '9606.ENSP00000265379', '9606.ENSP00000345997', '9606.ENSP00000265381', '9606.ENSP00000313829', '9606.ENSP00000435466', '9606.ENSP00000266594', '9606.ENSP00000254488', '9606.ENSP00000496959', '9606.ENSP00000497806', '9606.ENSP00000240185', '9606.ENSP00000415676', '9606.ENSP00000354111', '9606.ENSP00000220592', '9606.ENSP00000494538', '9606.ENSP00000480012', '9606.ENSP00000391269', '9606.ENSP00000277120', '9606.ENSP00000366070', '9606.ENSP00000269601', '9606.ENSP00000264276', '9606.ENSP00000402257', '9606.ENSP00000426503', '9606.ENSP00000424566', '9606.ENSP00000258962', '9606.ENSP00000320347', '9606.ENSP00000391381', '9606.ENSP00000264036', '9606.ENSP00000403343', '9606.ENSP00000288490', '9606.ENSP00000368007', '9606.ENSP00000291700', '9606.ENSP00000219476', '9606.ENSP00000492363', '9606.ENSP00000354360', '9606.ENSP00000417864', '9606.ENSP00000310585', '9606.ENSP00000358967', '9606.ENSP00000354125', '9606.ENSP00000265431', '9606.ENSP00000359890', '9606.ENSP00000263257', '9606.ENSP00000302967', '9606.ENSP00000343001', '9606.ENSP00000369689', '9606.ENSP00000252486', '9606.ENSP00000255631', '9606.ENSP00000356790', '9606.ENSP00000480050', '9606.ENSP00000470248', '9606.ENSP00000354497', '9606.ENSP00000278616', '9606.ENSP00000303709', '9606.ENSP00000265421', '9606.ENSP00000252482', '9606.ENSP00000264335', '9606.ENSP00000321455', '9606.ENSP00000323511', '9606.ENSP00000473623', '9606.ENSP00000312987', '9606.ENSP00000442920', '9606.ENSP00000215095', '9606.ENSP00000336712', '9606.ENSP00000378394', '9606.ENSP00000220420', '9606.ENSP00000299001', '9606.ENSP00000246914', '9606.ENSP00000331040', '9606.ENSP00000221996', '9606.ENSP00000450873', '9606.ENSP00000263038', '9606.ENSP00000265459', '9606.ENSP00000342056', '9606.ENSP00000371985', '9606.ENSP00000400142', '9606.ENSP00000263160', '9606.ENSP00000254325', '9606.ENSP00000403888', '9606.ENSP00000254322', '9606.ENSP00000379350', '9606.ENSP00000414303', '9606.ENSP00000359506', '9606.ENSP00000422185', '9606.ENSP00000360609', '9606.ENSP00000268712', '9606.ENSP00000358518', '9606.ENSP00000462745', '9606.ENSP00000263025', '9606.ENSP00000493382', '9606.ENSP00000405965', '9606.ENSP00000368332', '9606.ENSP00000346534', '9606.ENSP00000345575', '9606.ENSP00000309477', '9606.ENSP00000290649', '9606.ENSP00000361930', '9606.ENSP00000495557', '9606.ENSP00000345571', '9606.ENSP00000309591', '9606.ENSP00000302961', '9606.ENSP00000376077', '9606.ENSP00000355370', '9606.ENSP00000376197', '9606.ENSP00000438886', '9606.ENSP00000359978', '9606.ENSP00000358886', '9606.ENSP00000317333', '9606.ENSP00000374552', '9606.ENSP00000261837', '9606.ENSP00000427900', '9606.ENSP00000435637', '9606.ENSP00000431162', '9606.ENSP00000306330', '9606.ENSP00000362578', '9606.ENSP00000385675', '9606.ENSP00000332706', '9606.ENSP00000348056', '9606.ENSP00000365601', '9606.ENSP00000278379', '9606.ENSP00000370083', '9606.ENSP00000276079', '9606.ENSP00000453170', '9606.ENSP00000245255', '9606.ENSP00000305480', '9606.ENSP00000364639', '9606.ENSP00000265081', '9606.ENSP00000353767', '9606.ENSP00000353646', '9606.ENSP00000269305', '9606.ENSP00000316357', '9606.ENSP00000398632', '9606.ENSP00000279488', '9606.ENSP00000481848', '9606.ENSP00000258302', '9606.ENSP00000354859', '9606.ENSP00000314173', '9606.ENSP00000377936', '9606.ENSP00000499387', '9606.ENSP00000360266', '9606.ENSP00000362205', '9606.ENSP00000265195', '9606.ENSP00000384474', '9606.ENSP00000349156', '9606.ENSP00000258415', '9606.ENSP00000422435', '9606.ENSP00000370193', '9606.ENSP00000315299', '9606.ENSP00000370058', '9606.ENSP00000371267', '9606.ENSP00000248975', '9606.ENSP00000414856', '9606.ENSP00000321606', '9606.ENSP00000339004', '9606.ENSP00000350386', '9606.ENSP00000409279', '9606.ENSP00000353414', '9606.ENSP00000362680', '9606.ENSP00000261731', '9606.ENSP00000215832', '9606.ENSP00000349168', '9606.ENSP00000294702', '9606.ENSP00000385410', '9606.ENSP00000360493', '9606.ENSP00000477141', '9606.ENSP00000340467', '9606.ENSP00000295910', '9606.ENSP00000411355', '9606.ENSP00000381057', '9606.ENSP00000421339', '9606.ENSP00000308610', '9606.ENSP00000225504', '9606.ENSP00000261601', '9606.ENSP00000371133', '9606.ENSP00000321835', '9606.ENSP00000455698', '9606.ENSP00000479667', '9606.ENSP00000419081', '9606.ENSP00000256261', '9606.ENSP00000306561', '9606.ENSP00000295900', '9606.ENSP00000349298', '9606.ENSP00000362300', '9606.ENSP00000254079', '9606.ENSP00000381185', '9606.ENSP00000219197', '9606.ENSP00000490107', '9606.ENSP00000417901', '9606.ENSP00000359019', '9606.ENSP00000380070', '9606.ENSP00000458537', '9606.ENSP00000288135', '9606.ENSP00000457205', '9606.ENSP00000393379', '9606.ENSP00000478249', '9606.ENSP00000318585', '9606.ENSP00000305288', '9606.ENSP00000259711', '9606.ENSP00000265164', '9606.ENSP00000343515', '9606.ENSP00000340125', '9606.ENSP00000471851', '9606.ENSP00000360231', '9606.ENSP00000245451', '9606.ENSP00000202625', '9606.ENSP00000306138', '9606.ENSP00000248600']}
2024-06-20 16:50:05,353 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/kegg_db', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,353 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/kegg_db)
2024-06-20 16:50:05,361 [DEBUG] py4...: ǀOK[200], content: {"name":"kegg_db","values":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}
2024-06-20 16:50:05,361 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'kegg_db', 'values': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]}
2024-06-20 16:50:05,362 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/wiki_db', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,362 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/wiki_db)
2024-06-20 16:50:05,369 [DEBUG] py4...: ǀOK[200], content: {"name":"wiki_db","values":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}
2024-06-20 16:50:05,371 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'wiki_db', 'values': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]}
2024-06-20 16:50:05,372 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/string_db', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,373 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/string_db)
2024-06-20 16:50:05,380 [DEBUG] py4...: ǀOK[200], content: {"name":"string_db","values":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,null,1,null,1,1,1,null,null,null,null,1,1,null,1,null,1,1,null,1,null,null,null,1,1,1,null,null,1,1,null,null,null,null,null,1,null,null,1,1,null,null,null,null,null,1,null,null,null,null,null,1,null,null,1,null,null,1,null,null,1,1,1,1,1,1,1,null,1,1,1,1,1,1,1,null,1,null,1,null,1,null,1,1,1,null,1,null,1,1,1,null,1,null,1,1,1,1,1,null,1,null,1,null,1,null,1,1,1,null,1,1,1,1,1,null,1,null,1,1,1,null,1,null,1,null,1,1,1,null,1,null,1,1,1,null,1,null,1,1,1,1,1,null,1,1,1,1,1,null,1,null,1,null,1,null,1,null,1,null,1,1,1,null,1,1,1,null,1,null,1,null,1,1,1,null,1,null,1,null,1,null,1,1,1,1,1,null,1,null,1,1,1,null,1,1,1,null,1,1,1,null,1,null,1,null,1,1,1,null,1,1,1,1,1,null,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}
2024-06-20 16:50:05,381 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'string_db', 'values': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, None, 1, None, 1, 1, 1, None, None, None, None, 1, 1, None, 1, None, 1, 1, None, 1, None, None, None, 1, 1, 1, None, None, 1, 1, None, None, None, None, None, 1, None, None, 1, 1, None, None, None, None, None, 1, None, None, None, None, None, 1, None, None, 1, None, None, 1, None, None, 1, 1, 1, 1, 1, 1, 1, None, 1, 1, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, 1, 1, 1, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, 1, 1, 1, 1, None, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, 1, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, 1, 1, None, 1, None, 1, 1, 1, None, 1, 1, 1, None, 1, 1, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, 1, 1, 1, 1, None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}
2024-06-20 16:50:05,387 [DEBUG] py4...: Returning 'get_table_columns':                         name  kegg_db  wiki_db  string_db
129026  9606.ENSP00000350170      NaN      NaN        1.0
129029  9606.ENSP00000376921      NaN      NaN        1.0
129032  9606.ENSP00000373413      NaN      NaN        1.0
129035  9606.ENSP00000246548      NaN      NaN        1.0
129038  9606.ENSP00000355741      NaN      NaN        1.0
...                      ...      ...      ...        ...
129011  9606.ENSP00000360231      NaN      NaN        1.0
129014  9606.ENSP00000245451      NaN      NaN        1.0
129017  9606.ENSP00000202625      NaN      NaN        1.0
129020  9606.ENSP00000306138      NaN      NaN        1.0
129023  9606.ENSP00000248600      NaN      NaN        1.0

[780 rows x 4 columns]
2024-06-20 16:50:05,387 [DEBUG] py4...: --------------------
2024-06-20 16:50:05,393 [DEBUG] py4...: Calling set_current_network(126975)
2024-06-20 16:50:05,394 [DEBUG] py4...: ǀCalling get_network_suid(126975)
2024-06-20 16:50:05,394 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,394 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:05,400 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:05,401 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:05,402 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:05,402 [DEBUG] py4...: ǀCalling commands_post('network set current network="SUID:126975"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,402 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:126975'}
2024-06-20 16:50:05,411 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:50:05,411 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:50:05,412 [DEBUG] py4...: Returning 'set_current_network': {}
2024-06-20 16:50:05,412 [DEBUG] py4...: --------------------
2024-06-20 16:50:05,418 [DEBUG] py4...: Calling load_table_data(                        name  kegg_db  wiki_db  string_db database
129026  9606.ENSP00000350170      NaN      NaN        1.0   string
129029  9606.ENSP00000376921      NaN      NaN        1.0   string
129032  9606.ENSP00000373413      NaN      NaN        1.0   string
129035  9606.ENSP00000246548      NaN      NaN        1.0   string
129038  9606.ENSP00000355741      NaN      NaN        1.0   string
...                      ...      ...      ...        ...      ...
129011  9606.ENSP00000360231      NaN      NaN        1.0   string
129014  9606.ENSP00000245451      NaN      NaN        1.0   string
129017  9606.ENSP00000202625      NaN      NaN        1.0   string
129020  9606.ENSP00000306138      NaN      NaN        1.0   string
129023  9606.ENSP00000248600      NaN      NaN        1.0   string

[780 rows x 5 columns], data_key_column='name')
2024-06-20 16:50:05,418 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,418 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,419 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:50:05,426 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 126975
}
],
 "errors":[]
}
2024-06-20 16:50:05,427 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 126975}]
2024-06-20 16:50:05,428 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:05,428 [DEBUG] py4...: ǀCalling get_table_columns(table='node', namespace='default', columns='name', network=126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,428 [DEBUG] py4...: ǀǀCalling get_network_suid(126975, 'http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,429 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,430 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:05,436 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:05,437 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:05,437 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 126975
2024-06-20 16:50:05,438 [DEBUG] py4...: ǀǀCalling get_table_column_types('node', namespace='default', network=126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,438 [DEBUG] py4...: ǀǀǀCalling get_network_suid(126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,439 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,439 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:05,444 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:05,444 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:05,445 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 126975
2024-06-20 16:50:05,445 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,446 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns)
2024-06-20 16:50:05,454 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false}]
2024-06-20 16:50:05,455 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:50:05,456 [DEBUG] py4...: ǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', '@id': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'display name': 'String', 'kegg_db': 'Integer', 'label': 'String', 'link': 'String', 'name.copy': 'String', 'query term': 'String', 'stringdb::STRING style': 'String', 'stringdb::canonical name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'stringdb::full name': 'String', 'stringdb::imageurl': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'type': 'String', 'uniprot': 'String', 'string_db': 'Integer', 'stringdb::disease score': 'Double', 'Border Width': 'Double', 'ChEBI': 'String', 'Color': 'String', 'Ensembl': 'String', 'GraphID': 'String', 'Label Font Size': 'Double', 'Node Size': 'Double', 'XrefDatasource': 'String', 'XrefId': 'String', 'wiki_db': 'Integer'}
2024-06-20 16:50:05,456 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,457 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/SUID)
2024-06-20 16:50:05,464 [DEBUG] py4...: ǀǀOK[200], content: {"name":"SUID","values":[129026,129029,129032,129035,129038,129041,129044,129047,129050,129053,129056,129059,129062,129065,129068,129071,129074,129077,129080,129083,129282,127403,127406,127409,127412,127415,127418,127421,127424,127427,127430,127433,127436,127439,127442,127445,127448,127451,127454,127457,127460,127463,127466,127469,127472,127475,127478,127481,127484,127487,127490,127493,127496,127499,127502,127505,127508,127511,127514,127517,127520,127523,127526,127529,127532,127535,127538,127541,127544,127547,127550,127553,127556,127559,127562,127565,127568,127571,127574,127577,127580,127583,127586,127589,127592,127595,127598,129646,127601,129649,127604,129652,127607,129655,127610,129658,127613,129661,127616,129664,127619,129667,127622,129670,127625,129673,127628,129676,127631,129679,127634,129682,127637,129685,127640,129688,127643,129691,127646,129694,127649,129697,127652,129700,127655,129703,127658,129706,127661,129709,127664,129712,127667,129715,127670,129718,127673,129721,127676,129724,127679,129727,127682,129730,127685,129733,127688,129736,127691,129739,127694,129742,127697,129745,127700,129748,127703,129751,127706,129754,127709,129757,127712,129760,127715,129763,127718,129766,127721,129769,127724,129772,127727,129775,127730,129778,127733,129781,127736,129784,127739,129787,127742,129790,127745,129793,127748,129796,127751,129799,127754,129802,127757,129805,127760,129808,127763,129811,127766,129814,127769,129817,127772,129820,127775,129823,127778,129826,127781,129829,127784,129832,127787,129835,127790,129838,127793,129841,127796,129844,127799,129847,127802,129850,127805,129853,127808,129856,127811,129859,127814,129862,127817,129865,127820,129868,127823,129871,127826,129874,127829,129877,127832,129880,127835,129883,127838,129886,127841,129889,127844,129892,127847,129895,127850,129898,127853,129901,127856,129904,127859,129907,127862,129910,127865,129913,127868,129916,127871,129919,127874,129922,127877,129925,127880,129928,127883,129931,127886,129934,127889,129937,127892,129940,127895,129943,127898,129946,127901,129949,127904,129952,127907,129955,127910,129958,127913,129961,127916,129964,127919,129967,127922,129970,127925,129973,127928,129976,127931,129979,127934,129982,127937,129985,127940,129988,127943,129991,127946,129994,127949,129997,127952,130000,127955,130003,127958,130006,127961,130009,127964,130012,127967,130015,127970,130018,127973,130021,127976,130024,127979,130027,127982,130030,127985,130033,127988,130036,127991,130039,127994,130042,127997,130045,128000,130048,128003,130051,128006,130054,128009,130057,128012,130060,128015,130063,128018,130066,128021,130069,128024,130072,128027,130075,128030,130078,128033,130081,128036,130084,128039,130087,128042,130090,128045,130093,128048,130096,128051,130099,128054,130102,128057,130105,128060,130108,128063,130111,128066,130114,128069,130117,128072,130120,128075,130123,128078,130126,128081,130129,128084,130132,128087,130135,128090,130138,128093,130141,128096,130144,128099,130147,128102,130150,128105,130153,128108,130156,128111,130159,128114,130162,128117,130165,128120,130168,128123,130171,128126,130174,128129,130177,128132,130180,128135,130183,128138,130186,128141,130189,128144,130192,128147,130195,128150,130198,128153,130201,128156,130204,128159,130207,128162,130210,128165,130213,128168,130216,128171,130219,128174,130222,128177,130225,128180,130228,128183,130231,128186,130234,128189,130237,128192,130240,128195,130243,128198,130246,128201,130249,128204,130252,128207,130255,128210,130258,128213,130261,128216,130264,128219,130267,128222,130270,128225,130273,128228,130276,128231,130279,128234,130282,128237,130285,128240,130288,128243,130291,128246,130294,128249,130297,128252,128255,128258,128261,128264,128267,128270,128273,128276,128279,128282,128285,128288,128291,128294,128297,128300,128303,128306,128309,128312,128315,128318,128321,128324,128327,128330,128333,128336,128339,128342,128345,128348,128351,128354,128357,128360,128363,128366,128369,128372,128375,128378,128381,128384,128387,128390,128393,128396,128399,128402,128405,128408,128411,128414,128417,128420,128423,128426,128429,128432,128435,128438,128441,128444,128447,128450,128453,128456,128459,128462,128465,128468,128471,128474,128477,128480,128483,128486,128489,128492,128495,128498,128501,128504,128507,128510,128513,128516,128519,128522,128525,128528,128531,128534,128537,128540,128543,128546,128549,128552,128555,128558,128561,128564,128567,128570,128573,128576,128579,128582,128585,128588,128591,128594,128597,128600,128603,128606,128609,128612,128615,128618,128621,128624,128627,128630,128633,128636,128639,128642,128645,128648,128651,128654,128657,128660,128663,128666,128669,128672,128675,128678,128681,128684,128687,128690,128693,128696,128699,128702,128705,128708,128711,128714,128717,128720,128723,128726,128729,128732,128735,128738,128741,128744,128747,128750,128753,128756,128759,128762,128765,128768,128771,128774,128777,128780,128783,128786,128789,128792,128795,128798,128801,128804,128807,128810,128813,128816,128819,128822,128825,128828,128831,128834,128837,128840,128843,128846,128849,128852,128855,128858,128861,128864,128867,128870,128873,128876,128879,128882,128885,128888,128891,128894,128897,128900,128903,128906,128909,128912,128915,128918,128921,128924,128927,128930,128933,128936,128939,128942,128945,128948,128951,128954,128957,128960,128963,128966,128969,128972,128975,128978,128981,128984,128987,128990,128993,128996,128999,129002,129005,129008,129011,129014,129017,129020,129023]}
2024-06-20 16:50:05,465 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [129026, 129029, 129032, 129035, 129038, 129041, 129044, 129047, 129050, 129053, 129056, 129059, 129062, 129065, 129068, 129071, 129074, 129077, 129080, 129083, 129282, 127403, 127406, 127409, 127412, 127415, 127418, 127421, 127424, 127427, 127430, 127433, 127436, 127439, 127442, 127445, 127448, 127451, 127454, 127457, 127460, 127463, 127466, 127469, 127472, 127475, 127478, 127481, 127484, 127487, 127490, 127493, 127496, 127499, 127502, 127505, 127508, 127511, 127514, 127517, 127520, 127523, 127526, 127529, 127532, 127535, 127538, 127541, 127544, 127547, 127550, 127553, 127556, 127559, 127562, 127565, 127568, 127571, 127574, 127577, 127580, 127583, 127586, 127589, 127592, 127595, 127598, 129646, 127601, 129649, 127604, 129652, 127607, 129655, 127610, 129658, 127613, 129661, 127616, 129664, 127619, 129667, 127622, 129670, 127625, 129673, 127628, 129676, 127631, 129679, 127634, 129682, 127637, 129685, 127640, 129688, 127643, 129691, 127646, 129694, 127649, 129697, 127652, 129700, 127655, 129703, 127658, 129706, 127661, 129709, 127664, 129712, 127667, 129715, 127670, 129718, 127673, 129721, 127676, 129724, 127679, 129727, 127682, 129730, 127685, 129733, 127688, 129736, 127691, 129739, 127694, 129742, 127697, 129745, 127700, 129748, 127703, 129751, 127706, 129754, 127709, 129757, 127712, 129760, 127715, 129763, 127718, 129766, 127721, 129769, 127724, 129772, 127727, 129775, 127730, 129778, 127733, 129781, 127736, 129784, 127739, 129787, 127742, 129790, 127745, 129793, 127748, 129796, 127751, 129799, 127754, 129802, 127757, 129805, 127760, 129808, 127763, 129811, 127766, 129814, 127769, 129817, 127772, 129820, 127775, 129823, 127778, 129826, 127781, 129829, 127784, 129832, 127787, 129835, 127790, 129838, 127793, 129841, 127796, 129844, 127799, 129847, 127802, 129850, 127805, 129853, 127808, 129856, 127811, 129859, 127814, 129862, 127817, 129865, 127820, 129868, 127823, 129871, 127826, 129874, 127829, 129877, 127832, 129880, 127835, 129883, 127838, 129886, 127841, 129889, 127844, 129892, 127847, 129895, 127850, 129898, 127853, 129901, 127856, 129904, 127859, 129907, 127862, 129910, 127865, 129913, 127868, 129916, 127871, 129919, 127874, 129922, 127877, 129925, 127880, 129928, 127883, 129931, 127886, 129934, 127889, 129937, 127892, 129940, 127895, 129943, 127898, 129946, 127901, 129949, 127904, 129952, 127907, 129955, 127910, 129958, 127913, 129961, 127916, 129964, 127919, 129967, 127922, 129970, 127925, 129973, 127928, 129976, 127931, 129979, 127934, 129982, 127937, 129985, 127940, 129988, 127943, 129991, 127946, 129994, 127949, 129997, 127952, 130000, 127955, 130003, 127958, 130006, 127961, 130009, 127964, 130012, 127967, 130015, 127970, 130018, 127973, 130021, 127976, 130024, 127979, 130027, 127982, 130030, 127985, 130033, 127988, 130036, 127991, 130039, 127994, 130042, 127997, 130045, 128000, 130048, 128003, 130051, 128006, 130054, 128009, 130057, 128012, 130060, 128015, 130063, 128018, 130066, 128021, 130069, 128024, 130072, 128027, 130075, 128030, 130078, 128033, 130081, 128036, 130084, 128039, 130087, 128042, 130090, 128045, 130093, 128048, 130096, 128051, 130099, 128054, 130102, 128057, 130105, 128060, 130108, 128063, 130111, 128066, 130114, 128069, 130117, 128072, 130120, 128075, 130123, 128078, 130126, 128081, 130129, 128084, 130132, 128087, 130135, 128090, 130138, 128093, 130141, 128096, 130144, 128099, 130147, 128102, 130150, 128105, 130153, 128108, 130156, 128111, 130159, 128114, 130162, 128117, 130165, 128120, 130168, 128123, 130171, 128126, 130174, 128129, 130177, 128132, 130180, 128135, 130183, 128138, 130186, 128141, 130189, 128144, 130192, 128147, 130195, 128150, 130198, 128153, 130201, 128156, 130204, 128159, 130207, 128162, 130210, 128165, 130213, 128168, 130216, 128171, 130219, 128174, 130222, 128177, 130225, 128180, 130228, 128183, 130231, 128186, 130234, 128189, 130237, 128192, 130240, 128195, 130243, 128198, 130246, 128201, 130249, 128204, 130252, 128207, 130255, 128210, 130258, 128213, 130261, 128216, 130264, 128219, 130267, 128222, 130270, 128225, 130273, 128228, 130276, 128231, 130279, 128234, 130282, 128237, 130285, 128240, 130288, 128243, 130291, 128246, 130294, 128249, 130297, 128252, 128255, 128258, 128261, 128264, 128267, 128270, 128273, 128276, 128279, 128282, 128285, 128288, 128291, 128294, 128297, 128300, 128303, 128306, 128309, 128312, 128315, 128318, 128321, 128324, 128327, 128330, 128333, 128336, 128339, 128342, 128345, 128348, 128351, 128354, 128357, 128360, 128363, 128366, 128369, 128372, 128375, 128378, 128381, 128384, 128387, 128390, 128393, 128396, 128399, 128402, 128405, 128408, 128411, 128414, 128417, 128420, 128423, 128426, 128429, 128432, 128435, 128438, 128441, 128444, 128447, 128450, 128453, 128456, 128459, 128462, 128465, 128468, 128471, 128474, 128477, 128480, 128483, 128486, 128489, 128492, 128495, 128498, 128501, 128504, 128507, 128510, 128513, 128516, 128519, 128522, 128525, 128528, 128531, 128534, 128537, 128540, 128543, 128546, 128549, 128552, 128555, 128558, 128561, 128564, 128567, 128570, 128573, 128576, 128579, 128582, 128585, 128588, 128591, 128594, 128597, 128600, 128603, 128606, 128609, 128612, 128615, 128618, 128621, 128624, 128627, 128630, 128633, 128636, 128639, 128642, 128645, 128648, 128651, 128654, 128657, 128660, 128663, 128666, 128669, 128672, 128675, 128678, 128681, 128684, 128687, 128690, 128693, 128696, 128699, 128702, 128705, 128708, 128711, 128714, 128717, 128720, 128723, 128726, 128729, 128732, 128735, 128738, 128741, 128744, 128747, 128750, 128753, 128756, 128759, 128762, 128765, 128768, 128771, 128774, 128777, 128780, 128783, 128786, 128789, 128792, 128795, 128798, 128801, 128804, 128807, 128810, 128813, 128816, 128819, 128822, 128825, 128828, 128831, 128834, 128837, 128840, 128843, 128846, 128849, 128852, 128855, 128858, 128861, 128864, 128867, 128870, 128873, 128876, 128879, 128882, 128885, 128888, 128891, 128894, 128897, 128900, 128903, 128906, 128909, 128912, 128915, 128918, 128921, 128924, 128927, 128930, 128933, 128936, 128939, 128942, 128945, 128948, 128951, 128954, 128957, 128960, 128963, 128966, 128969, 128972, 128975, 128978, 128981, 128984, 128987, 128990, 128993, 128996, 128999, 129002, 129005, 129008, 129011, 129014, 129017, 129020, 129023]}
2024-06-20 16:50:05,466 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,467 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/name)
2024-06-20 16:50:05,475 [DEBUG] py4...: ǀǀOK[200], content: {"name":"name","values":["9606.ENSP00000350170","9606.ENSP00000376921","9606.ENSP00000373413","9606.ENSP00000246548","9606.ENSP00000355741","9606.ENSP00000355865","9606.ENSP00000359489","9606.ENSP00000356953","9606.ENSP00000354416","9606.ENSP00000355747","9606.ENSP00000419260","9606.ENSP00000316032","9606.ENSP00000361433","9606.ENSP00000320650","9606.ENSP00000311816","9606.ENSP00000246672","9606.ENSP00000447537","9606.ENSP00000259708","9606.ENSP00000222584","9606.ENSP00000353331","9606.ENSP00000360108","9606.ENSP00000261712","9606.ENSP00000247668","9606.ENSP00000451828","9606.ENSP00000378914","9606.ENSP00000282753","9606.ENSP00000360280","9606.ENSP00000319591","9606.ENSP00000378917","9606.ENSP00000362334","9606.ENSP00000216037","9606.ENSP00000360671","9606.ENSP00000332549","9606.ENSP00000378487","9606.ENSP00000375892","9606.ENSP00000307786","9606.ENSP00000261303","9606.ENSP00000263967","9606.ENSP00000293190","9606.ENSP00000408695","9606.ENSP00000391723","9606.ENSP00000290541","9606.ENSP00000360270","9606.ENSP00000281154","9606.ENSP00000370744","9606.ENSP00000370589","9606.ENSP00000340330","9606.ENSP00000351908","9606.ENSP00000488361","9606.ENSP00000310129","9606.ENSP00000415822","9606.ENSP00000361635","9606.ENSP00000355155","9606.ENSP00000353010","9606.ENSP00000260402","9606.ENSP00000378974","9606.ENSP00000369996","9606.ENSP00000352608","9606.ENSP00000349205","9606.ENSP00000365301","9606.ENSP00000324560","9606.ENSP00000222254","9606.ENSP00000277746","9606.ENSP00000431926","9606.ENSP00000262139","9606.ENSP00000371532","9606.ENSP00000442793","9606.ENSP00000355325","9606.ENSP00000311121","9606.ENSP00000281456","9606.ENSP00000401445","9606.ENSP00000366475","9606.ENSP00000434241","9606.ENSP00000362144","9606.ENSP00000414359","9606.ENSP00000443631","9606.ENSP00000440485","9606.ENSP00000440185","9606.ENSP00000357876","9606.ENSP00000261479","9606.ENSP00000359531","9606.ENSP00000338173","9606.ENSP00000432568","9606.ENSP00000428994","9606.ENSP00000458663","9606.ENSP00000329357","9606.ENSP00000306253","9606.ENSP00000362649","9606.ENSP00000271308","9606.ENSP00000332772","9606.ENSP00000496695","9606.ENSP00000355511","9606.ENSP00000501150","9606.ENSP00000467024","9606.ENSP00000230354","9606.ENSP00000221233","9606.ENSP00000500582","9606.ENSP00000392028","9606.ENSP00000223321","9606.ENSP00000371101","9606.ENSP00000288828","9606.ENSP00000467262","9606.ENSP00000310572","9606.ENSP00000262904","9606.ENSP00000244769","9606.ENSP00000291568","9606.ENSP00000396937","9606.ENSP00000395535","9606.ENSP00000484998","9606.ENSP00000492795","9606.ENSP00000446576","9606.ENSP00000419395","9606.ENSP00000338185","9606.ENSP00000425979","9606.ENSP00000345702","9606.ENSP00000343535","9606.ENSP00000478877","9606.ENSP00000352011","9606.ENSP00000262039","9606.ENSP00000364813","9606.ENSP00000418695","9606.ENSP00000352252","9606.ENSP00000349595","9606.ENSP00000222574","9606.ENSP00000225174","9606.ENSP00000221485","9606.ENSP00000270586","9606.ENSP00000308533","9606.ENSP00000355231","9606.ENSP00000222330","9606.ENSP00000359910","9606.ENSP00000382104","9606.ENSP00000481554","9606.ENSP00000352257","9606.ENSP00000392423","9606.ENSP00000375810","9606.ENSP00000428056","9606.ENSP00000370125","9606.ENSP00000394560","9606.ENSP00000354553","9606.ENSP00000263431","9606.ENSP00000355645","9606.ENSP00000338990","9606.ENSP00000482753","9606.ENSP00000262741","9606.ENSP00000409007","9606.ENSP00000391211","9606.ENSP00000369145","9606.ENSP00000366563","9606.ENSP00000260950","9606.ENSP00000025008","9606.ENSP00000343552","9606.ENSP00000216455","9606.ENSP00000340278","9606.ENSP00000296526","9606.ENSP00000259727","9606.ENSP00000262193","9606.ENSP00000265171","9606.ENSP00000386541","9606.ENSP00000386710","9606.ENSP00000269143","9606.ENSP00000401633","9606.ENSP00000250003","9606.ENSP00000436864","9606.ENSP00000247178","9606.ENSP00000435412","9606.ENSP00000221742","9606.ENSP00000379181","9606.ENSP00000261523","9606.ENSP00000381382","9606.ENSP00000264639","9606.ENSP00000356982","9606.ENSP00000286548","9606.ENSP00000410759","9606.ENSP00000360608","9606.ENSP00000228644","9606.ENSP00000483688","9606.ENSP00000339867","9606.ENSP00000481021","9606.ENSP00000313377","9606.ENSP00000247219","9606.ENSP00000351614","9606.ENSP00000354558","9606.ENSP00000282356","9606.ENSP00000237264","9606.ENSP00000477999","9606.ENSP00000489829","9606.ENSP00000397259","9606.ENSP00000259457","9606.ENSP00000497112","9606.ENSP00000428845","9606.ENSP00000497594","9606.ENSP00000432412","9606.ENSP00000272317","9606.ENSP00000345206","9606.ENSP00000364118","9606.ENSP00000263269","9606.ENSP00000258149","9606.ENSP00000367762","9606.ENSP00000387699","9606.ENSP00000481029","9606.ENSP00000345064","9606.ENSP00000157812","9606.ENSP00000295777","9606.ENSP00000477455","9606.ENSP00000362299","9606.ENSP00000368966","9606.ENSP00000295897","9606.ENSP00000341243","9606.ENSP00000313007","9606.ENSP00000044462","9606.ENSP00000500386","9606.ENSP00000363435","9606.ENSP00000246186","9606.ENSP00000496129","9606.ENSP00000257290","9606.ENSP00000309595","9606.ENSP00000261427","9606.ENSP00000309474","9606.ENSP00000410769","9606.ENSP00000234389","9606.ENSP00000487785","9606.ENSP00000348442","9606.ENSP00000261667","9606.ENSP00000370808","9606.ENSP00000335153","9606.ENSP00000219313","9606.ENSP00000376322","9606.ENSP00000353072","9606.ENSP00000351742","9606.ENSP00000215071","9606.ENSP00000282486","9606.ENSP00000440045","9606.ENSP00000387593","9606.ENSP00000252934","9606.ENSP00000053867","9606.ENSP00000354681","9606.ENSP00000323046","9606.ENSP00000358525","9606.ENSP00000303356","9606.ENSP00000333363","9606.ENSP00000357292","9606.ENSP00000262241","9606.ENSP00000480916","9606.ENSP00000369895","9606.ENSP00000294435","9606.ENSP00000262367","9606.ENSP00000345195","9606.ENSP00000429763","9606.ENSP00000341826","9606.ENSP00000403397","9606.ENSP00000298910","9606.ENSP00000369531","9606.ENSP00000272444","9606.ENSP00000406549","9606.ENSP00000270142","9606.ENSP00000347997","9606.ENSP00000337103","9606.ENSP00000368314","9606.ENSP00000264606","9606.ENSP00000284262","9606.ENSP00000479719","9606.ENSP00000219548","9606.ENSP00000406286","9606.ENSP00000350928","9606.ENSP00000283228","9606.ENSP00000346671","9606.ENSP00000385142","9606.ENSP00000013807","9606.ENSP00000302108","9606.ENSP00000371729","9606.ENSP00000284551","9606.ENSP00000356231","9606.ENSP00000263754","9606.ENSP00000359727","9606.ENSP00000287820","9606.ENSP00000458065","9606.ENSP00000386229","9606.ENSP00000357565","9606.ENSP00000040584","9606.ENSP00000334463","9606.ENSP00000295757","9606.ENSP00000357206","9606.ENSP00000363123","9606.ENSP00000263209","9606.ENSP00000362399","9606.ENSP00000355028","9606.ENSP00000358151","9606.ENSP00000377015","9606.ENSP00000295756","9606.ENSP00000453858","9606.ENSP00000292246","9606.ENSP00000428426","9606.ENSP00000340989","9606.ENSP00000408617","9606.ENSP00000383199","9606.ENSP00000345347","9606.ENSP00000358155","9606.ENSP00000263205","9606.ENSP00000490614","9606.ENSP00000264657","9606.ENSP00000441685","9606.ENSP00000347896","9606.ENSP00000391942","9606.ENSP00000254976","9606.ENSP00000286628","9606.ENSP00000366249","9606.ENSP00000285419","9606.ENSP00000437256","9606.ENSP00000464342","9606.ENSP00000366488","9606.ENSP00000489624","9606.ENSP00000325863","9606.ENSP00000260116","9606.ENSP00000319060","9606.ENSP00000406293","9606.ENSP00000216144","9606.ENSP00000337353","9606.ENSP00000230321","9606.ENSP00000398698","9606.ENSP00000359719","9606.ENSP00000228872","9606.ENSP00000250495","9606.ENSP00000352738","9606.ENSP00000378476","9606.ENSP00000430432","9606.ENSP00000358784","9606.ENSP00000364210","9606.ENSP00000253408","9606.ENSP00000282146","9606.ENSP00000380432","9606.ENSP00000282020","9606.ENSP00000482169","9606.ENSP00000287713","9606.ENSP00000483254","9606.ENSP00000364204","9606.ENSP00000333262","9606.ENSP00000358283","9606.ENSP00000378699","9606.ENSP00000419243","9606.ENSP00000239231","9606.ENSP00000295987","9606.ENSP00000378338","9606.ENSP00000224140","9606.ENSP00000181796","9606.ENSP00000484060","9606.ENSP00000323588","9606.ENSP00000390941","9606.ENSP00000264689","9606.ENSP00000260665","9606.ENSP00000283195","9606.ENSP00000351777","9606.ENSP00000349722","9606.ENSP00000354923","9606.ENSP00000437125","9606.ENSP00000374354","9606.ENSP00000346694","9606.ENSP00000498362","9606.ENSP00000216254","9606.ENSP00000380903","9606.ENSP00000276654","9606.ENSP00000359095","9606.ENSP00000357583","9606.ENSP00000477437","9606.ENSP00000249396","9606.ENSP00000408526","9606.ENSP00000310036","9606.ENSP00000478887","9606.ENSP00000463653","9606.ENSP00000354929","9606.ENSP00000377372","9606.ENSP00000326366","9606.ENSP00000438574","9606.ENSP00000258106","9606.ENSP00000333277","9606.ENSP00000362014","9606.ENSP00000334002","9606.ENSP00000418447","9606.ENSP00000240100","9606.ENSP00000252804","9606.ENSP00000495360","9606.ENSP00000227507","9606.ENSP00000264552","9606.ENSP00000307863","9606.ENSP00000300213","9606.ENSP00000306894","9606.ENSP00000369863","9606.ENSP00000269228","9606.ENSP00000216127","9606.ENSP00000379915","9606.ENSP00000348645","9606.ENSP00000399403","9606.ENSP00000406209","9606.ENSP00000391803","9606.ENSP00000233813","9606.ENSP00000444433","9606.ENSP00000475626","9606.ENSP00000489407","9606.ENSP00000295589","9606.ENSP00000454229","9606.ENSP00000500990","9606.ENSP00000499582","9606.ENSP00000293288","9606.ENSP00000362131","9606.ENSP00000311032","9606.ENSP00000359085","9606.ENSP00000264867","9606.ENSP00000405388","9606.ENSP00000296271","9606.ENSP00000352516","9606.ENSP00000316842","9606.ENSP00000498255","9606.ENSP00000180166","9606.ENSP00000282561","9606.ENSP00000332194","9606.ENSP00000284981","9606.ENSP00000221930","9606.ENSP00000212015","9606.ENSP00000477715","9606.ENSP00000270349","9606.ENSP00000368881","9606.ENSP00000388638","9606.ENSP00000285667","9606.ENSP00000386458","9606.ENSP00000454852","9606.ENSP00000362485","9606.ENSP00000368884","9606.ENSP00000270225","9606.ENSP00000260386","9606.ENSP00000365514","9606.ENSP00000240316","9606.ENSP00000327687","9606.ENSP00000303540","9606.ENSP00000418572","9606.ENSP00000418960","9606.ENSP00000419782","9606.ENSP00000307900","9606.ENSP00000324173","9606.ENSP00000418721","9606.ENSP00000347170","9606.ENSP00000273320","9606.ENSP00000225577","9606.ENSP00000415579","9606.ENSP00000376637","9606.ENSP00000359804","9606.ENSP00000374455","9606.ENSP00000413035","9606.ENSP00000383042","9606.ENSP00000221801","9606.ENSP00000399851","9606.ENSP00000302216","9606.ENSP00000376753","9606.ENSP00000364270","9606.ENSP00000315137","9606.ENSP00000366452","9606.ENSP00000256079","9606.ENSP00000349748","9606.ENSP00000216727","9606.ENSP00000288943","9606.ENSP00000385216","9606.ENSP00000216218","9606.ENSP00000304331","9606.ENSP00000366330","9606.ENSP00000361027","9606.ENSP00000252996","9606.ENSP00000365861","9606.ENSP00000302100","9606.ENSP00000305422","9606.ENSP00000254810","9606.ENSP00000386786","9606.ENSP00000304643","9606.ENSP00000361021","9606.ENSP00000346483","9606.ENSP00000307604","9606.ENSP00000226382","9606.ENSP00000347184","9606.ENSP00000298556","9606.ENSP00000268058","9606.ENSP00000399376","9606.ENSP00000244061","9606.ENSP00000338512","9606.ENSP00000291295","9606.ENSP00000405674","9606.ENSP00000223129","9606.ENSP00000323148","9606.ENSP00000318635","9606.ENSP00000237014","9606.ENSP00000353864","9606.ENSP00000368984","9606.ENSP00000397563","9606.ENSP00000284240","9606.ENSP00000320821","9606.ENSP00000498653","9606.ENSP00000216714","9606.ENSP00000499501","9606.ENSP00000476119","9606.ENSP00000254722","9606.ENSP00000430000","9606.ENSP00000340820","9606.ENSP00000430241","9606.ENSP00000327513","9606.ENSP00000329403","9606.ENSP00000380602","9606.ENSP00000358089","9606.ENSP00000301587","9606.ENSP00000296755","9606.ENSP00000365227","9606.ENSP00000247225","9606.ENSP00000338629","9606.ENSP00000262958","9606.ENSP00000339835","9606.ENSP00000282499","9606.ENSP00000374049","9606.ENSP00000078429","9606.ENSP00000379616","9606.ENSP00000489262","9606.ENSP00000305702","9606.ENSP00000376352","9606.ENSP00000471191","9606.ENSP00000314407","9606.ENSP00000261367","9606.ENSP00000365807","9606.ENSP00000405327","9606.ENSP00000368970","9606.ENSP00000329918","9606.ENSP00000261366","9606.ENSP00000365576","9606.ENSP00000216200","9606.ENSP00000497217","9606.ENSP00000397297","9606.ENSP00000365458","9606.ENSP00000306920","9606.ENSP00000418994","9606.ENSP00000254719","9606.ENSP00000250113","9606.ENSP00000377681","9606.ENSP00000401371","9606.ENSP00000355657","9606.ENSP00000265113","9606.ENSP00000340292","9606.ENSP00000425561","9606.ENSP00000254108","9606.ENSP00000363822","9606.ENSP00000264033","9606.ENSP00000494750","9606.ENSP00000231004","9606.ENSP00000489189","9606.ENSP00000384625","9606.ENSP00000361405","9606.ENSP00000354335","9606.ENSP00000469455","9606.ENSP00000324806","9606.ENSP00000436679","9606.ENSP00000264255","9606.ENSP00000264498","9606.ENSP00000343690","9606.ENSP00000302814","9606.ENSP00000369127","9606.ENSP00000301727","9606.ENSP00000265351","9606.ENSP00000266682","9606.ENSP00000360660","9606.ENSP00000379287","9606.ENSP00000267890","9606.ENSP00000298596","9606.ENSP00000381488","9606.ENSP00000309457","9606.ENSP00000282928","9606.ENSP00000354346","9606.ENSP00000310561","9606.ENSP00000297261","9606.ENSP00000370571","9606.ENSP00000439937","9606.ENSP00000481593","9606.ENSP00000225916","9606.ENSP00000265379","9606.ENSP00000345997","9606.ENSP00000265381","9606.ENSP00000313829","9606.ENSP00000435466","9606.ENSP00000266594","9606.ENSP00000254488","9606.ENSP00000496959","9606.ENSP00000497806","9606.ENSP00000240185","9606.ENSP00000415676","9606.ENSP00000354111","9606.ENSP00000220592","9606.ENSP00000494538","9606.ENSP00000480012","9606.ENSP00000391269","9606.ENSP00000277120","9606.ENSP00000366070","9606.ENSP00000269601","9606.ENSP00000264276","9606.ENSP00000402257","9606.ENSP00000426503","9606.ENSP00000424566","9606.ENSP00000258962","9606.ENSP00000320347","9606.ENSP00000391381","9606.ENSP00000264036","9606.ENSP00000403343","9606.ENSP00000288490","9606.ENSP00000368007","9606.ENSP00000291700","9606.ENSP00000219476","9606.ENSP00000492363","9606.ENSP00000354360","9606.ENSP00000417864","9606.ENSP00000310585","9606.ENSP00000358967","9606.ENSP00000354125","9606.ENSP00000265431","9606.ENSP00000359890","9606.ENSP00000263257","9606.ENSP00000302967","9606.ENSP00000343001","9606.ENSP00000369689","9606.ENSP00000252486","9606.ENSP00000255631","9606.ENSP00000356790","9606.ENSP00000480050","9606.ENSP00000470248","9606.ENSP00000354497","9606.ENSP00000278616","9606.ENSP00000303709","9606.ENSP00000265421","9606.ENSP00000252482","9606.ENSP00000264335","9606.ENSP00000321455","9606.ENSP00000323511","9606.ENSP00000473623","9606.ENSP00000312987","9606.ENSP00000442920","9606.ENSP00000215095","9606.ENSP00000336712","9606.ENSP00000378394","9606.ENSP00000220420","9606.ENSP00000299001","9606.ENSP00000246914","9606.ENSP00000331040","9606.ENSP00000221996","9606.ENSP00000450873","9606.ENSP00000263038","9606.ENSP00000265459","9606.ENSP00000342056","9606.ENSP00000371985","9606.ENSP00000400142","9606.ENSP00000263160","9606.ENSP00000254325","9606.ENSP00000403888","9606.ENSP00000254322","9606.ENSP00000379350","9606.ENSP00000414303","9606.ENSP00000359506","9606.ENSP00000422185","9606.ENSP00000360609","9606.ENSP00000268712","9606.ENSP00000358518","9606.ENSP00000462745","9606.ENSP00000263025","9606.ENSP00000493382","9606.ENSP00000405965","9606.ENSP00000368332","9606.ENSP00000346534","9606.ENSP00000345575","9606.ENSP00000309477","9606.ENSP00000290649","9606.ENSP00000361930","9606.ENSP00000495557","9606.ENSP00000345571","9606.ENSP00000309591","9606.ENSP00000302961","9606.ENSP00000376077","9606.ENSP00000355370","9606.ENSP00000376197","9606.ENSP00000438886","9606.ENSP00000359978","9606.ENSP00000358886","9606.ENSP00000317333","9606.ENSP00000374552","9606.ENSP00000261837","9606.ENSP00000427900","9606.ENSP00000435637","9606.ENSP00000431162","9606.ENSP00000306330","9606.ENSP00000362578","9606.ENSP00000385675","9606.ENSP00000332706","9606.ENSP00000348056","9606.ENSP00000365601","9606.ENSP00000278379","9606.ENSP00000370083","9606.ENSP00000276079","9606.ENSP00000453170","9606.ENSP00000245255","9606.ENSP00000305480","9606.ENSP00000364639","9606.ENSP00000265081","9606.ENSP00000353767","9606.ENSP00000353646","9606.ENSP00000269305","9606.ENSP00000316357","9606.ENSP00000398632","9606.ENSP00000279488","9606.ENSP00000481848","9606.ENSP00000258302","9606.ENSP00000354859","9606.ENSP00000314173","9606.ENSP00000377936","9606.ENSP00000499387","9606.ENSP00000360266","9606.ENSP00000362205","9606.ENSP00000265195","9606.ENSP00000384474","9606.ENSP00000349156","9606.ENSP00000258415","9606.ENSP00000422435","9606.ENSP00000370193","9606.ENSP00000315299","9606.ENSP00000370058","9606.ENSP00000371267","9606.ENSP00000248975","9606.ENSP00000414856","9606.ENSP00000321606","9606.ENSP00000339004","9606.ENSP00000350386","9606.ENSP00000409279","9606.ENSP00000353414","9606.ENSP00000362680","9606.ENSP00000261731","9606.ENSP00000215832","9606.ENSP00000349168","9606.ENSP00000294702","9606.ENSP00000385410","9606.ENSP00000360493","9606.ENSP00000477141","9606.ENSP00000340467","9606.ENSP00000295910","9606.ENSP00000411355","9606.ENSP00000381057","9606.ENSP00000421339","9606.ENSP00000308610","9606.ENSP00000225504","9606.ENSP00000261601","9606.ENSP00000371133","9606.ENSP00000321835","9606.ENSP00000455698","9606.ENSP00000479667","9606.ENSP00000419081","9606.ENSP00000256261","9606.ENSP00000306561","9606.ENSP00000295900","9606.ENSP00000349298","9606.ENSP00000362300","9606.ENSP00000254079","9606.ENSP00000381185","9606.ENSP00000219197","9606.ENSP00000490107","9606.ENSP00000417901","9606.ENSP00000359019","9606.ENSP00000380070","9606.ENSP00000458537","9606.ENSP00000288135","9606.ENSP00000457205","9606.ENSP00000393379","9606.ENSP00000478249","9606.ENSP00000318585","9606.ENSP00000305288","9606.ENSP00000259711","9606.ENSP00000265164","9606.ENSP00000343515","9606.ENSP00000340125","9606.ENSP00000471851","9606.ENSP00000360231","9606.ENSP00000245451","9606.ENSP00000202625","9606.ENSP00000306138","9606.ENSP00000248600"]}
2024-06-20 16:50:05,476 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000350170', '9606.ENSP00000376921', '9606.ENSP00000373413', '9606.ENSP00000246548', '9606.ENSP00000355741', '9606.ENSP00000355865', '9606.ENSP00000359489', '9606.ENSP00000356953', '9606.ENSP00000354416', '9606.ENSP00000355747', '9606.ENSP00000419260', '9606.ENSP00000316032', '9606.ENSP00000361433', '9606.ENSP00000320650', '9606.ENSP00000311816', '9606.ENSP00000246672', '9606.ENSP00000447537', '9606.ENSP00000259708', '9606.ENSP00000222584', '9606.ENSP00000353331', '9606.ENSP00000360108', '9606.ENSP00000261712', '9606.ENSP00000247668', '9606.ENSP00000451828', '9606.ENSP00000378914', '9606.ENSP00000282753', '9606.ENSP00000360280', '9606.ENSP00000319591', '9606.ENSP00000378917', '9606.ENSP00000362334', '9606.ENSP00000216037', '9606.ENSP00000360671', '9606.ENSP00000332549', '9606.ENSP00000378487', '9606.ENSP00000375892', '9606.ENSP00000307786', '9606.ENSP00000261303', '9606.ENSP00000263967', '9606.ENSP00000293190', '9606.ENSP00000408695', '9606.ENSP00000391723', '9606.ENSP00000290541', '9606.ENSP00000360270', '9606.ENSP00000281154', '9606.ENSP00000370744', '9606.ENSP00000370589', '9606.ENSP00000340330', '9606.ENSP00000351908', '9606.ENSP00000488361', '9606.ENSP00000310129', '9606.ENSP00000415822', '9606.ENSP00000361635', '9606.ENSP00000355155', '9606.ENSP00000353010', '9606.ENSP00000260402', '9606.ENSP00000378974', '9606.ENSP00000369996', '9606.ENSP00000352608', '9606.ENSP00000349205', '9606.ENSP00000365301', '9606.ENSP00000324560', '9606.ENSP00000222254', '9606.ENSP00000277746', '9606.ENSP00000431926', '9606.ENSP00000262139', '9606.ENSP00000371532', '9606.ENSP00000442793', '9606.ENSP00000355325', '9606.ENSP00000311121', '9606.ENSP00000281456', '9606.ENSP00000401445', '9606.ENSP00000366475', '9606.ENSP00000434241', '9606.ENSP00000362144', '9606.ENSP00000414359', '9606.ENSP00000443631', '9606.ENSP00000440485', '9606.ENSP00000440185', '9606.ENSP00000357876', '9606.ENSP00000261479', '9606.ENSP00000359531', '9606.ENSP00000338173', '9606.ENSP00000432568', '9606.ENSP00000428994', '9606.ENSP00000458663', '9606.ENSP00000329357', '9606.ENSP00000306253', '9606.ENSP00000362649', '9606.ENSP00000271308', '9606.ENSP00000332772', '9606.ENSP00000496695', '9606.ENSP00000355511', '9606.ENSP00000501150', '9606.ENSP00000467024', '9606.ENSP00000230354', '9606.ENSP00000221233', '9606.ENSP00000500582', '9606.ENSP00000392028', '9606.ENSP00000223321', '9606.ENSP00000371101', '9606.ENSP00000288828', '9606.ENSP00000467262', '9606.ENSP00000310572', '9606.ENSP00000262904', '9606.ENSP00000244769', '9606.ENSP00000291568', '9606.ENSP00000396937', '9606.ENSP00000395535', '9606.ENSP00000484998', '9606.ENSP00000492795', '9606.ENSP00000446576', '9606.ENSP00000419395', '9606.ENSP00000338185', '9606.ENSP00000425979', '9606.ENSP00000345702', '9606.ENSP00000343535', '9606.ENSP00000478877', '9606.ENSP00000352011', '9606.ENSP00000262039', '9606.ENSP00000364813', '9606.ENSP00000418695', '9606.ENSP00000352252', '9606.ENSP00000349595', '9606.ENSP00000222574', '9606.ENSP00000225174', '9606.ENSP00000221485', '9606.ENSP00000270586', '9606.ENSP00000308533', '9606.ENSP00000355231', '9606.ENSP00000222330', '9606.ENSP00000359910', '9606.ENSP00000382104', '9606.ENSP00000481554', '9606.ENSP00000352257', '9606.ENSP00000392423', '9606.ENSP00000375810', '9606.ENSP00000428056', '9606.ENSP00000370125', '9606.ENSP00000394560', '9606.ENSP00000354553', '9606.ENSP00000263431', '9606.ENSP00000355645', '9606.ENSP00000338990', '9606.ENSP00000482753', '9606.ENSP00000262741', '9606.ENSP00000409007', '9606.ENSP00000391211', '9606.ENSP00000369145', '9606.ENSP00000366563', '9606.ENSP00000260950', '9606.ENSP00000025008', '9606.ENSP00000343552', '9606.ENSP00000216455', '9606.ENSP00000340278', '9606.ENSP00000296526', '9606.ENSP00000259727', '9606.ENSP00000262193', '9606.ENSP00000265171', '9606.ENSP00000386541', '9606.ENSP00000386710', '9606.ENSP00000269143', '9606.ENSP00000401633', '9606.ENSP00000250003', '9606.ENSP00000436864', '9606.ENSP00000247178', '9606.ENSP00000435412', '9606.ENSP00000221742', '9606.ENSP00000379181', '9606.ENSP00000261523', '9606.ENSP00000381382', '9606.ENSP00000264639', '9606.ENSP00000356982', '9606.ENSP00000286548', '9606.ENSP00000410759', '9606.ENSP00000360608', '9606.ENSP00000228644', '9606.ENSP00000483688', '9606.ENSP00000339867', '9606.ENSP00000481021', '9606.ENSP00000313377', '9606.ENSP00000247219', '9606.ENSP00000351614', '9606.ENSP00000354558', '9606.ENSP00000282356', '9606.ENSP00000237264', '9606.ENSP00000477999', '9606.ENSP00000489829', '9606.ENSP00000397259', '9606.ENSP00000259457', '9606.ENSP00000497112', '9606.ENSP00000428845', '9606.ENSP00000497594', '9606.ENSP00000432412', '9606.ENSP00000272317', '9606.ENSP00000345206', '9606.ENSP00000364118', '9606.ENSP00000263269', '9606.ENSP00000258149', '9606.ENSP00000367762', '9606.ENSP00000387699', '9606.ENSP00000481029', '9606.ENSP00000345064', '9606.ENSP00000157812', '9606.ENSP00000295777', '9606.ENSP00000477455', '9606.ENSP00000362299', '9606.ENSP00000368966', '9606.ENSP00000295897', '9606.ENSP00000341243', '9606.ENSP00000313007', '9606.ENSP00000044462', '9606.ENSP00000500386', '9606.ENSP00000363435', '9606.ENSP00000246186', '9606.ENSP00000496129', '9606.ENSP00000257290', '9606.ENSP00000309595', '9606.ENSP00000261427', '9606.ENSP00000309474', '9606.ENSP00000410769', '9606.ENSP00000234389', '9606.ENSP00000487785', '9606.ENSP00000348442', '9606.ENSP00000261667', '9606.ENSP00000370808', '9606.ENSP00000335153', '9606.ENSP00000219313', '9606.ENSP00000376322', '9606.ENSP00000353072', '9606.ENSP00000351742', '9606.ENSP00000215071', '9606.ENSP00000282486', '9606.ENSP00000440045', '9606.ENSP00000387593', '9606.ENSP00000252934', '9606.ENSP00000053867', '9606.ENSP00000354681', '9606.ENSP00000323046', '9606.ENSP00000358525', '9606.ENSP00000303356', '9606.ENSP00000333363', '9606.ENSP00000357292', '9606.ENSP00000262241', '9606.ENSP00000480916', '9606.ENSP00000369895', '9606.ENSP00000294435', '9606.ENSP00000262367', '9606.ENSP00000345195', '9606.ENSP00000429763', '9606.ENSP00000341826', '9606.ENSP00000403397', '9606.ENSP00000298910', '9606.ENSP00000369531', '9606.ENSP00000272444', '9606.ENSP00000406549', '9606.ENSP00000270142', '9606.ENSP00000347997', '9606.ENSP00000337103', '9606.ENSP00000368314', '9606.ENSP00000264606', '9606.ENSP00000284262', '9606.ENSP00000479719', '9606.ENSP00000219548', '9606.ENSP00000406286', '9606.ENSP00000350928', '9606.ENSP00000283228', '9606.ENSP00000346671', '9606.ENSP00000385142', '9606.ENSP00000013807', '9606.ENSP00000302108', '9606.ENSP00000371729', '9606.ENSP00000284551', '9606.ENSP00000356231', '9606.ENSP00000263754', '9606.ENSP00000359727', '9606.ENSP00000287820', '9606.ENSP00000458065', '9606.ENSP00000386229', '9606.ENSP00000357565', '9606.ENSP00000040584', '9606.ENSP00000334463', '9606.ENSP00000295757', '9606.ENSP00000357206', '9606.ENSP00000363123', '9606.ENSP00000263209', '9606.ENSP00000362399', '9606.ENSP00000355028', '9606.ENSP00000358151', '9606.ENSP00000377015', '9606.ENSP00000295756', '9606.ENSP00000453858', '9606.ENSP00000292246', '9606.ENSP00000428426', '9606.ENSP00000340989', '9606.ENSP00000408617', '9606.ENSP00000383199', '9606.ENSP00000345347', '9606.ENSP00000358155', '9606.ENSP00000263205', '9606.ENSP00000490614', '9606.ENSP00000264657', '9606.ENSP00000441685', '9606.ENSP00000347896', '9606.ENSP00000391942', '9606.ENSP00000254976', '9606.ENSP00000286628', '9606.ENSP00000366249', '9606.ENSP00000285419', '9606.ENSP00000437256', '9606.ENSP00000464342', '9606.ENSP00000366488', '9606.ENSP00000489624', '9606.ENSP00000325863', '9606.ENSP00000260116', '9606.ENSP00000319060', '9606.ENSP00000406293', '9606.ENSP00000216144', '9606.ENSP00000337353', '9606.ENSP00000230321', '9606.ENSP00000398698', '9606.ENSP00000359719', '9606.ENSP00000228872', '9606.ENSP00000250495', '9606.ENSP00000352738', '9606.ENSP00000378476', '9606.ENSP00000430432', '9606.ENSP00000358784', '9606.ENSP00000364210', '9606.ENSP00000253408', '9606.ENSP00000282146', '9606.ENSP00000380432', '9606.ENSP00000282020', '9606.ENSP00000482169', '9606.ENSP00000287713', '9606.ENSP00000483254', '9606.ENSP00000364204', '9606.ENSP00000333262', '9606.ENSP00000358283', '9606.ENSP00000378699', '9606.ENSP00000419243', '9606.ENSP00000239231', '9606.ENSP00000295987', '9606.ENSP00000378338', '9606.ENSP00000224140', '9606.ENSP00000181796', '9606.ENSP00000484060', '9606.ENSP00000323588', '9606.ENSP00000390941', '9606.ENSP00000264689', '9606.ENSP00000260665', '9606.ENSP00000283195', '9606.ENSP00000351777', '9606.ENSP00000349722', '9606.ENSP00000354923', '9606.ENSP00000437125', '9606.ENSP00000374354', '9606.ENSP00000346694', '9606.ENSP00000498362', '9606.ENSP00000216254', '9606.ENSP00000380903', '9606.ENSP00000276654', '9606.ENSP00000359095', '9606.ENSP00000357583', '9606.ENSP00000477437', '9606.ENSP00000249396', '9606.ENSP00000408526', '9606.ENSP00000310036', '9606.ENSP00000478887', '9606.ENSP00000463653', '9606.ENSP00000354929', '9606.ENSP00000377372', '9606.ENSP00000326366', '9606.ENSP00000438574', '9606.ENSP00000258106', '9606.ENSP00000333277', '9606.ENSP00000362014', '9606.ENSP00000334002', '9606.ENSP00000418447', '9606.ENSP00000240100', '9606.ENSP00000252804', '9606.ENSP00000495360', '9606.ENSP00000227507', '9606.ENSP00000264552', '9606.ENSP00000307863', '9606.ENSP00000300213', '9606.ENSP00000306894', '9606.ENSP00000369863', '9606.ENSP00000269228', '9606.ENSP00000216127', '9606.ENSP00000379915', '9606.ENSP00000348645', '9606.ENSP00000399403', '9606.ENSP00000406209', '9606.ENSP00000391803', '9606.ENSP00000233813', '9606.ENSP00000444433', '9606.ENSP00000475626', '9606.ENSP00000489407', '9606.ENSP00000295589', '9606.ENSP00000454229', '9606.ENSP00000500990', '9606.ENSP00000499582', '9606.ENSP00000293288', '9606.ENSP00000362131', '9606.ENSP00000311032', '9606.ENSP00000359085', '9606.ENSP00000264867', '9606.ENSP00000405388', '9606.ENSP00000296271', '9606.ENSP00000352516', '9606.ENSP00000316842', '9606.ENSP00000498255', '9606.ENSP00000180166', '9606.ENSP00000282561', '9606.ENSP00000332194', '9606.ENSP00000284981', '9606.ENSP00000221930', '9606.ENSP00000212015', '9606.ENSP00000477715', '9606.ENSP00000270349', '9606.ENSP00000368881', '9606.ENSP00000388638', '9606.ENSP00000285667', '9606.ENSP00000386458', '9606.ENSP00000454852', '9606.ENSP00000362485', '9606.ENSP00000368884', '9606.ENSP00000270225', '9606.ENSP00000260386', '9606.ENSP00000365514', '9606.ENSP00000240316', '9606.ENSP00000327687', '9606.ENSP00000303540', '9606.ENSP00000418572', '9606.ENSP00000418960', '9606.ENSP00000419782', '9606.ENSP00000307900', '9606.ENSP00000324173', '9606.ENSP00000418721', '9606.ENSP00000347170', '9606.ENSP00000273320', '9606.ENSP00000225577', '9606.ENSP00000415579', '9606.ENSP00000376637', '9606.ENSP00000359804', '9606.ENSP00000374455', '9606.ENSP00000413035', '9606.ENSP00000383042', '9606.ENSP00000221801', '9606.ENSP00000399851', '9606.ENSP00000302216', '9606.ENSP00000376753', '9606.ENSP00000364270', '9606.ENSP00000315137', '9606.ENSP00000366452', '9606.ENSP00000256079', '9606.ENSP00000349748', '9606.ENSP00000216727', '9606.ENSP00000288943', '9606.ENSP00000385216', '9606.ENSP00000216218', '9606.ENSP00000304331', '9606.ENSP00000366330', '9606.ENSP00000361027', '9606.ENSP00000252996', '9606.ENSP00000365861', '9606.ENSP00000302100', '9606.ENSP00000305422', '9606.ENSP00000254810', '9606.ENSP00000386786', '9606.ENSP00000304643', '9606.ENSP00000361021', '9606.ENSP00000346483', '9606.ENSP00000307604', '9606.ENSP00000226382', '9606.ENSP00000347184', '9606.ENSP00000298556', '9606.ENSP00000268058', '9606.ENSP00000399376', '9606.ENSP00000244061', '9606.ENSP00000338512', '9606.ENSP00000291295', '9606.ENSP00000405674', '9606.ENSP00000223129', '9606.ENSP00000323148', '9606.ENSP00000318635', '9606.ENSP00000237014', '9606.ENSP00000353864', '9606.ENSP00000368984', '9606.ENSP00000397563', '9606.ENSP00000284240', '9606.ENSP00000320821', '9606.ENSP00000498653', '9606.ENSP00000216714', '9606.ENSP00000499501', '9606.ENSP00000476119', '9606.ENSP00000254722', '9606.ENSP00000430000', '9606.ENSP00000340820', '9606.ENSP00000430241', '9606.ENSP00000327513', '9606.ENSP00000329403', '9606.ENSP00000380602', '9606.ENSP00000358089', '9606.ENSP00000301587', '9606.ENSP00000296755', '9606.ENSP00000365227', '9606.ENSP00000247225', '9606.ENSP00000338629', '9606.ENSP00000262958', '9606.ENSP00000339835', '9606.ENSP00000282499', '9606.ENSP00000374049', '9606.ENSP00000078429', '9606.ENSP00000379616', '9606.ENSP00000489262', '9606.ENSP00000305702', '9606.ENSP00000376352', '9606.ENSP00000471191', '9606.ENSP00000314407', '9606.ENSP00000261367', '9606.ENSP00000365807', '9606.ENSP00000405327', '9606.ENSP00000368970', '9606.ENSP00000329918', '9606.ENSP00000261366', '9606.ENSP00000365576', '9606.ENSP00000216200', '9606.ENSP00000497217', '9606.ENSP00000397297', '9606.ENSP00000365458', '9606.ENSP00000306920', '9606.ENSP00000418994', '9606.ENSP00000254719', '9606.ENSP00000250113', '9606.ENSP00000377681', '9606.ENSP00000401371', '9606.ENSP00000355657', '9606.ENSP00000265113', '9606.ENSP00000340292', '9606.ENSP00000425561', '9606.ENSP00000254108', '9606.ENSP00000363822', '9606.ENSP00000264033', '9606.ENSP00000494750', '9606.ENSP00000231004', '9606.ENSP00000489189', '9606.ENSP00000384625', '9606.ENSP00000361405', '9606.ENSP00000354335', '9606.ENSP00000469455', '9606.ENSP00000324806', '9606.ENSP00000436679', '9606.ENSP00000264255', '9606.ENSP00000264498', '9606.ENSP00000343690', '9606.ENSP00000302814', '9606.ENSP00000369127', '9606.ENSP00000301727', '9606.ENSP00000265351', '9606.ENSP00000266682', '9606.ENSP00000360660', '9606.ENSP00000379287', '9606.ENSP00000267890', '9606.ENSP00000298596', '9606.ENSP00000381488', '9606.ENSP00000309457', '9606.ENSP00000282928', '9606.ENSP00000354346', '9606.ENSP00000310561', '9606.ENSP00000297261', '9606.ENSP00000370571', '9606.ENSP00000439937', '9606.ENSP00000481593', '9606.ENSP00000225916', '9606.ENSP00000265379', '9606.ENSP00000345997', '9606.ENSP00000265381', '9606.ENSP00000313829', '9606.ENSP00000435466', '9606.ENSP00000266594', '9606.ENSP00000254488', '9606.ENSP00000496959', '9606.ENSP00000497806', '9606.ENSP00000240185', '9606.ENSP00000415676', '9606.ENSP00000354111', '9606.ENSP00000220592', '9606.ENSP00000494538', '9606.ENSP00000480012', '9606.ENSP00000391269', '9606.ENSP00000277120', '9606.ENSP00000366070', '9606.ENSP00000269601', '9606.ENSP00000264276', '9606.ENSP00000402257', '9606.ENSP00000426503', '9606.ENSP00000424566', '9606.ENSP00000258962', '9606.ENSP00000320347', '9606.ENSP00000391381', '9606.ENSP00000264036', '9606.ENSP00000403343', '9606.ENSP00000288490', '9606.ENSP00000368007', '9606.ENSP00000291700', '9606.ENSP00000219476', '9606.ENSP00000492363', '9606.ENSP00000354360', '9606.ENSP00000417864', '9606.ENSP00000310585', '9606.ENSP00000358967', '9606.ENSP00000354125', '9606.ENSP00000265431', '9606.ENSP00000359890', '9606.ENSP00000263257', '9606.ENSP00000302967', '9606.ENSP00000343001', '9606.ENSP00000369689', '9606.ENSP00000252486', '9606.ENSP00000255631', '9606.ENSP00000356790', '9606.ENSP00000480050', '9606.ENSP00000470248', '9606.ENSP00000354497', '9606.ENSP00000278616', '9606.ENSP00000303709', '9606.ENSP00000265421', '9606.ENSP00000252482', '9606.ENSP00000264335', '9606.ENSP00000321455', '9606.ENSP00000323511', '9606.ENSP00000473623', '9606.ENSP00000312987', '9606.ENSP00000442920', '9606.ENSP00000215095', '9606.ENSP00000336712', '9606.ENSP00000378394', '9606.ENSP00000220420', '9606.ENSP00000299001', '9606.ENSP00000246914', '9606.ENSP00000331040', '9606.ENSP00000221996', '9606.ENSP00000450873', '9606.ENSP00000263038', '9606.ENSP00000265459', '9606.ENSP00000342056', '9606.ENSP00000371985', '9606.ENSP00000400142', '9606.ENSP00000263160', '9606.ENSP00000254325', '9606.ENSP00000403888', '9606.ENSP00000254322', '9606.ENSP00000379350', '9606.ENSP00000414303', '9606.ENSP00000359506', '9606.ENSP00000422185', '9606.ENSP00000360609', '9606.ENSP00000268712', '9606.ENSP00000358518', '9606.ENSP00000462745', '9606.ENSP00000263025', '9606.ENSP00000493382', '9606.ENSP00000405965', '9606.ENSP00000368332', '9606.ENSP00000346534', '9606.ENSP00000345575', '9606.ENSP00000309477', '9606.ENSP00000290649', '9606.ENSP00000361930', '9606.ENSP00000495557', '9606.ENSP00000345571', '9606.ENSP00000309591', '9606.ENSP00000302961', '9606.ENSP00000376077', '9606.ENSP00000355370', '9606.ENSP00000376197', '9606.ENSP00000438886', '9606.ENSP00000359978', '9606.ENSP00000358886', '9606.ENSP00000317333', '9606.ENSP00000374552', '9606.ENSP00000261837', '9606.ENSP00000427900', '9606.ENSP00000435637', '9606.ENSP00000431162', '9606.ENSP00000306330', '9606.ENSP00000362578', '9606.ENSP00000385675', '9606.ENSP00000332706', '9606.ENSP00000348056', '9606.ENSP00000365601', '9606.ENSP00000278379', '9606.ENSP00000370083', '9606.ENSP00000276079', '9606.ENSP00000453170', '9606.ENSP00000245255', '9606.ENSP00000305480', '9606.ENSP00000364639', '9606.ENSP00000265081', '9606.ENSP00000353767', '9606.ENSP00000353646', '9606.ENSP00000269305', '9606.ENSP00000316357', '9606.ENSP00000398632', '9606.ENSP00000279488', '9606.ENSP00000481848', '9606.ENSP00000258302', '9606.ENSP00000354859', '9606.ENSP00000314173', '9606.ENSP00000377936', '9606.ENSP00000499387', '9606.ENSP00000360266', '9606.ENSP00000362205', '9606.ENSP00000265195', '9606.ENSP00000384474', '9606.ENSP00000349156', '9606.ENSP00000258415', '9606.ENSP00000422435', '9606.ENSP00000370193', '9606.ENSP00000315299', '9606.ENSP00000370058', '9606.ENSP00000371267', '9606.ENSP00000248975', '9606.ENSP00000414856', '9606.ENSP00000321606', '9606.ENSP00000339004', '9606.ENSP00000350386', '9606.ENSP00000409279', '9606.ENSP00000353414', '9606.ENSP00000362680', '9606.ENSP00000261731', '9606.ENSP00000215832', '9606.ENSP00000349168', '9606.ENSP00000294702', '9606.ENSP00000385410', '9606.ENSP00000360493', '9606.ENSP00000477141', '9606.ENSP00000340467', '9606.ENSP00000295910', '9606.ENSP00000411355', '9606.ENSP00000381057', '9606.ENSP00000421339', '9606.ENSP00000308610', '9606.ENSP00000225504', '9606.ENSP00000261601', '9606.ENSP00000371133', '9606.ENSP00000321835', '9606.ENSP00000455698', '9606.ENSP00000479667', '9606.ENSP00000419081', '9606.ENSP00000256261', '9606.ENSP00000306561', '9606.ENSP00000295900', '9606.ENSP00000349298', '9606.ENSP00000362300', '9606.ENSP00000254079', '9606.ENSP00000381185', '9606.ENSP00000219197', '9606.ENSP00000490107', '9606.ENSP00000417901', '9606.ENSP00000359019', '9606.ENSP00000380070', '9606.ENSP00000458537', '9606.ENSP00000288135', '9606.ENSP00000457205', '9606.ENSP00000393379', '9606.ENSP00000478249', '9606.ENSP00000318585', '9606.ENSP00000305288', '9606.ENSP00000259711', '9606.ENSP00000265164', '9606.ENSP00000343515', '9606.ENSP00000340125', '9606.ENSP00000471851', '9606.ENSP00000360231', '9606.ENSP00000245451', '9606.ENSP00000202625', '9606.ENSP00000306138', '9606.ENSP00000248600']}
2024-06-20 16:50:05,479 [DEBUG] py4...: ǀReturning 'get_table_columns':                         name
129026  9606.ENSP00000350170
129029  9606.ENSP00000376921
129032  9606.ENSP00000373413
129035  9606.ENSP00000246548
129038  9606.ENSP00000355741
...                      ...
129011  9606.ENSP00000360231
129014  9606.ENSP00000245451
129017  9606.ENSP00000202625
129020  9606.ENSP00000306138
129023  9606.ENSP00000248600

[780 rows x 1 columns]
2024-06-20 16:50:05,540 [DEBUG] py4...: ǀCalling get_table_column_names('node', 'default', 126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,540 [DEBUG] py4...: ǀǀCalling get_network_suid(126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,540 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,540 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:05,545 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:05,546 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:05,546 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 126975
2024-06-20 16:50:05,547 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,547 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns)
2024-06-20 16:50:05,555 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false}]
2024-06-20 16:50:05,556 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:50:05,556 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', '@id', 'compartment::cytoskeleton', 'compartment::cytosol', 'compartment::endoplasmic reticulum', 'compartment::endosome', 'compartment::extracellular', 'compartment::golgi apparatus', 'compartment::lysosome', 'compartment::mitochondrion', 'compartment::nucleus', 'compartment::peroxisome', 'compartment::plasma membrane', 'display name', 'kegg_db', 'label', 'link', 'name.copy', 'query term', 'stringdb::STRING style', 'stringdb::canonical name', 'stringdb::database identifier', 'stringdb::description', 'stringdb::enhancedLabel Passthrough', 'stringdb::full name', 'stringdb::imageurl', 'stringdb::namespace', 'stringdb::node type', 'stringdb::sequence', 'stringdb::species', 'stringdb::structures', 'target::development level', 'target::family', 'tissue::adrenal gland', 'tissue::blood', 'tissue::bone', 'tissue::bone marrow', 'tissue::eye', 'tissue::gall bladder', 'tissue::heart', 'tissue::intestine', 'tissue::kidney', 'tissue::liver', 'tissue::lung', 'tissue::muscle', 'tissue::nervous system', 'tissue::pancreas', 'tissue::saliva', 'tissue::skin', 'tissue::spleen', 'tissue::stomach', 'tissue::thyroid gland', 'tissue::urine', 'type', 'uniprot', 'string_db', 'stringdb::disease score', 'Border Width', 'ChEBI', 'Color', 'Ensembl', 'GraphID', 'Label Font Size', 'Node Size', 'XrefDatasource', 'XrefId', 'wiki_db']
2024-06-20 16:50:05,558 [DEBUG] py4...: ǀCalling cyrest_put('networks/126975/tables/defaultnode', body={'key': 'name', 'dataKey': 'name', 'data': [{'name': '9606.ENSP00000350170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376921', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000373413', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246548', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355741', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355865', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359489', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356953', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354416', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355747', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419260', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316032', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361433', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320650', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000311816', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246672', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000447537', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259708', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000222584', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353331', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261712', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000247668', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000451828', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378914', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000282753', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000360280', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000319591', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378917', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000362334', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000216037', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000360671', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000332549', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378487', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000375892', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000307786', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261303', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000263967', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000293190', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000408695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000391723', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000290541', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000360270', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000281154', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000370744', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000370589', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000340330', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000351908', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000488361', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000310129', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000415822', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000361635', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000355155', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000353010', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000260402', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000378974', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000369996', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000352608', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000349205', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000365301', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000324560', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000222254', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000277746', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000431926', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000262139', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000371532', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000442793', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000355325', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000311121', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000281456', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000401445', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000366475', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000434241', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362144', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000414359', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000443631', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000440485', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000440185', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000357876', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261479', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000359531', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000338173', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000432568', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000428994', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000458663', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000329357', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000306253', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362649', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000271308', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000332772', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000355511', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000501150', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000467024', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000230354', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000221233', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000500582', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000392028', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000223321', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000371101', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288828', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000467262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310572', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000262904', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000244769', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000291568', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000396937', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000395535', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000484998', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000492795', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000446576', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000419395', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338185', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000425979', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345702', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000343535', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478877', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000352011', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262039', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000364813', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000352252', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349595', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000222574', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225174', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000221485', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270586', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000308533', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355231', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000222330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359910', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000382104', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481554', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000352257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000392423', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000375810', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428056', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000370125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000394560', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000354553', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263431', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000355645', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338990', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000482753', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262741', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000409007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391211', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000369145', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366563', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000260950', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000025008', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000343552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216455', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000340278', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296526', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000259727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262193', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000265171', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386541', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000386710', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269143', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000401633', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250003', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000436864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247178', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000435412', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221742', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000379181', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261523', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000381382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264639', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000356982', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000286548', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000410759', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360608', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000228644', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000483688', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000339867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481021', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000313377', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247219', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000351614', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354558', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000282356', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000237264', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000477999', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489829', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000397259', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259457', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000497112', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428845', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000497594', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000432412', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000272317', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345206', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000364118', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263269', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000258149', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000367762', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000387699', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481029', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000345064', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000157812', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000295777', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477455', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362299', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368966', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000295897', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000341243', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000313007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000044462', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000500386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363435', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000246186', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496129', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000257290', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309595', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261427', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309474', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000410769', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000234389', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000487785', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348442', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000261667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370808', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000335153', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219313', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000376322', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353072', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000351742', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215071', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000282486', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000440045', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000387593', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252934', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000053867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354681', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000323046', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358525', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303356', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333363', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357292', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262241', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480916', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369895', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000294435', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262367', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000429763', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000341826', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403397', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298910', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369531', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000272444', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406549', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347997', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000337103', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368314', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264606', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000479719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219548', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406286', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000350928', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000283228', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346671', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000013807', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371729', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284551', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263754', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000287820', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000458065', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386229', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357565', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000040584', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000334463', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295757', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357206', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363123', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263209', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362399', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355028', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358151', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377015', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295756', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000453858', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000292246', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428426', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340989', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000408617', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000383199', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345347', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358155', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000490614', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264657', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000441685', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347896', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391942', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254976', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000286628', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366249', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000285419', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000437256', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000464342', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489624', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000325863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260116', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000319060', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406293', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216144', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000337353', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000230321', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000398698', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000228872', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250495', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000352738', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378476', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430432', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358784', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364210', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000253408', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282146', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380432', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282020', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000482169', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000287713', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000483254', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364204', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358283', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378699', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419243', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000239231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295987', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378338', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000224140', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000181796', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000484060', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323588', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000390941', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264689', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260665', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000283195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000351777', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349722', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354923', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000437125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374354', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346694', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498362', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216254', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380903', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000276654', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359095', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357583', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477437', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000249396', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000408526', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310036', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478887', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000463653', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354929', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377372', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000326366', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000438574', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258106', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333277', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362014', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000334002', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418447', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240100', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252804', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000495360', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000227507', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000300213', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306894', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269228', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216127', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379915', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348645', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399403', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406209', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391803', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000233813', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000444433', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000475626', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489407', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295589', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000454229', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000500990', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499582', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000293288', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362131', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000311032', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359085', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405388', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296271', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000352516', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316842', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000180166', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000332194', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284981', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221930', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000212015', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477715', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270349', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368881', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000388638', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000285667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386458', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000454852', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362485', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368884', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270225', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365514', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240316', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000327687', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303540', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418572', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418960', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419782', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000324173', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418721', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000273320', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225577', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000415579', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376637', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359804', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000413035', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000383042', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221801', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399851', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302216', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376753', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364270', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000315137', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366452', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000256079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349748', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288943', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385216', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216218', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000304331', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361027', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252996', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365861', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302100', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305422', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254810', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386786', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000304643', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361021', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346483', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307604', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000226382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347184', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298556', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000268058', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399376', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000244061', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338512', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000291295', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405674', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000223129', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323148', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000318635', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000237014', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368984', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000397563', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284240', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320821', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498653', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216714', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499501', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000476119', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254722', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430000', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340820', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430241', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000327513', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000329403', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380602', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358089', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000301587', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296755', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365227', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247225', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338629', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262958', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000339835', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282499', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000374049', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000078429', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000379616', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489262', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000305702', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376352', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000471191', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000314407', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000261367', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365807', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000405327', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368970', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000329918', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261366', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365576', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216200', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000497217', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000397297', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365458', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306920', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418994', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250113', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377681', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000401371', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355657', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265113', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340292', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000425561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363822', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264033', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000494750', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000231004', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489189', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000384625', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361405', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354335', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000469455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000324806', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000436679', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264498', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343690', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302814', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369127', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000301727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265351', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000266682', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360660', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379287', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000267890', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298596', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309457', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282928', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354346', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000297261', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370571', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000439937', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'wiki;string'}, {'name': '9606.ENSP00000481593', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225916', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345997', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265381', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000313829', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000435466', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000266594', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496959', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000497806', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000415676', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354111', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000220592', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000494538', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480012', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391269', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000277120', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366070', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264276', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000402257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000426503', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000424566', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258962', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320347', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391381', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264036', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403343', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288490', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000291700', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219476', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000492363', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354360', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000417864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310585', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358967', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265431', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359890', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302967', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343001', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369689', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252486', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000255631', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356790', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480050', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000470248', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354497', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000278616', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303709', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265421', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252482', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264335', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323511', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000473623', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000312987', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000442920', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215095', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000336712', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378394', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000220420', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000299001', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246914', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000331040', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221996', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000450873', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263038', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265459', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000342056', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371985', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000400142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263160', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254325', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403888', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254322', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379350', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000414303', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359506', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000422185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360609', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000268712', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358518', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000462745', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263025', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000493382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405965', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368332', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346534', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345575', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309477', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000290649', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361930', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000495557', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345571', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309591', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302961', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376077', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355370', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376197', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000438886', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359978', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358886', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000317333', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261837', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000427900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000435637', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000431162', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362578', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385675', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000332706', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348056', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000278379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370083', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000276079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000453170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000245255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305480', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364639', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265081', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353767', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353646', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269305', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316357', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000398632', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000279488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481848', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258302', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354859', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000314173', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377936', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499387', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360266', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000384474', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349156', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258415', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000422435', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370193', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000315299', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370058', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371267', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000248975', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000414856', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321606', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000339004', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000350386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000409279', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353414', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'wiki;string'}, {'name': '9606.ENSP00000362680', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261731', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215832', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349168', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000294702', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385410', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360493', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477141', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340467', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295910', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000411355', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381057', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000421339', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000308610', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225504', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371133', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321835', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000455698', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000479667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419081', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000256261', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349298', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362300', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219197', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000490107', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000417901', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359019', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380070', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000458537', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288135', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000457205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000393379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478249', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000318585', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305288', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259711', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265164', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343515', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000471851', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000245451', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000202625', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306138', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000248600', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}]}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,559 [DEBUG] py4...: ǀHTTP PUT(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode), json: {'key': 'name', 'dataKey': 'name', 'data': [{'name': '9606.ENSP00000350170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376921', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000373413', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246548', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355741', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355865', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359489', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356953', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354416', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355747', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419260', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316032', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361433', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320650', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000311816', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246672', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000447537', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259708', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000222584', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353331', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261712', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000247668', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000451828', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378914', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000282753', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000360280', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000319591', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378917', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000362334', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000216037', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000360671', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000332549', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378487', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000375892', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000307786', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261303', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000263967', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000293190', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000408695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000391723', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000290541', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000360270', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000281154', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000370744', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000370589', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000340330', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000351908', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000488361', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000310129', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000415822', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000361635', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000355155', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000353010', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000260402', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000378974', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000369996', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000352608', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000349205', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000365301', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000324560', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000222254', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000277746', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000431926', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000262139', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000371532', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000442793', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000355325', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000311121', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000281456', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000401445', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000366475', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000434241', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362144', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000414359', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000443631', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000440485', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000440185', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000357876', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261479', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000359531', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000338173', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000432568', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000428994', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000458663', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000329357', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000306253', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362649', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000271308', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000332772', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000355511', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000501150', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000467024', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000230354', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000221233', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000500582', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000392028', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000223321', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000371101', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288828', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000467262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310572', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000262904', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000244769', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000291568', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000396937', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000395535', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000484998', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000492795', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000446576', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000419395', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338185', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000425979', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345702', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000343535', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478877', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000352011', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262039', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000364813', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000352252', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349595', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000222574', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225174', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000221485', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270586', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000308533', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355231', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000222330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359910', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000382104', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481554', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000352257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000392423', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000375810', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428056', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000370125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000394560', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000354553', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263431', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000355645', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338990', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000482753', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262741', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000409007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391211', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000369145', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366563', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000260950', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000025008', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000343552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216455', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000340278', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296526', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000259727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262193', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000265171', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386541', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000386710', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269143', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000401633', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250003', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000436864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247178', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000435412', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221742', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000379181', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261523', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000381382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264639', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000356982', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000286548', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000410759', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360608', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000228644', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000483688', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000339867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481021', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000313377', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247219', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000351614', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354558', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000282356', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000237264', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000477999', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489829', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000397259', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259457', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000497112', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428845', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000497594', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000432412', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000272317', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345206', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000364118', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263269', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000258149', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000367762', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000387699', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481029', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000345064', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000157812', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000295777', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477455', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362299', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368966', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000295897', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000341243', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000313007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000044462', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000500386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363435', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000246186', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496129', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000257290', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309595', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261427', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309474', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000410769', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000234389', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000487785', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348442', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000261667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370808', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000335153', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219313', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000376322', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353072', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000351742', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215071', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000282486', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000440045', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000387593', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252934', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000053867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354681', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000323046', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358525', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303356', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333363', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357292', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262241', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480916', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369895', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000294435', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262367', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000429763', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000341826', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403397', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298910', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369531', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000272444', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406549', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347997', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000337103', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368314', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264606', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000479719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219548', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406286', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000350928', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000283228', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346671', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000013807', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371729', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284551', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263754', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000287820', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000458065', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386229', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357565', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000040584', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000334463', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295757', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357206', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363123', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263209', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362399', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355028', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358151', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377015', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295756', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000453858', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000292246', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428426', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340989', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000408617', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000383199', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345347', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358155', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000490614', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264657', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000441685', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347896', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391942', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254976', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000286628', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366249', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000285419', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000437256', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000464342', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489624', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000325863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260116', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000319060', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406293', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216144', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000337353', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000230321', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000398698', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000228872', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250495', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000352738', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378476', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430432', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358784', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364210', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000253408', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282146', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380432', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282020', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000482169', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000287713', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000483254', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364204', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358283', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378699', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419243', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000239231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295987', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378338', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000224140', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000181796', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000484060', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323588', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000390941', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264689', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260665', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000283195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000351777', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349722', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354923', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000437125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374354', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346694', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498362', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216254', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380903', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000276654', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359095', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357583', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477437', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000249396', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000408526', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310036', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478887', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000463653', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354929', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377372', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000326366', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000438574', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258106', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333277', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362014', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000334002', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418447', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240100', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252804', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000495360', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000227507', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000300213', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306894', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269228', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216127', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379915', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348645', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399403', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406209', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391803', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000233813', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000444433', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000475626', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489407', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295589', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000454229', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000500990', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499582', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000293288', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362131', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000311032', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359085', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405388', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296271', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000352516', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316842', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000180166', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000332194', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284981', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221930', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000212015', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477715', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270349', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368881', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000388638', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000285667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386458', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000454852', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362485', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368884', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270225', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365514', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240316', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000327687', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303540', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418572', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418960', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419782', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000324173', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418721', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000273320', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225577', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000415579', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376637', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359804', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000413035', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000383042', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221801', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399851', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302216', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376753', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364270', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000315137', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366452', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000256079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349748', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288943', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385216', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216218', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000304331', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361027', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252996', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365861', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302100', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305422', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254810', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386786', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000304643', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361021', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346483', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307604', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000226382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347184', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298556', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000268058', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399376', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000244061', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338512', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000291295', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405674', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000223129', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323148', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000318635', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000237014', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368984', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000397563', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284240', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320821', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498653', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216714', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499501', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000476119', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254722', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430000', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340820', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430241', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000327513', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000329403', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380602', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358089', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000301587', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296755', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365227', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247225', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338629', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262958', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000339835', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282499', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000374049', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000078429', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000379616', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489262', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000305702', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376352', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000471191', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000314407', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000261367', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365807', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000405327', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368970', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000329918', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261366', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365576', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216200', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000497217', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000397297', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365458', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306920', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418994', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250113', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377681', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000401371', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355657', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265113', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340292', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000425561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363822', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264033', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000494750', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000231004', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489189', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000384625', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361405', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354335', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000469455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000324806', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000436679', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264498', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343690', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302814', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369127', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000301727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265351', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000266682', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360660', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379287', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000267890', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298596', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309457', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282928', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354346', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000297261', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370571', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000439937', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'wiki;string'}, {'name': '9606.ENSP00000481593', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225916', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345997', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265381', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000313829', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000435466', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000266594', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496959', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000497806', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000415676', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354111', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000220592', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000494538', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480012', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391269', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000277120', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366070', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264276', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000402257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000426503', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000424566', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258962', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320347', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391381', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264036', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403343', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288490', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000291700', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219476', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000492363', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354360', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000417864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310585', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358967', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265431', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359890', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302967', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343001', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369689', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252486', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000255631', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356790', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480050', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000470248', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354497', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000278616', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303709', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265421', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252482', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264335', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323511', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000473623', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000312987', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000442920', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215095', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000336712', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378394', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000220420', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000299001', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246914', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000331040', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221996', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000450873', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263038', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265459', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000342056', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371985', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000400142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263160', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254325', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403888', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254322', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379350', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000414303', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359506', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000422185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360609', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000268712', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358518', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000462745', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263025', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000493382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405965', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368332', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346534', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345575', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309477', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000290649', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361930', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000495557', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345571', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309591', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302961', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376077', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355370', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376197', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000438886', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359978', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358886', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000317333', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261837', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000427900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000435637', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000431162', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362578', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385675', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000332706', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348056', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000278379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370083', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000276079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000453170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000245255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305480', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364639', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265081', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353767', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353646', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269305', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316357', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000398632', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000279488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481848', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258302', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354859', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000314173', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377936', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499387', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360266', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000384474', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349156', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258415', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000422435', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370193', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000315299', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370058', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371267', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000248975', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000414856', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321606', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000339004', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000350386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000409279', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353414', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'wiki;string'}, {'name': '9606.ENSP00000362680', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261731', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215832', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349168', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000294702', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385410', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360493', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477141', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340467', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295910', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000411355', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381057', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000421339', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000308610', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225504', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371133', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321835', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000455698', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000479667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419081', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000256261', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349298', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362300', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219197', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000490107', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000417901', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359019', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380070', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000458537', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288135', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000457205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000393379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478249', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000318585', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305288', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259711', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265164', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343515', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000471851', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000245451', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000202625', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306138', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000248600', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}]}
2024-06-20 16:50:05,698 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:50:05,699 [DEBUG] py4...: ǀReturning 'cyrest_put': ''
2024-06-20 16:50:05,699 [DEBUG] py4...: Returning 'load_table_data': 'Success: Data loaded in defaultnode table'
2024-06-20 16:50:05,700 [DEBUG] py4...: --------------------
2024-06-20 16:50:05,701 [DEBUG] py4...: Calling delete_table_column('row.names')
2024-06-20 16:50:05,701 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,701 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:05,701 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:50:05,710 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 126975
}
],
 "errors":[]
}
2024-06-20 16:50:05,710 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 126975}]
2024-06-20 16:50:05,711 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:05,711 [DEBUG] py4...: ǀCalling cyrest_delete('networks/126975/tables/defaultnode/columns/row.names', base_url='http://127.0.0.1:1234/v1', require_json=False)
2024-06-20 16:50:05,711 [DEBUG] py4...: ǀHTTP DELETE(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/row.names)
2024-06-20 16:50:05,718 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:50:05,719 [DEBUG] py4...: ǀReturning 'cyrest_delete': ''
2024-06-20 16:50:05,720 [DEBUG] py4...: Returning 'delete_table_column': ''
2024-06-20 16:50:05,720 [DEBUG] py4...: --------------------
2024-06-20 16:50:30,506 [DEBUG] py4...: Calling get_table_columns('node', columns=['name', 'kegg_db', 'wiki_db', 'string_db'], network=126975)
2024-06-20 16:50:30,507 [DEBUG] py4...: ǀCalling get_network_suid(126975, 'http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,508 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,508 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:30,519 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:30,520 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:30,520 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:30,522 [DEBUG] py4...: ǀCalling get_table_column_types('node', namespace='default', network=126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,522 [DEBUG] py4...: ǀǀCalling get_network_suid(126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,523 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,523 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:30,531 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:30,531 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:30,532 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 126975
2024-06-20 16:50:30,532 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,532 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns)
2024-06-20 16:50:30,539 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"database","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:50:30,540 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'database', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:50:30,540 [DEBUG] py4...: ǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', '@id': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'display name': 'String', 'kegg_db': 'Integer', 'label': 'String', 'link': 'String', 'name.copy': 'String', 'query term': 'String', 'stringdb::STRING style': 'String', 'stringdb::canonical name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'stringdb::full name': 'String', 'stringdb::imageurl': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'type': 'String', 'uniprot': 'String', 'string_db': 'Integer', 'stringdb::disease score': 'Double', 'Border Width': 'Double', 'ChEBI': 'String', 'Color': 'String', 'Ensembl': 'String', 'GraphID': 'String', 'Label Font Size': 'Double', 'Node Size': 'Double', 'XrefDatasource': 'String', 'XrefId': 'String', 'wiki_db': 'Integer', 'database': 'String'}
2024-06-20 16:50:30,541 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,541 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/SUID)
2024-06-20 16:50:30,546 [DEBUG] py4...: ǀOK[200], content: {"name":"SUID","values":[129026,129029,129032,129035,129038,129041,129044,129047,129050,129053,129056,129059,129062,129065,129068,129071,129074,129077,129080,129083,129282,127403,127406,127409,127412,127415,127418,127421,127424,127427,127430,127433,127436,127439,127442,127445,127448,127451,127454,127457,127460,127463,127466,127469,127472,127475,127478,127481,127484,127487,127490,127493,127496,127499,127502,127505,127508,127511,127514,127517,127520,127523,127526,127529,127532,127535,127538,127541,127544,127547,127550,127553,127556,127559,127562,127565,127568,127571,127574,127577,127580,127583,127586,127589,127592,127595,127598,129646,127601,129649,127604,129652,127607,129655,127610,129658,127613,129661,127616,129664,127619,129667,127622,129670,127625,129673,127628,129676,127631,129679,127634,129682,127637,129685,127640,129688,127643,129691,127646,129694,127649,129697,127652,129700,127655,129703,127658,129706,127661,129709,127664,129712,127667,129715,127670,129718,127673,129721,127676,129724,127679,129727,127682,129730,127685,129733,127688,129736,127691,129739,127694,129742,127697,129745,127700,129748,127703,129751,127706,129754,127709,129757,127712,129760,127715,129763,127718,129766,127721,129769,127724,129772,127727,129775,127730,129778,127733,129781,127736,129784,127739,129787,127742,129790,127745,129793,127748,129796,127751,129799,127754,129802,127757,129805,127760,129808,127763,129811,127766,129814,127769,129817,127772,129820,127775,129823,127778,129826,127781,129829,127784,129832,127787,129835,127790,129838,127793,129841,127796,129844,127799,129847,127802,129850,127805,129853,127808,129856,127811,129859,127814,129862,127817,129865,127820,129868,127823,129871,127826,129874,127829,129877,127832,129880,127835,129883,127838,129886,127841,129889,127844,129892,127847,129895,127850,129898,127853,129901,127856,129904,127859,129907,127862,129910,127865,129913,127868,129916,127871,129919,127874,129922,127877,129925,127880,129928,127883,129931,127886,129934,127889,129937,127892,129940,127895,129943,127898,129946,127901,129949,127904,129952,127907,129955,127910,129958,127913,129961,127916,129964,127919,129967,127922,129970,127925,129973,127928,129976,127931,129979,127934,129982,127937,129985,127940,129988,127943,129991,127946,129994,127949,129997,127952,130000,127955,130003,127958,130006,127961,130009,127964,130012,127967,130015,127970,130018,127973,130021,127976,130024,127979,130027,127982,130030,127985,130033,127988,130036,127991,130039,127994,130042,127997,130045,128000,130048,128003,130051,128006,130054,128009,130057,128012,130060,128015,130063,128018,130066,128021,130069,128024,130072,128027,130075,128030,130078,128033,130081,128036,130084,128039,130087,128042,130090,128045,130093,128048,130096,128051,130099,128054,130102,128057,130105,128060,130108,128063,130111,128066,130114,128069,130117,128072,130120,128075,130123,128078,130126,128081,130129,128084,130132,128087,130135,128090,130138,128093,130141,128096,130144,128099,130147,128102,130150,128105,130153,128108,130156,128111,130159,128114,130162,128117,130165,128120,130168,128123,130171,128126,130174,128129,130177,128132,130180,128135,130183,128138,130186,128141,130189,128144,130192,128147,130195,128150,130198,128153,130201,128156,130204,128159,130207,128162,130210,128165,130213,128168,130216,128171,130219,128174,130222,128177,130225,128180,130228,128183,130231,128186,130234,128189,130237,128192,130240,128195,130243,128198,130246,128201,130249,128204,130252,128207,130255,128210,130258,128213,130261,128216,130264,128219,130267,128222,130270,128225,130273,128228,130276,128231,130279,128234,130282,128237,130285,128240,130288,128243,130291,128246,130294,128249,130297,128252,128255,128258,128261,128264,128267,128270,128273,128276,128279,128282,128285,128288,128291,128294,128297,128300,128303,128306,128309,128312,128315,128318,128321,128324,128327,128330,128333,128336,128339,128342,128345,128348,128351,128354,128357,128360,128363,128366,128369,128372,128375,128378,128381,128384,128387,128390,128393,128396,128399,128402,128405,128408,128411,128414,128417,128420,128423,128426,128429,128432,128435,128438,128441,128444,128447,128450,128453,128456,128459,128462,128465,128468,128471,128474,128477,128480,128483,128486,128489,128492,128495,128498,128501,128504,128507,128510,128513,128516,128519,128522,128525,128528,128531,128534,128537,128540,128543,128546,128549,128552,128555,128558,128561,128564,128567,128570,128573,128576,128579,128582,128585,128588,128591,128594,128597,128600,128603,128606,128609,128612,128615,128618,128621,128624,128627,128630,128633,128636,128639,128642,128645,128648,128651,128654,128657,128660,128663,128666,128669,128672,128675,128678,128681,128684,128687,128690,128693,128696,128699,128702,128705,128708,128711,128714,128717,128720,128723,128726,128729,128732,128735,128738,128741,128744,128747,128750,128753,128756,128759,128762,128765,128768,128771,128774,128777,128780,128783,128786,128789,128792,128795,128798,128801,128804,128807,128810,128813,128816,128819,128822,128825,128828,128831,128834,128837,128840,128843,128846,128849,128852,128855,128858,128861,128864,128867,128870,128873,128876,128879,128882,128885,128888,128891,128894,128897,128900,128903,128906,128909,128912,128915,128918,128921,128924,128927,128930,128933,128936,128939,128942,128945,128948,128951,128954,128957,128960,128963,128966,128969,128972,128975,128978,128981,128984,128987,128990,128993,128996,128999,129002,129005,129008,129011,129014,129017,129020,129023]}
2024-06-20 16:50:30,547 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'SUID', 'values': [129026, 129029, 129032, 129035, 129038, 129041, 129044, 129047, 129050, 129053, 129056, 129059, 129062, 129065, 129068, 129071, 129074, 129077, 129080, 129083, 129282, 127403, 127406, 127409, 127412, 127415, 127418, 127421, 127424, 127427, 127430, 127433, 127436, 127439, 127442, 127445, 127448, 127451, 127454, 127457, 127460, 127463, 127466, 127469, 127472, 127475, 127478, 127481, 127484, 127487, 127490, 127493, 127496, 127499, 127502, 127505, 127508, 127511, 127514, 127517, 127520, 127523, 127526, 127529, 127532, 127535, 127538, 127541, 127544, 127547, 127550, 127553, 127556, 127559, 127562, 127565, 127568, 127571, 127574, 127577, 127580, 127583, 127586, 127589, 127592, 127595, 127598, 129646, 127601, 129649, 127604, 129652, 127607, 129655, 127610, 129658, 127613, 129661, 127616, 129664, 127619, 129667, 127622, 129670, 127625, 129673, 127628, 129676, 127631, 129679, 127634, 129682, 127637, 129685, 127640, 129688, 127643, 129691, 127646, 129694, 127649, 129697, 127652, 129700, 127655, 129703, 127658, 129706, 127661, 129709, 127664, 129712, 127667, 129715, 127670, 129718, 127673, 129721, 127676, 129724, 127679, 129727, 127682, 129730, 127685, 129733, 127688, 129736, 127691, 129739, 127694, 129742, 127697, 129745, 127700, 129748, 127703, 129751, 127706, 129754, 127709, 129757, 127712, 129760, 127715, 129763, 127718, 129766, 127721, 129769, 127724, 129772, 127727, 129775, 127730, 129778, 127733, 129781, 127736, 129784, 127739, 129787, 127742, 129790, 127745, 129793, 127748, 129796, 127751, 129799, 127754, 129802, 127757, 129805, 127760, 129808, 127763, 129811, 127766, 129814, 127769, 129817, 127772, 129820, 127775, 129823, 127778, 129826, 127781, 129829, 127784, 129832, 127787, 129835, 127790, 129838, 127793, 129841, 127796, 129844, 127799, 129847, 127802, 129850, 127805, 129853, 127808, 129856, 127811, 129859, 127814, 129862, 127817, 129865, 127820, 129868, 127823, 129871, 127826, 129874, 127829, 129877, 127832, 129880, 127835, 129883, 127838, 129886, 127841, 129889, 127844, 129892, 127847, 129895, 127850, 129898, 127853, 129901, 127856, 129904, 127859, 129907, 127862, 129910, 127865, 129913, 127868, 129916, 127871, 129919, 127874, 129922, 127877, 129925, 127880, 129928, 127883, 129931, 127886, 129934, 127889, 129937, 127892, 129940, 127895, 129943, 127898, 129946, 127901, 129949, 127904, 129952, 127907, 129955, 127910, 129958, 127913, 129961, 127916, 129964, 127919, 129967, 127922, 129970, 127925, 129973, 127928, 129976, 127931, 129979, 127934, 129982, 127937, 129985, 127940, 129988, 127943, 129991, 127946, 129994, 127949, 129997, 127952, 130000, 127955, 130003, 127958, 130006, 127961, 130009, 127964, 130012, 127967, 130015, 127970, 130018, 127973, 130021, 127976, 130024, 127979, 130027, 127982, 130030, 127985, 130033, 127988, 130036, 127991, 130039, 127994, 130042, 127997, 130045, 128000, 130048, 128003, 130051, 128006, 130054, 128009, 130057, 128012, 130060, 128015, 130063, 128018, 130066, 128021, 130069, 128024, 130072, 128027, 130075, 128030, 130078, 128033, 130081, 128036, 130084, 128039, 130087, 128042, 130090, 128045, 130093, 128048, 130096, 128051, 130099, 128054, 130102, 128057, 130105, 128060, 130108, 128063, 130111, 128066, 130114, 128069, 130117, 128072, 130120, 128075, 130123, 128078, 130126, 128081, 130129, 128084, 130132, 128087, 130135, 128090, 130138, 128093, 130141, 128096, 130144, 128099, 130147, 128102, 130150, 128105, 130153, 128108, 130156, 128111, 130159, 128114, 130162, 128117, 130165, 128120, 130168, 128123, 130171, 128126, 130174, 128129, 130177, 128132, 130180, 128135, 130183, 128138, 130186, 128141, 130189, 128144, 130192, 128147, 130195, 128150, 130198, 128153, 130201, 128156, 130204, 128159, 130207, 128162, 130210, 128165, 130213, 128168, 130216, 128171, 130219, 128174, 130222, 128177, 130225, 128180, 130228, 128183, 130231, 128186, 130234, 128189, 130237, 128192, 130240, 128195, 130243, 128198, 130246, 128201, 130249, 128204, 130252, 128207, 130255, 128210, 130258, 128213, 130261, 128216, 130264, 128219, 130267, 128222, 130270, 128225, 130273, 128228, 130276, 128231, 130279, 128234, 130282, 128237, 130285, 128240, 130288, 128243, 130291, 128246, 130294, 128249, 130297, 128252, 128255, 128258, 128261, 128264, 128267, 128270, 128273, 128276, 128279, 128282, 128285, 128288, 128291, 128294, 128297, 128300, 128303, 128306, 128309, 128312, 128315, 128318, 128321, 128324, 128327, 128330, 128333, 128336, 128339, 128342, 128345, 128348, 128351, 128354, 128357, 128360, 128363, 128366, 128369, 128372, 128375, 128378, 128381, 128384, 128387, 128390, 128393, 128396, 128399, 128402, 128405, 128408, 128411, 128414, 128417, 128420, 128423, 128426, 128429, 128432, 128435, 128438, 128441, 128444, 128447, 128450, 128453, 128456, 128459, 128462, 128465, 128468, 128471, 128474, 128477, 128480, 128483, 128486, 128489, 128492, 128495, 128498, 128501, 128504, 128507, 128510, 128513, 128516, 128519, 128522, 128525, 128528, 128531, 128534, 128537, 128540, 128543, 128546, 128549, 128552, 128555, 128558, 128561, 128564, 128567, 128570, 128573, 128576, 128579, 128582, 128585, 128588, 128591, 128594, 128597, 128600, 128603, 128606, 128609, 128612, 128615, 128618, 128621, 128624, 128627, 128630, 128633, 128636, 128639, 128642, 128645, 128648, 128651, 128654, 128657, 128660, 128663, 128666, 128669, 128672, 128675, 128678, 128681, 128684, 128687, 128690, 128693, 128696, 128699, 128702, 128705, 128708, 128711, 128714, 128717, 128720, 128723, 128726, 128729, 128732, 128735, 128738, 128741, 128744, 128747, 128750, 128753, 128756, 128759, 128762, 128765, 128768, 128771, 128774, 128777, 128780, 128783, 128786, 128789, 128792, 128795, 128798, 128801, 128804, 128807, 128810, 128813, 128816, 128819, 128822, 128825, 128828, 128831, 128834, 128837, 128840, 128843, 128846, 128849, 128852, 128855, 128858, 128861, 128864, 128867, 128870, 128873, 128876, 128879, 128882, 128885, 128888, 128891, 128894, 128897, 128900, 128903, 128906, 128909, 128912, 128915, 128918, 128921, 128924, 128927, 128930, 128933, 128936, 128939, 128942, 128945, 128948, 128951, 128954, 128957, 128960, 128963, 128966, 128969, 128972, 128975, 128978, 128981, 128984, 128987, 128990, 128993, 128996, 128999, 129002, 129005, 129008, 129011, 129014, 129017, 129020, 129023]}
2024-06-20 16:50:30,547 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,548 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/name)
2024-06-20 16:50:30,554 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["9606.ENSP00000350170","9606.ENSP00000376921","9606.ENSP00000373413","9606.ENSP00000246548","9606.ENSP00000355741","9606.ENSP00000355865","9606.ENSP00000359489","9606.ENSP00000356953","9606.ENSP00000354416","9606.ENSP00000355747","9606.ENSP00000419260","9606.ENSP00000316032","9606.ENSP00000361433","9606.ENSP00000320650","9606.ENSP00000311816","9606.ENSP00000246672","9606.ENSP00000447537","9606.ENSP00000259708","9606.ENSP00000222584","9606.ENSP00000353331","9606.ENSP00000360108","9606.ENSP00000261712","9606.ENSP00000247668","9606.ENSP00000451828","9606.ENSP00000378914","9606.ENSP00000282753","9606.ENSP00000360280","9606.ENSP00000319591","9606.ENSP00000378917","9606.ENSP00000362334","9606.ENSP00000216037","9606.ENSP00000360671","9606.ENSP00000332549","9606.ENSP00000378487","9606.ENSP00000375892","9606.ENSP00000307786","9606.ENSP00000261303","9606.ENSP00000263967","9606.ENSP00000293190","9606.ENSP00000408695","9606.ENSP00000391723","9606.ENSP00000290541","9606.ENSP00000360270","9606.ENSP00000281154","9606.ENSP00000370744","9606.ENSP00000370589","9606.ENSP00000340330","9606.ENSP00000351908","9606.ENSP00000488361","9606.ENSP00000310129","9606.ENSP00000415822","9606.ENSP00000361635","9606.ENSP00000355155","9606.ENSP00000353010","9606.ENSP00000260402","9606.ENSP00000378974","9606.ENSP00000369996","9606.ENSP00000352608","9606.ENSP00000349205","9606.ENSP00000365301","9606.ENSP00000324560","9606.ENSP00000222254","9606.ENSP00000277746","9606.ENSP00000431926","9606.ENSP00000262139","9606.ENSP00000371532","9606.ENSP00000442793","9606.ENSP00000355325","9606.ENSP00000311121","9606.ENSP00000281456","9606.ENSP00000401445","9606.ENSP00000366475","9606.ENSP00000434241","9606.ENSP00000362144","9606.ENSP00000414359","9606.ENSP00000443631","9606.ENSP00000440485","9606.ENSP00000440185","9606.ENSP00000357876","9606.ENSP00000261479","9606.ENSP00000359531","9606.ENSP00000338173","9606.ENSP00000432568","9606.ENSP00000428994","9606.ENSP00000458663","9606.ENSP00000329357","9606.ENSP00000306253","9606.ENSP00000362649","9606.ENSP00000271308","9606.ENSP00000332772","9606.ENSP00000496695","9606.ENSP00000355511","9606.ENSP00000501150","9606.ENSP00000467024","9606.ENSP00000230354","9606.ENSP00000221233","9606.ENSP00000500582","9606.ENSP00000392028","9606.ENSP00000223321","9606.ENSP00000371101","9606.ENSP00000288828","9606.ENSP00000467262","9606.ENSP00000310572","9606.ENSP00000262904","9606.ENSP00000244769","9606.ENSP00000291568","9606.ENSP00000396937","9606.ENSP00000395535","9606.ENSP00000484998","9606.ENSP00000492795","9606.ENSP00000446576","9606.ENSP00000419395","9606.ENSP00000338185","9606.ENSP00000425979","9606.ENSP00000345702","9606.ENSP00000343535","9606.ENSP00000478877","9606.ENSP00000352011","9606.ENSP00000262039","9606.ENSP00000364813","9606.ENSP00000418695","9606.ENSP00000352252","9606.ENSP00000349595","9606.ENSP00000222574","9606.ENSP00000225174","9606.ENSP00000221485","9606.ENSP00000270586","9606.ENSP00000308533","9606.ENSP00000355231","9606.ENSP00000222330","9606.ENSP00000359910","9606.ENSP00000382104","9606.ENSP00000481554","9606.ENSP00000352257","9606.ENSP00000392423","9606.ENSP00000375810","9606.ENSP00000428056","9606.ENSP00000370125","9606.ENSP00000394560","9606.ENSP00000354553","9606.ENSP00000263431","9606.ENSP00000355645","9606.ENSP00000338990","9606.ENSP00000482753","9606.ENSP00000262741","9606.ENSP00000409007","9606.ENSP00000391211","9606.ENSP00000369145","9606.ENSP00000366563","9606.ENSP00000260950","9606.ENSP00000025008","9606.ENSP00000343552","9606.ENSP00000216455","9606.ENSP00000340278","9606.ENSP00000296526","9606.ENSP00000259727","9606.ENSP00000262193","9606.ENSP00000265171","9606.ENSP00000386541","9606.ENSP00000386710","9606.ENSP00000269143","9606.ENSP00000401633","9606.ENSP00000250003","9606.ENSP00000436864","9606.ENSP00000247178","9606.ENSP00000435412","9606.ENSP00000221742","9606.ENSP00000379181","9606.ENSP00000261523","9606.ENSP00000381382","9606.ENSP00000264639","9606.ENSP00000356982","9606.ENSP00000286548","9606.ENSP00000410759","9606.ENSP00000360608","9606.ENSP00000228644","9606.ENSP00000483688","9606.ENSP00000339867","9606.ENSP00000481021","9606.ENSP00000313377","9606.ENSP00000247219","9606.ENSP00000351614","9606.ENSP00000354558","9606.ENSP00000282356","9606.ENSP00000237264","9606.ENSP00000477999","9606.ENSP00000489829","9606.ENSP00000397259","9606.ENSP00000259457","9606.ENSP00000497112","9606.ENSP00000428845","9606.ENSP00000497594","9606.ENSP00000432412","9606.ENSP00000272317","9606.ENSP00000345206","9606.ENSP00000364118","9606.ENSP00000263269","9606.ENSP00000258149","9606.ENSP00000367762","9606.ENSP00000387699","9606.ENSP00000481029","9606.ENSP00000345064","9606.ENSP00000157812","9606.ENSP00000295777","9606.ENSP00000477455","9606.ENSP00000362299","9606.ENSP00000368966","9606.ENSP00000295897","9606.ENSP00000341243","9606.ENSP00000313007","9606.ENSP00000044462","9606.ENSP00000500386","9606.ENSP00000363435","9606.ENSP00000246186","9606.ENSP00000496129","9606.ENSP00000257290","9606.ENSP00000309595","9606.ENSP00000261427","9606.ENSP00000309474","9606.ENSP00000410769","9606.ENSP00000234389","9606.ENSP00000487785","9606.ENSP00000348442","9606.ENSP00000261667","9606.ENSP00000370808","9606.ENSP00000335153","9606.ENSP00000219313","9606.ENSP00000376322","9606.ENSP00000353072","9606.ENSP00000351742","9606.ENSP00000215071","9606.ENSP00000282486","9606.ENSP00000440045","9606.ENSP00000387593","9606.ENSP00000252934","9606.ENSP00000053867","9606.ENSP00000354681","9606.ENSP00000323046","9606.ENSP00000358525","9606.ENSP00000303356","9606.ENSP00000333363","9606.ENSP00000357292","9606.ENSP00000262241","9606.ENSP00000480916","9606.ENSP00000369895","9606.ENSP00000294435","9606.ENSP00000262367","9606.ENSP00000345195","9606.ENSP00000429763","9606.ENSP00000341826","9606.ENSP00000403397","9606.ENSP00000298910","9606.ENSP00000369531","9606.ENSP00000272444","9606.ENSP00000406549","9606.ENSP00000270142","9606.ENSP00000347997","9606.ENSP00000337103","9606.ENSP00000368314","9606.ENSP00000264606","9606.ENSP00000284262","9606.ENSP00000479719","9606.ENSP00000219548","9606.ENSP00000406286","9606.ENSP00000350928","9606.ENSP00000283228","9606.ENSP00000346671","9606.ENSP00000385142","9606.ENSP00000013807","9606.ENSP00000302108","9606.ENSP00000371729","9606.ENSP00000284551","9606.ENSP00000356231","9606.ENSP00000263754","9606.ENSP00000359727","9606.ENSP00000287820","9606.ENSP00000458065","9606.ENSP00000386229","9606.ENSP00000357565","9606.ENSP00000040584","9606.ENSP00000334463","9606.ENSP00000295757","9606.ENSP00000357206","9606.ENSP00000363123","9606.ENSP00000263209","9606.ENSP00000362399","9606.ENSP00000355028","9606.ENSP00000358151","9606.ENSP00000377015","9606.ENSP00000295756","9606.ENSP00000453858","9606.ENSP00000292246","9606.ENSP00000428426","9606.ENSP00000340989","9606.ENSP00000408617","9606.ENSP00000383199","9606.ENSP00000345347","9606.ENSP00000358155","9606.ENSP00000263205","9606.ENSP00000490614","9606.ENSP00000264657","9606.ENSP00000441685","9606.ENSP00000347896","9606.ENSP00000391942","9606.ENSP00000254976","9606.ENSP00000286628","9606.ENSP00000366249","9606.ENSP00000285419","9606.ENSP00000437256","9606.ENSP00000464342","9606.ENSP00000366488","9606.ENSP00000489624","9606.ENSP00000325863","9606.ENSP00000260116","9606.ENSP00000319060","9606.ENSP00000406293","9606.ENSP00000216144","9606.ENSP00000337353","9606.ENSP00000230321","9606.ENSP00000398698","9606.ENSP00000359719","9606.ENSP00000228872","9606.ENSP00000250495","9606.ENSP00000352738","9606.ENSP00000378476","9606.ENSP00000430432","9606.ENSP00000358784","9606.ENSP00000364210","9606.ENSP00000253408","9606.ENSP00000282146","9606.ENSP00000380432","9606.ENSP00000282020","9606.ENSP00000482169","9606.ENSP00000287713","9606.ENSP00000483254","9606.ENSP00000364204","9606.ENSP00000333262","9606.ENSP00000358283","9606.ENSP00000378699","9606.ENSP00000419243","9606.ENSP00000239231","9606.ENSP00000295987","9606.ENSP00000378338","9606.ENSP00000224140","9606.ENSP00000181796","9606.ENSP00000484060","9606.ENSP00000323588","9606.ENSP00000390941","9606.ENSP00000264689","9606.ENSP00000260665","9606.ENSP00000283195","9606.ENSP00000351777","9606.ENSP00000349722","9606.ENSP00000354923","9606.ENSP00000437125","9606.ENSP00000374354","9606.ENSP00000346694","9606.ENSP00000498362","9606.ENSP00000216254","9606.ENSP00000380903","9606.ENSP00000276654","9606.ENSP00000359095","9606.ENSP00000357583","9606.ENSP00000477437","9606.ENSP00000249396","9606.ENSP00000408526","9606.ENSP00000310036","9606.ENSP00000478887","9606.ENSP00000463653","9606.ENSP00000354929","9606.ENSP00000377372","9606.ENSP00000326366","9606.ENSP00000438574","9606.ENSP00000258106","9606.ENSP00000333277","9606.ENSP00000362014","9606.ENSP00000334002","9606.ENSP00000418447","9606.ENSP00000240100","9606.ENSP00000252804","9606.ENSP00000495360","9606.ENSP00000227507","9606.ENSP00000264552","9606.ENSP00000307863","9606.ENSP00000300213","9606.ENSP00000306894","9606.ENSP00000369863","9606.ENSP00000269228","9606.ENSP00000216127","9606.ENSP00000379915","9606.ENSP00000348645","9606.ENSP00000399403","9606.ENSP00000406209","9606.ENSP00000391803","9606.ENSP00000233813","9606.ENSP00000444433","9606.ENSP00000475626","9606.ENSP00000489407","9606.ENSP00000295589","9606.ENSP00000454229","9606.ENSP00000500990","9606.ENSP00000499582","9606.ENSP00000293288","9606.ENSP00000362131","9606.ENSP00000311032","9606.ENSP00000359085","9606.ENSP00000264867","9606.ENSP00000405388","9606.ENSP00000296271","9606.ENSP00000352516","9606.ENSP00000316842","9606.ENSP00000498255","9606.ENSP00000180166","9606.ENSP00000282561","9606.ENSP00000332194","9606.ENSP00000284981","9606.ENSP00000221930","9606.ENSP00000212015","9606.ENSP00000477715","9606.ENSP00000270349","9606.ENSP00000368881","9606.ENSP00000388638","9606.ENSP00000285667","9606.ENSP00000386458","9606.ENSP00000454852","9606.ENSP00000362485","9606.ENSP00000368884","9606.ENSP00000270225","9606.ENSP00000260386","9606.ENSP00000365514","9606.ENSP00000240316","9606.ENSP00000327687","9606.ENSP00000303540","9606.ENSP00000418572","9606.ENSP00000418960","9606.ENSP00000419782","9606.ENSP00000307900","9606.ENSP00000324173","9606.ENSP00000418721","9606.ENSP00000347170","9606.ENSP00000273320","9606.ENSP00000225577","9606.ENSP00000415579","9606.ENSP00000376637","9606.ENSP00000359804","9606.ENSP00000374455","9606.ENSP00000413035","9606.ENSP00000383042","9606.ENSP00000221801","9606.ENSP00000399851","9606.ENSP00000302216","9606.ENSP00000376753","9606.ENSP00000364270","9606.ENSP00000315137","9606.ENSP00000366452","9606.ENSP00000256079","9606.ENSP00000349748","9606.ENSP00000216727","9606.ENSP00000288943","9606.ENSP00000385216","9606.ENSP00000216218","9606.ENSP00000304331","9606.ENSP00000366330","9606.ENSP00000361027","9606.ENSP00000252996","9606.ENSP00000365861","9606.ENSP00000302100","9606.ENSP00000305422","9606.ENSP00000254810","9606.ENSP00000386786","9606.ENSP00000304643","9606.ENSP00000361021","9606.ENSP00000346483","9606.ENSP00000307604","9606.ENSP00000226382","9606.ENSP00000347184","9606.ENSP00000298556","9606.ENSP00000268058","9606.ENSP00000399376","9606.ENSP00000244061","9606.ENSP00000338512","9606.ENSP00000291295","9606.ENSP00000405674","9606.ENSP00000223129","9606.ENSP00000323148","9606.ENSP00000318635","9606.ENSP00000237014","9606.ENSP00000353864","9606.ENSP00000368984","9606.ENSP00000397563","9606.ENSP00000284240","9606.ENSP00000320821","9606.ENSP00000498653","9606.ENSP00000216714","9606.ENSP00000499501","9606.ENSP00000476119","9606.ENSP00000254722","9606.ENSP00000430000","9606.ENSP00000340820","9606.ENSP00000430241","9606.ENSP00000327513","9606.ENSP00000329403","9606.ENSP00000380602","9606.ENSP00000358089","9606.ENSP00000301587","9606.ENSP00000296755","9606.ENSP00000365227","9606.ENSP00000247225","9606.ENSP00000338629","9606.ENSP00000262958","9606.ENSP00000339835","9606.ENSP00000282499","9606.ENSP00000374049","9606.ENSP00000078429","9606.ENSP00000379616","9606.ENSP00000489262","9606.ENSP00000305702","9606.ENSP00000376352","9606.ENSP00000471191","9606.ENSP00000314407","9606.ENSP00000261367","9606.ENSP00000365807","9606.ENSP00000405327","9606.ENSP00000368970","9606.ENSP00000329918","9606.ENSP00000261366","9606.ENSP00000365576","9606.ENSP00000216200","9606.ENSP00000497217","9606.ENSP00000397297","9606.ENSP00000365458","9606.ENSP00000306920","9606.ENSP00000418994","9606.ENSP00000254719","9606.ENSP00000250113","9606.ENSP00000377681","9606.ENSP00000401371","9606.ENSP00000355657","9606.ENSP00000265113","9606.ENSP00000340292","9606.ENSP00000425561","9606.ENSP00000254108","9606.ENSP00000363822","9606.ENSP00000264033","9606.ENSP00000494750","9606.ENSP00000231004","9606.ENSP00000489189","9606.ENSP00000384625","9606.ENSP00000361405","9606.ENSP00000354335","9606.ENSP00000469455","9606.ENSP00000324806","9606.ENSP00000436679","9606.ENSP00000264255","9606.ENSP00000264498","9606.ENSP00000343690","9606.ENSP00000302814","9606.ENSP00000369127","9606.ENSP00000301727","9606.ENSP00000265351","9606.ENSP00000266682","9606.ENSP00000360660","9606.ENSP00000379287","9606.ENSP00000267890","9606.ENSP00000298596","9606.ENSP00000381488","9606.ENSP00000309457","9606.ENSP00000282928","9606.ENSP00000354346","9606.ENSP00000310561","9606.ENSP00000297261","9606.ENSP00000370571","9606.ENSP00000439937","9606.ENSP00000481593","9606.ENSP00000225916","9606.ENSP00000265379","9606.ENSP00000345997","9606.ENSP00000265381","9606.ENSP00000313829","9606.ENSP00000435466","9606.ENSP00000266594","9606.ENSP00000254488","9606.ENSP00000496959","9606.ENSP00000497806","9606.ENSP00000240185","9606.ENSP00000415676","9606.ENSP00000354111","9606.ENSP00000220592","9606.ENSP00000494538","9606.ENSP00000480012","9606.ENSP00000391269","9606.ENSP00000277120","9606.ENSP00000366070","9606.ENSP00000269601","9606.ENSP00000264276","9606.ENSP00000402257","9606.ENSP00000426503","9606.ENSP00000424566","9606.ENSP00000258962","9606.ENSP00000320347","9606.ENSP00000391381","9606.ENSP00000264036","9606.ENSP00000403343","9606.ENSP00000288490","9606.ENSP00000368007","9606.ENSP00000291700","9606.ENSP00000219476","9606.ENSP00000492363","9606.ENSP00000354360","9606.ENSP00000417864","9606.ENSP00000310585","9606.ENSP00000358967","9606.ENSP00000354125","9606.ENSP00000265431","9606.ENSP00000359890","9606.ENSP00000263257","9606.ENSP00000302967","9606.ENSP00000343001","9606.ENSP00000369689","9606.ENSP00000252486","9606.ENSP00000255631","9606.ENSP00000356790","9606.ENSP00000480050","9606.ENSP00000470248","9606.ENSP00000354497","9606.ENSP00000278616","9606.ENSP00000303709","9606.ENSP00000265421","9606.ENSP00000252482","9606.ENSP00000264335","9606.ENSP00000321455","9606.ENSP00000323511","9606.ENSP00000473623","9606.ENSP00000312987","9606.ENSP00000442920","9606.ENSP00000215095","9606.ENSP00000336712","9606.ENSP00000378394","9606.ENSP00000220420","9606.ENSP00000299001","9606.ENSP00000246914","9606.ENSP00000331040","9606.ENSP00000221996","9606.ENSP00000450873","9606.ENSP00000263038","9606.ENSP00000265459","9606.ENSP00000342056","9606.ENSP00000371985","9606.ENSP00000400142","9606.ENSP00000263160","9606.ENSP00000254325","9606.ENSP00000403888","9606.ENSP00000254322","9606.ENSP00000379350","9606.ENSP00000414303","9606.ENSP00000359506","9606.ENSP00000422185","9606.ENSP00000360609","9606.ENSP00000268712","9606.ENSP00000358518","9606.ENSP00000462745","9606.ENSP00000263025","9606.ENSP00000493382","9606.ENSP00000405965","9606.ENSP00000368332","9606.ENSP00000346534","9606.ENSP00000345575","9606.ENSP00000309477","9606.ENSP00000290649","9606.ENSP00000361930","9606.ENSP00000495557","9606.ENSP00000345571","9606.ENSP00000309591","9606.ENSP00000302961","9606.ENSP00000376077","9606.ENSP00000355370","9606.ENSP00000376197","9606.ENSP00000438886","9606.ENSP00000359978","9606.ENSP00000358886","9606.ENSP00000317333","9606.ENSP00000374552","9606.ENSP00000261837","9606.ENSP00000427900","9606.ENSP00000435637","9606.ENSP00000431162","9606.ENSP00000306330","9606.ENSP00000362578","9606.ENSP00000385675","9606.ENSP00000332706","9606.ENSP00000348056","9606.ENSP00000365601","9606.ENSP00000278379","9606.ENSP00000370083","9606.ENSP00000276079","9606.ENSP00000453170","9606.ENSP00000245255","9606.ENSP00000305480","9606.ENSP00000364639","9606.ENSP00000265081","9606.ENSP00000353767","9606.ENSP00000353646","9606.ENSP00000269305","9606.ENSP00000316357","9606.ENSP00000398632","9606.ENSP00000279488","9606.ENSP00000481848","9606.ENSP00000258302","9606.ENSP00000354859","9606.ENSP00000314173","9606.ENSP00000377936","9606.ENSP00000499387","9606.ENSP00000360266","9606.ENSP00000362205","9606.ENSP00000265195","9606.ENSP00000384474","9606.ENSP00000349156","9606.ENSP00000258415","9606.ENSP00000422435","9606.ENSP00000370193","9606.ENSP00000315299","9606.ENSP00000370058","9606.ENSP00000371267","9606.ENSP00000248975","9606.ENSP00000414856","9606.ENSP00000321606","9606.ENSP00000339004","9606.ENSP00000350386","9606.ENSP00000409279","9606.ENSP00000353414","9606.ENSP00000362680","9606.ENSP00000261731","9606.ENSP00000215832","9606.ENSP00000349168","9606.ENSP00000294702","9606.ENSP00000385410","9606.ENSP00000360493","9606.ENSP00000477141","9606.ENSP00000340467","9606.ENSP00000295910","9606.ENSP00000411355","9606.ENSP00000381057","9606.ENSP00000421339","9606.ENSP00000308610","9606.ENSP00000225504","9606.ENSP00000261601","9606.ENSP00000371133","9606.ENSP00000321835","9606.ENSP00000455698","9606.ENSP00000479667","9606.ENSP00000419081","9606.ENSP00000256261","9606.ENSP00000306561","9606.ENSP00000295900","9606.ENSP00000349298","9606.ENSP00000362300","9606.ENSP00000254079","9606.ENSP00000381185","9606.ENSP00000219197","9606.ENSP00000490107","9606.ENSP00000417901","9606.ENSP00000359019","9606.ENSP00000380070","9606.ENSP00000458537","9606.ENSP00000288135","9606.ENSP00000457205","9606.ENSP00000393379","9606.ENSP00000478249","9606.ENSP00000318585","9606.ENSP00000305288","9606.ENSP00000259711","9606.ENSP00000265164","9606.ENSP00000343515","9606.ENSP00000340125","9606.ENSP00000471851","9606.ENSP00000360231","9606.ENSP00000245451","9606.ENSP00000202625","9606.ENSP00000306138","9606.ENSP00000248600"]}
2024-06-20 16:50:30,555 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000350170', '9606.ENSP00000376921', '9606.ENSP00000373413', '9606.ENSP00000246548', '9606.ENSP00000355741', '9606.ENSP00000355865', '9606.ENSP00000359489', '9606.ENSP00000356953', '9606.ENSP00000354416', '9606.ENSP00000355747', '9606.ENSP00000419260', '9606.ENSP00000316032', '9606.ENSP00000361433', '9606.ENSP00000320650', '9606.ENSP00000311816', '9606.ENSP00000246672', '9606.ENSP00000447537', '9606.ENSP00000259708', '9606.ENSP00000222584', '9606.ENSP00000353331', '9606.ENSP00000360108', '9606.ENSP00000261712', '9606.ENSP00000247668', '9606.ENSP00000451828', '9606.ENSP00000378914', '9606.ENSP00000282753', '9606.ENSP00000360280', '9606.ENSP00000319591', '9606.ENSP00000378917', '9606.ENSP00000362334', '9606.ENSP00000216037', '9606.ENSP00000360671', '9606.ENSP00000332549', '9606.ENSP00000378487', '9606.ENSP00000375892', '9606.ENSP00000307786', '9606.ENSP00000261303', '9606.ENSP00000263967', '9606.ENSP00000293190', '9606.ENSP00000408695', '9606.ENSP00000391723', '9606.ENSP00000290541', '9606.ENSP00000360270', '9606.ENSP00000281154', '9606.ENSP00000370744', '9606.ENSP00000370589', '9606.ENSP00000340330', '9606.ENSP00000351908', '9606.ENSP00000488361', '9606.ENSP00000310129', '9606.ENSP00000415822', '9606.ENSP00000361635', '9606.ENSP00000355155', '9606.ENSP00000353010', '9606.ENSP00000260402', '9606.ENSP00000378974', '9606.ENSP00000369996', '9606.ENSP00000352608', '9606.ENSP00000349205', '9606.ENSP00000365301', '9606.ENSP00000324560', '9606.ENSP00000222254', '9606.ENSP00000277746', '9606.ENSP00000431926', '9606.ENSP00000262139', '9606.ENSP00000371532', '9606.ENSP00000442793', '9606.ENSP00000355325', '9606.ENSP00000311121', '9606.ENSP00000281456', '9606.ENSP00000401445', '9606.ENSP00000366475', '9606.ENSP00000434241', '9606.ENSP00000362144', '9606.ENSP00000414359', '9606.ENSP00000443631', '9606.ENSP00000440485', '9606.ENSP00000440185', '9606.ENSP00000357876', '9606.ENSP00000261479', '9606.ENSP00000359531', '9606.ENSP00000338173', '9606.ENSP00000432568', '9606.ENSP00000428994', '9606.ENSP00000458663', '9606.ENSP00000329357', '9606.ENSP00000306253', '9606.ENSP00000362649', '9606.ENSP00000271308', '9606.ENSP00000332772', '9606.ENSP00000496695', '9606.ENSP00000355511', '9606.ENSP00000501150', '9606.ENSP00000467024', '9606.ENSP00000230354', '9606.ENSP00000221233', '9606.ENSP00000500582', '9606.ENSP00000392028', '9606.ENSP00000223321', '9606.ENSP00000371101', '9606.ENSP00000288828', '9606.ENSP00000467262', '9606.ENSP00000310572', '9606.ENSP00000262904', '9606.ENSP00000244769', '9606.ENSP00000291568', '9606.ENSP00000396937', '9606.ENSP00000395535', '9606.ENSP00000484998', '9606.ENSP00000492795', '9606.ENSP00000446576', '9606.ENSP00000419395', '9606.ENSP00000338185', '9606.ENSP00000425979', '9606.ENSP00000345702', '9606.ENSP00000343535', '9606.ENSP00000478877', '9606.ENSP00000352011', '9606.ENSP00000262039', '9606.ENSP00000364813', '9606.ENSP00000418695', '9606.ENSP00000352252', '9606.ENSP00000349595', '9606.ENSP00000222574', '9606.ENSP00000225174', '9606.ENSP00000221485', '9606.ENSP00000270586', '9606.ENSP00000308533', '9606.ENSP00000355231', '9606.ENSP00000222330', '9606.ENSP00000359910', '9606.ENSP00000382104', '9606.ENSP00000481554', '9606.ENSP00000352257', '9606.ENSP00000392423', '9606.ENSP00000375810', '9606.ENSP00000428056', '9606.ENSP00000370125', '9606.ENSP00000394560', '9606.ENSP00000354553', '9606.ENSP00000263431', '9606.ENSP00000355645', '9606.ENSP00000338990', '9606.ENSP00000482753', '9606.ENSP00000262741', '9606.ENSP00000409007', '9606.ENSP00000391211', '9606.ENSP00000369145', '9606.ENSP00000366563', '9606.ENSP00000260950', '9606.ENSP00000025008', '9606.ENSP00000343552', '9606.ENSP00000216455', '9606.ENSP00000340278', '9606.ENSP00000296526', '9606.ENSP00000259727', '9606.ENSP00000262193', '9606.ENSP00000265171', '9606.ENSP00000386541', '9606.ENSP00000386710', '9606.ENSP00000269143', '9606.ENSP00000401633', '9606.ENSP00000250003', '9606.ENSP00000436864', '9606.ENSP00000247178', '9606.ENSP00000435412', '9606.ENSP00000221742', '9606.ENSP00000379181', '9606.ENSP00000261523', '9606.ENSP00000381382', '9606.ENSP00000264639', '9606.ENSP00000356982', '9606.ENSP00000286548', '9606.ENSP00000410759', '9606.ENSP00000360608', '9606.ENSP00000228644', '9606.ENSP00000483688', '9606.ENSP00000339867', '9606.ENSP00000481021', '9606.ENSP00000313377', '9606.ENSP00000247219', '9606.ENSP00000351614', '9606.ENSP00000354558', '9606.ENSP00000282356', '9606.ENSP00000237264', '9606.ENSP00000477999', '9606.ENSP00000489829', '9606.ENSP00000397259', '9606.ENSP00000259457', '9606.ENSP00000497112', '9606.ENSP00000428845', '9606.ENSP00000497594', '9606.ENSP00000432412', '9606.ENSP00000272317', '9606.ENSP00000345206', '9606.ENSP00000364118', '9606.ENSP00000263269', '9606.ENSP00000258149', '9606.ENSP00000367762', '9606.ENSP00000387699', '9606.ENSP00000481029', '9606.ENSP00000345064', '9606.ENSP00000157812', '9606.ENSP00000295777', '9606.ENSP00000477455', '9606.ENSP00000362299', '9606.ENSP00000368966', '9606.ENSP00000295897', '9606.ENSP00000341243', '9606.ENSP00000313007', '9606.ENSP00000044462', '9606.ENSP00000500386', '9606.ENSP00000363435', '9606.ENSP00000246186', '9606.ENSP00000496129', '9606.ENSP00000257290', '9606.ENSP00000309595', '9606.ENSP00000261427', '9606.ENSP00000309474', '9606.ENSP00000410769', '9606.ENSP00000234389', '9606.ENSP00000487785', '9606.ENSP00000348442', '9606.ENSP00000261667', '9606.ENSP00000370808', '9606.ENSP00000335153', '9606.ENSP00000219313', '9606.ENSP00000376322', '9606.ENSP00000353072', '9606.ENSP00000351742', '9606.ENSP00000215071', '9606.ENSP00000282486', '9606.ENSP00000440045', '9606.ENSP00000387593', '9606.ENSP00000252934', '9606.ENSP00000053867', '9606.ENSP00000354681', '9606.ENSP00000323046', '9606.ENSP00000358525', '9606.ENSP00000303356', '9606.ENSP00000333363', '9606.ENSP00000357292', '9606.ENSP00000262241', '9606.ENSP00000480916', '9606.ENSP00000369895', '9606.ENSP00000294435', '9606.ENSP00000262367', '9606.ENSP00000345195', '9606.ENSP00000429763', '9606.ENSP00000341826', '9606.ENSP00000403397', '9606.ENSP00000298910', '9606.ENSP00000369531', '9606.ENSP00000272444', '9606.ENSP00000406549', '9606.ENSP00000270142', '9606.ENSP00000347997', '9606.ENSP00000337103', '9606.ENSP00000368314', '9606.ENSP00000264606', '9606.ENSP00000284262', '9606.ENSP00000479719', '9606.ENSP00000219548', '9606.ENSP00000406286', '9606.ENSP00000350928', '9606.ENSP00000283228', '9606.ENSP00000346671', '9606.ENSP00000385142', '9606.ENSP00000013807', '9606.ENSP00000302108', '9606.ENSP00000371729', '9606.ENSP00000284551', '9606.ENSP00000356231', '9606.ENSP00000263754', '9606.ENSP00000359727', '9606.ENSP00000287820', '9606.ENSP00000458065', '9606.ENSP00000386229', '9606.ENSP00000357565', '9606.ENSP00000040584', '9606.ENSP00000334463', '9606.ENSP00000295757', '9606.ENSP00000357206', '9606.ENSP00000363123', '9606.ENSP00000263209', '9606.ENSP00000362399', '9606.ENSP00000355028', '9606.ENSP00000358151', '9606.ENSP00000377015', '9606.ENSP00000295756', '9606.ENSP00000453858', '9606.ENSP00000292246', '9606.ENSP00000428426', '9606.ENSP00000340989', '9606.ENSP00000408617', '9606.ENSP00000383199', '9606.ENSP00000345347', '9606.ENSP00000358155', '9606.ENSP00000263205', '9606.ENSP00000490614', '9606.ENSP00000264657', '9606.ENSP00000441685', '9606.ENSP00000347896', '9606.ENSP00000391942', '9606.ENSP00000254976', '9606.ENSP00000286628', '9606.ENSP00000366249', '9606.ENSP00000285419', '9606.ENSP00000437256', '9606.ENSP00000464342', '9606.ENSP00000366488', '9606.ENSP00000489624', '9606.ENSP00000325863', '9606.ENSP00000260116', '9606.ENSP00000319060', '9606.ENSP00000406293', '9606.ENSP00000216144', '9606.ENSP00000337353', '9606.ENSP00000230321', '9606.ENSP00000398698', '9606.ENSP00000359719', '9606.ENSP00000228872', '9606.ENSP00000250495', '9606.ENSP00000352738', '9606.ENSP00000378476', '9606.ENSP00000430432', '9606.ENSP00000358784', '9606.ENSP00000364210', '9606.ENSP00000253408', '9606.ENSP00000282146', '9606.ENSP00000380432', '9606.ENSP00000282020', '9606.ENSP00000482169', '9606.ENSP00000287713', '9606.ENSP00000483254', '9606.ENSP00000364204', '9606.ENSP00000333262', '9606.ENSP00000358283', '9606.ENSP00000378699', '9606.ENSP00000419243', '9606.ENSP00000239231', '9606.ENSP00000295987', '9606.ENSP00000378338', '9606.ENSP00000224140', '9606.ENSP00000181796', '9606.ENSP00000484060', '9606.ENSP00000323588', '9606.ENSP00000390941', '9606.ENSP00000264689', '9606.ENSP00000260665', '9606.ENSP00000283195', '9606.ENSP00000351777', '9606.ENSP00000349722', '9606.ENSP00000354923', '9606.ENSP00000437125', '9606.ENSP00000374354', '9606.ENSP00000346694', '9606.ENSP00000498362', '9606.ENSP00000216254', '9606.ENSP00000380903', '9606.ENSP00000276654', '9606.ENSP00000359095', '9606.ENSP00000357583', '9606.ENSP00000477437', '9606.ENSP00000249396', '9606.ENSP00000408526', '9606.ENSP00000310036', '9606.ENSP00000478887', '9606.ENSP00000463653', '9606.ENSP00000354929', '9606.ENSP00000377372', '9606.ENSP00000326366', '9606.ENSP00000438574', '9606.ENSP00000258106', '9606.ENSP00000333277', '9606.ENSP00000362014', '9606.ENSP00000334002', '9606.ENSP00000418447', '9606.ENSP00000240100', '9606.ENSP00000252804', '9606.ENSP00000495360', '9606.ENSP00000227507', '9606.ENSP00000264552', '9606.ENSP00000307863', '9606.ENSP00000300213', '9606.ENSP00000306894', '9606.ENSP00000369863', '9606.ENSP00000269228', '9606.ENSP00000216127', '9606.ENSP00000379915', '9606.ENSP00000348645', '9606.ENSP00000399403', '9606.ENSP00000406209', '9606.ENSP00000391803', '9606.ENSP00000233813', '9606.ENSP00000444433', '9606.ENSP00000475626', '9606.ENSP00000489407', '9606.ENSP00000295589', '9606.ENSP00000454229', '9606.ENSP00000500990', '9606.ENSP00000499582', '9606.ENSP00000293288', '9606.ENSP00000362131', '9606.ENSP00000311032', '9606.ENSP00000359085', '9606.ENSP00000264867', '9606.ENSP00000405388', '9606.ENSP00000296271', '9606.ENSP00000352516', '9606.ENSP00000316842', '9606.ENSP00000498255', '9606.ENSP00000180166', '9606.ENSP00000282561', '9606.ENSP00000332194', '9606.ENSP00000284981', '9606.ENSP00000221930', '9606.ENSP00000212015', '9606.ENSP00000477715', '9606.ENSP00000270349', '9606.ENSP00000368881', '9606.ENSP00000388638', '9606.ENSP00000285667', '9606.ENSP00000386458', '9606.ENSP00000454852', '9606.ENSP00000362485', '9606.ENSP00000368884', '9606.ENSP00000270225', '9606.ENSP00000260386', '9606.ENSP00000365514', '9606.ENSP00000240316', '9606.ENSP00000327687', '9606.ENSP00000303540', '9606.ENSP00000418572', '9606.ENSP00000418960', '9606.ENSP00000419782', '9606.ENSP00000307900', '9606.ENSP00000324173', '9606.ENSP00000418721', '9606.ENSP00000347170', '9606.ENSP00000273320', '9606.ENSP00000225577', '9606.ENSP00000415579', '9606.ENSP00000376637', '9606.ENSP00000359804', '9606.ENSP00000374455', '9606.ENSP00000413035', '9606.ENSP00000383042', '9606.ENSP00000221801', '9606.ENSP00000399851', '9606.ENSP00000302216', '9606.ENSP00000376753', '9606.ENSP00000364270', '9606.ENSP00000315137', '9606.ENSP00000366452', '9606.ENSP00000256079', '9606.ENSP00000349748', '9606.ENSP00000216727', '9606.ENSP00000288943', '9606.ENSP00000385216', '9606.ENSP00000216218', '9606.ENSP00000304331', '9606.ENSP00000366330', '9606.ENSP00000361027', '9606.ENSP00000252996', '9606.ENSP00000365861', '9606.ENSP00000302100', '9606.ENSP00000305422', '9606.ENSP00000254810', '9606.ENSP00000386786', '9606.ENSP00000304643', '9606.ENSP00000361021', '9606.ENSP00000346483', '9606.ENSP00000307604', '9606.ENSP00000226382', '9606.ENSP00000347184', '9606.ENSP00000298556', '9606.ENSP00000268058', '9606.ENSP00000399376', '9606.ENSP00000244061', '9606.ENSP00000338512', '9606.ENSP00000291295', '9606.ENSP00000405674', '9606.ENSP00000223129', '9606.ENSP00000323148', '9606.ENSP00000318635', '9606.ENSP00000237014', '9606.ENSP00000353864', '9606.ENSP00000368984', '9606.ENSP00000397563', '9606.ENSP00000284240', '9606.ENSP00000320821', '9606.ENSP00000498653', '9606.ENSP00000216714', '9606.ENSP00000499501', '9606.ENSP00000476119', '9606.ENSP00000254722', '9606.ENSP00000430000', '9606.ENSP00000340820', '9606.ENSP00000430241', '9606.ENSP00000327513', '9606.ENSP00000329403', '9606.ENSP00000380602', '9606.ENSP00000358089', '9606.ENSP00000301587', '9606.ENSP00000296755', '9606.ENSP00000365227', '9606.ENSP00000247225', '9606.ENSP00000338629', '9606.ENSP00000262958', '9606.ENSP00000339835', '9606.ENSP00000282499', '9606.ENSP00000374049', '9606.ENSP00000078429', '9606.ENSP00000379616', '9606.ENSP00000489262', '9606.ENSP00000305702', '9606.ENSP00000376352', '9606.ENSP00000471191', '9606.ENSP00000314407', '9606.ENSP00000261367', '9606.ENSP00000365807', '9606.ENSP00000405327', '9606.ENSP00000368970', '9606.ENSP00000329918', '9606.ENSP00000261366', '9606.ENSP00000365576', '9606.ENSP00000216200', '9606.ENSP00000497217', '9606.ENSP00000397297', '9606.ENSP00000365458', '9606.ENSP00000306920', '9606.ENSP00000418994', '9606.ENSP00000254719', '9606.ENSP00000250113', '9606.ENSP00000377681', '9606.ENSP00000401371', '9606.ENSP00000355657', '9606.ENSP00000265113', '9606.ENSP00000340292', '9606.ENSP00000425561', '9606.ENSP00000254108', '9606.ENSP00000363822', '9606.ENSP00000264033', '9606.ENSP00000494750', '9606.ENSP00000231004', '9606.ENSP00000489189', '9606.ENSP00000384625', '9606.ENSP00000361405', '9606.ENSP00000354335', '9606.ENSP00000469455', '9606.ENSP00000324806', '9606.ENSP00000436679', '9606.ENSP00000264255', '9606.ENSP00000264498', '9606.ENSP00000343690', '9606.ENSP00000302814', '9606.ENSP00000369127', '9606.ENSP00000301727', '9606.ENSP00000265351', '9606.ENSP00000266682', '9606.ENSP00000360660', '9606.ENSP00000379287', '9606.ENSP00000267890', '9606.ENSP00000298596', '9606.ENSP00000381488', '9606.ENSP00000309457', '9606.ENSP00000282928', '9606.ENSP00000354346', '9606.ENSP00000310561', '9606.ENSP00000297261', '9606.ENSP00000370571', '9606.ENSP00000439937', '9606.ENSP00000481593', '9606.ENSP00000225916', '9606.ENSP00000265379', '9606.ENSP00000345997', '9606.ENSP00000265381', '9606.ENSP00000313829', '9606.ENSP00000435466', '9606.ENSP00000266594', '9606.ENSP00000254488', '9606.ENSP00000496959', '9606.ENSP00000497806', '9606.ENSP00000240185', '9606.ENSP00000415676', '9606.ENSP00000354111', '9606.ENSP00000220592', '9606.ENSP00000494538', '9606.ENSP00000480012', '9606.ENSP00000391269', '9606.ENSP00000277120', '9606.ENSP00000366070', '9606.ENSP00000269601', '9606.ENSP00000264276', '9606.ENSP00000402257', '9606.ENSP00000426503', '9606.ENSP00000424566', '9606.ENSP00000258962', '9606.ENSP00000320347', '9606.ENSP00000391381', '9606.ENSP00000264036', '9606.ENSP00000403343', '9606.ENSP00000288490', '9606.ENSP00000368007', '9606.ENSP00000291700', '9606.ENSP00000219476', '9606.ENSP00000492363', '9606.ENSP00000354360', '9606.ENSP00000417864', '9606.ENSP00000310585', '9606.ENSP00000358967', '9606.ENSP00000354125', '9606.ENSP00000265431', '9606.ENSP00000359890', '9606.ENSP00000263257', '9606.ENSP00000302967', '9606.ENSP00000343001', '9606.ENSP00000369689', '9606.ENSP00000252486', '9606.ENSP00000255631', '9606.ENSP00000356790', '9606.ENSP00000480050', '9606.ENSP00000470248', '9606.ENSP00000354497', '9606.ENSP00000278616', '9606.ENSP00000303709', '9606.ENSP00000265421', '9606.ENSP00000252482', '9606.ENSP00000264335', '9606.ENSP00000321455', '9606.ENSP00000323511', '9606.ENSP00000473623', '9606.ENSP00000312987', '9606.ENSP00000442920', '9606.ENSP00000215095', '9606.ENSP00000336712', '9606.ENSP00000378394', '9606.ENSP00000220420', '9606.ENSP00000299001', '9606.ENSP00000246914', '9606.ENSP00000331040', '9606.ENSP00000221996', '9606.ENSP00000450873', '9606.ENSP00000263038', '9606.ENSP00000265459', '9606.ENSP00000342056', '9606.ENSP00000371985', '9606.ENSP00000400142', '9606.ENSP00000263160', '9606.ENSP00000254325', '9606.ENSP00000403888', '9606.ENSP00000254322', '9606.ENSP00000379350', '9606.ENSP00000414303', '9606.ENSP00000359506', '9606.ENSP00000422185', '9606.ENSP00000360609', '9606.ENSP00000268712', '9606.ENSP00000358518', '9606.ENSP00000462745', '9606.ENSP00000263025', '9606.ENSP00000493382', '9606.ENSP00000405965', '9606.ENSP00000368332', '9606.ENSP00000346534', '9606.ENSP00000345575', '9606.ENSP00000309477', '9606.ENSP00000290649', '9606.ENSP00000361930', '9606.ENSP00000495557', '9606.ENSP00000345571', '9606.ENSP00000309591', '9606.ENSP00000302961', '9606.ENSP00000376077', '9606.ENSP00000355370', '9606.ENSP00000376197', '9606.ENSP00000438886', '9606.ENSP00000359978', '9606.ENSP00000358886', '9606.ENSP00000317333', '9606.ENSP00000374552', '9606.ENSP00000261837', '9606.ENSP00000427900', '9606.ENSP00000435637', '9606.ENSP00000431162', '9606.ENSP00000306330', '9606.ENSP00000362578', '9606.ENSP00000385675', '9606.ENSP00000332706', '9606.ENSP00000348056', '9606.ENSP00000365601', '9606.ENSP00000278379', '9606.ENSP00000370083', '9606.ENSP00000276079', '9606.ENSP00000453170', '9606.ENSP00000245255', '9606.ENSP00000305480', '9606.ENSP00000364639', '9606.ENSP00000265081', '9606.ENSP00000353767', '9606.ENSP00000353646', '9606.ENSP00000269305', '9606.ENSP00000316357', '9606.ENSP00000398632', '9606.ENSP00000279488', '9606.ENSP00000481848', '9606.ENSP00000258302', '9606.ENSP00000354859', '9606.ENSP00000314173', '9606.ENSP00000377936', '9606.ENSP00000499387', '9606.ENSP00000360266', '9606.ENSP00000362205', '9606.ENSP00000265195', '9606.ENSP00000384474', '9606.ENSP00000349156', '9606.ENSP00000258415', '9606.ENSP00000422435', '9606.ENSP00000370193', '9606.ENSP00000315299', '9606.ENSP00000370058', '9606.ENSP00000371267', '9606.ENSP00000248975', '9606.ENSP00000414856', '9606.ENSP00000321606', '9606.ENSP00000339004', '9606.ENSP00000350386', '9606.ENSP00000409279', '9606.ENSP00000353414', '9606.ENSP00000362680', '9606.ENSP00000261731', '9606.ENSP00000215832', '9606.ENSP00000349168', '9606.ENSP00000294702', '9606.ENSP00000385410', '9606.ENSP00000360493', '9606.ENSP00000477141', '9606.ENSP00000340467', '9606.ENSP00000295910', '9606.ENSP00000411355', '9606.ENSP00000381057', '9606.ENSP00000421339', '9606.ENSP00000308610', '9606.ENSP00000225504', '9606.ENSP00000261601', '9606.ENSP00000371133', '9606.ENSP00000321835', '9606.ENSP00000455698', '9606.ENSP00000479667', '9606.ENSP00000419081', '9606.ENSP00000256261', '9606.ENSP00000306561', '9606.ENSP00000295900', '9606.ENSP00000349298', '9606.ENSP00000362300', '9606.ENSP00000254079', '9606.ENSP00000381185', '9606.ENSP00000219197', '9606.ENSP00000490107', '9606.ENSP00000417901', '9606.ENSP00000359019', '9606.ENSP00000380070', '9606.ENSP00000458537', '9606.ENSP00000288135', '9606.ENSP00000457205', '9606.ENSP00000393379', '9606.ENSP00000478249', '9606.ENSP00000318585', '9606.ENSP00000305288', '9606.ENSP00000259711', '9606.ENSP00000265164', '9606.ENSP00000343515', '9606.ENSP00000340125', '9606.ENSP00000471851', '9606.ENSP00000360231', '9606.ENSP00000245451', '9606.ENSP00000202625', '9606.ENSP00000306138', '9606.ENSP00000248600']}
2024-06-20 16:50:30,555 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/kegg_db', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,556 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/kegg_db)
2024-06-20 16:50:30,561 [DEBUG] py4...: ǀOK[200], content: {"name":"kegg_db","values":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}
2024-06-20 16:50:30,561 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'kegg_db', 'values': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]}
2024-06-20 16:50:30,562 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/wiki_db', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,562 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/wiki_db)
2024-06-20 16:50:30,568 [DEBUG] py4...: ǀOK[200], content: {"name":"wiki_db","values":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}
2024-06-20 16:50:30,569 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'wiki_db', 'values': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]}
2024-06-20 16:50:30,569 [DEBUG] py4...: ǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/string_db', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,570 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/string_db)
2024-06-20 16:50:30,575 [DEBUG] py4...: ǀOK[200], content: {"name":"string_db","values":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,null,1,null,1,1,1,null,null,null,null,1,1,null,1,null,1,1,null,1,null,null,null,1,1,1,null,null,1,1,null,null,null,null,null,1,null,null,1,1,null,null,null,null,null,1,null,null,null,null,null,1,null,null,1,null,null,1,null,null,1,1,1,1,1,1,1,null,1,1,1,1,1,1,1,null,1,null,1,null,1,null,1,1,1,null,1,null,1,1,1,null,1,null,1,1,1,1,1,null,1,null,1,null,1,null,1,1,1,null,1,1,1,1,1,null,1,null,1,1,1,null,1,null,1,null,1,1,1,null,1,null,1,1,1,null,1,null,1,1,1,1,1,null,1,1,1,1,1,null,1,null,1,null,1,null,1,null,1,null,1,1,1,null,1,1,1,null,1,null,1,null,1,1,1,null,1,null,1,null,1,null,1,1,1,1,1,null,1,null,1,1,1,null,1,1,1,null,1,1,1,null,1,null,1,null,1,1,1,null,1,1,1,1,1,null,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}
2024-06-20 16:50:30,575 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'string_db', 'values': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, None, 1, None, 1, 1, 1, None, None, None, None, 1, 1, None, 1, None, 1, 1, None, 1, None, None, None, 1, 1, 1, None, None, 1, 1, None, None, None, None, None, 1, None, None, 1, 1, None, None, None, None, None, 1, None, None, None, None, None, 1, None, None, 1, None, None, 1, None, None, 1, 1, 1, 1, 1, 1, 1, None, 1, 1, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, 1, 1, 1, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, 1, 1, 1, 1, None, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, 1, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, 1, 1, None, 1, None, 1, 1, 1, None, 1, 1, 1, None, 1, 1, 1, None, 1, None, 1, None, 1, 1, 1, None, 1, 1, 1, 1, 1, None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}
2024-06-20 16:50:30,578 [DEBUG] py4...: Returning 'get_table_columns':                         name  kegg_db  wiki_db  string_db
129026  9606.ENSP00000350170      NaN      NaN        1.0
129029  9606.ENSP00000376921      NaN      NaN        1.0
129032  9606.ENSP00000373413      NaN      NaN        1.0
129035  9606.ENSP00000246548      NaN      NaN        1.0
129038  9606.ENSP00000355741      NaN      NaN        1.0
...                      ...      ...      ...        ...
129011  9606.ENSP00000360231      NaN      NaN        1.0
129014  9606.ENSP00000245451      NaN      NaN        1.0
129017  9606.ENSP00000202625      NaN      NaN        1.0
129020  9606.ENSP00000306138      NaN      NaN        1.0
129023  9606.ENSP00000248600      NaN      NaN        1.0

[780 rows x 4 columns]
2024-06-20 16:50:30,578 [DEBUG] py4...: --------------------
2024-06-20 16:50:30,583 [DEBUG] py4...: Calling set_current_network(126975)
2024-06-20 16:50:30,583 [DEBUG] py4...: ǀCalling get_network_suid(126975)
2024-06-20 16:50:30,584 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,584 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:30,588 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:30,589 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:30,589 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:30,589 [DEBUG] py4...: ǀCalling commands_post('network set current network="SUID:126975"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,589 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:126975'}
2024-06-20 16:50:30,595 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:50:30,595 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:50:30,596 [DEBUG] py4...: Returning 'set_current_network': {}
2024-06-20 16:50:30,596 [DEBUG] py4...: --------------------
2024-06-20 16:50:30,599 [DEBUG] py4...: Calling load_table_data(                        name  kegg_db  wiki_db  string_db database
129026  9606.ENSP00000350170      NaN      NaN        1.0   string
129029  9606.ENSP00000376921      NaN      NaN        1.0   string
129032  9606.ENSP00000373413      NaN      NaN        1.0   string
129035  9606.ENSP00000246548      NaN      NaN        1.0   string
129038  9606.ENSP00000355741      NaN      NaN        1.0   string
...                      ...      ...      ...        ...      ...
129011  9606.ENSP00000360231      NaN      NaN        1.0   string
129014  9606.ENSP00000245451      NaN      NaN        1.0   string
129017  9606.ENSP00000202625      NaN      NaN        1.0   string
129020  9606.ENSP00000306138      NaN      NaN        1.0   string
129023  9606.ENSP00000248600      NaN      NaN        1.0   string

[780 rows x 5 columns], data_key_column='name')
2024-06-20 16:50:30,599 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,599 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,600 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:50:30,606 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 126975
}
],
 "errors":[]
}
2024-06-20 16:50:30,606 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 126975}]
2024-06-20 16:50:30,607 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:30,607 [DEBUG] py4...: ǀCalling get_table_columns(table='node', namespace='default', columns='name', network=126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,607 [DEBUG] py4...: ǀǀCalling get_network_suid(126975, 'http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,607 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,607 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:30,613 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:30,613 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:30,613 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 126975
2024-06-20 16:50:30,613 [DEBUG] py4...: ǀǀCalling get_table_column_types('node', namespace='default', network=126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,613 [DEBUG] py4...: ǀǀǀCalling get_network_suid(126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,613 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,615 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:30,620 [DEBUG] py4...: ǀǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:30,620 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:30,620 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 126975
2024-06-20 16:50:30,621 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,621 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns)
2024-06-20 16:50:30,625 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"database","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:50:30,625 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'database', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:50:30,626 [DEBUG] py4...: ǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', '@id': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'display name': 'String', 'kegg_db': 'Integer', 'label': 'String', 'link': 'String', 'name.copy': 'String', 'query term': 'String', 'stringdb::STRING style': 'String', 'stringdb::canonical name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'stringdb::full name': 'String', 'stringdb::imageurl': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'type': 'String', 'uniprot': 'String', 'string_db': 'Integer', 'stringdb::disease score': 'Double', 'Border Width': 'Double', 'ChEBI': 'String', 'Color': 'String', 'Ensembl': 'String', 'GraphID': 'String', 'Label Font Size': 'Double', 'Node Size': 'Double', 'XrefDatasource': 'String', 'XrefId': 'String', 'wiki_db': 'Integer', 'database': 'String'}
2024-06-20 16:50:30,626 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,626 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/SUID)
2024-06-20 16:50:30,631 [DEBUG] py4...: ǀǀOK[200], content: {"name":"SUID","values":[129026,129029,129032,129035,129038,129041,129044,129047,129050,129053,129056,129059,129062,129065,129068,129071,129074,129077,129080,129083,129282,127403,127406,127409,127412,127415,127418,127421,127424,127427,127430,127433,127436,127439,127442,127445,127448,127451,127454,127457,127460,127463,127466,127469,127472,127475,127478,127481,127484,127487,127490,127493,127496,127499,127502,127505,127508,127511,127514,127517,127520,127523,127526,127529,127532,127535,127538,127541,127544,127547,127550,127553,127556,127559,127562,127565,127568,127571,127574,127577,127580,127583,127586,127589,127592,127595,127598,129646,127601,129649,127604,129652,127607,129655,127610,129658,127613,129661,127616,129664,127619,129667,127622,129670,127625,129673,127628,129676,127631,129679,127634,129682,127637,129685,127640,129688,127643,129691,127646,129694,127649,129697,127652,129700,127655,129703,127658,129706,127661,129709,127664,129712,127667,129715,127670,129718,127673,129721,127676,129724,127679,129727,127682,129730,127685,129733,127688,129736,127691,129739,127694,129742,127697,129745,127700,129748,127703,129751,127706,129754,127709,129757,127712,129760,127715,129763,127718,129766,127721,129769,127724,129772,127727,129775,127730,129778,127733,129781,127736,129784,127739,129787,127742,129790,127745,129793,127748,129796,127751,129799,127754,129802,127757,129805,127760,129808,127763,129811,127766,129814,127769,129817,127772,129820,127775,129823,127778,129826,127781,129829,127784,129832,127787,129835,127790,129838,127793,129841,127796,129844,127799,129847,127802,129850,127805,129853,127808,129856,127811,129859,127814,129862,127817,129865,127820,129868,127823,129871,127826,129874,127829,129877,127832,129880,127835,129883,127838,129886,127841,129889,127844,129892,127847,129895,127850,129898,127853,129901,127856,129904,127859,129907,127862,129910,127865,129913,127868,129916,127871,129919,127874,129922,127877,129925,127880,129928,127883,129931,127886,129934,127889,129937,127892,129940,127895,129943,127898,129946,127901,129949,127904,129952,127907,129955,127910,129958,127913,129961,127916,129964,127919,129967,127922,129970,127925,129973,127928,129976,127931,129979,127934,129982,127937,129985,127940,129988,127943,129991,127946,129994,127949,129997,127952,130000,127955,130003,127958,130006,127961,130009,127964,130012,127967,130015,127970,130018,127973,130021,127976,130024,127979,130027,127982,130030,127985,130033,127988,130036,127991,130039,127994,130042,127997,130045,128000,130048,128003,130051,128006,130054,128009,130057,128012,130060,128015,130063,128018,130066,128021,130069,128024,130072,128027,130075,128030,130078,128033,130081,128036,130084,128039,130087,128042,130090,128045,130093,128048,130096,128051,130099,128054,130102,128057,130105,128060,130108,128063,130111,128066,130114,128069,130117,128072,130120,128075,130123,128078,130126,128081,130129,128084,130132,128087,130135,128090,130138,128093,130141,128096,130144,128099,130147,128102,130150,128105,130153,128108,130156,128111,130159,128114,130162,128117,130165,128120,130168,128123,130171,128126,130174,128129,130177,128132,130180,128135,130183,128138,130186,128141,130189,128144,130192,128147,130195,128150,130198,128153,130201,128156,130204,128159,130207,128162,130210,128165,130213,128168,130216,128171,130219,128174,130222,128177,130225,128180,130228,128183,130231,128186,130234,128189,130237,128192,130240,128195,130243,128198,130246,128201,130249,128204,130252,128207,130255,128210,130258,128213,130261,128216,130264,128219,130267,128222,130270,128225,130273,128228,130276,128231,130279,128234,130282,128237,130285,128240,130288,128243,130291,128246,130294,128249,130297,128252,128255,128258,128261,128264,128267,128270,128273,128276,128279,128282,128285,128288,128291,128294,128297,128300,128303,128306,128309,128312,128315,128318,128321,128324,128327,128330,128333,128336,128339,128342,128345,128348,128351,128354,128357,128360,128363,128366,128369,128372,128375,128378,128381,128384,128387,128390,128393,128396,128399,128402,128405,128408,128411,128414,128417,128420,128423,128426,128429,128432,128435,128438,128441,128444,128447,128450,128453,128456,128459,128462,128465,128468,128471,128474,128477,128480,128483,128486,128489,128492,128495,128498,128501,128504,128507,128510,128513,128516,128519,128522,128525,128528,128531,128534,128537,128540,128543,128546,128549,128552,128555,128558,128561,128564,128567,128570,128573,128576,128579,128582,128585,128588,128591,128594,128597,128600,128603,128606,128609,128612,128615,128618,128621,128624,128627,128630,128633,128636,128639,128642,128645,128648,128651,128654,128657,128660,128663,128666,128669,128672,128675,128678,128681,128684,128687,128690,128693,128696,128699,128702,128705,128708,128711,128714,128717,128720,128723,128726,128729,128732,128735,128738,128741,128744,128747,128750,128753,128756,128759,128762,128765,128768,128771,128774,128777,128780,128783,128786,128789,128792,128795,128798,128801,128804,128807,128810,128813,128816,128819,128822,128825,128828,128831,128834,128837,128840,128843,128846,128849,128852,128855,128858,128861,128864,128867,128870,128873,128876,128879,128882,128885,128888,128891,128894,128897,128900,128903,128906,128909,128912,128915,128918,128921,128924,128927,128930,128933,128936,128939,128942,128945,128948,128951,128954,128957,128960,128963,128966,128969,128972,128975,128978,128981,128984,128987,128990,128993,128996,128999,129002,129005,129008,129011,129014,129017,129020,129023]}
2024-06-20 16:50:30,631 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [129026, 129029, 129032, 129035, 129038, 129041, 129044, 129047, 129050, 129053, 129056, 129059, 129062, 129065, 129068, 129071, 129074, 129077, 129080, 129083, 129282, 127403, 127406, 127409, 127412, 127415, 127418, 127421, 127424, 127427, 127430, 127433, 127436, 127439, 127442, 127445, 127448, 127451, 127454, 127457, 127460, 127463, 127466, 127469, 127472, 127475, 127478, 127481, 127484, 127487, 127490, 127493, 127496, 127499, 127502, 127505, 127508, 127511, 127514, 127517, 127520, 127523, 127526, 127529, 127532, 127535, 127538, 127541, 127544, 127547, 127550, 127553, 127556, 127559, 127562, 127565, 127568, 127571, 127574, 127577, 127580, 127583, 127586, 127589, 127592, 127595, 127598, 129646, 127601, 129649, 127604, 129652, 127607, 129655, 127610, 129658, 127613, 129661, 127616, 129664, 127619, 129667, 127622, 129670, 127625, 129673, 127628, 129676, 127631, 129679, 127634, 129682, 127637, 129685, 127640, 129688, 127643, 129691, 127646, 129694, 127649, 129697, 127652, 129700, 127655, 129703, 127658, 129706, 127661, 129709, 127664, 129712, 127667, 129715, 127670, 129718, 127673, 129721, 127676, 129724, 127679, 129727, 127682, 129730, 127685, 129733, 127688, 129736, 127691, 129739, 127694, 129742, 127697, 129745, 127700, 129748, 127703, 129751, 127706, 129754, 127709, 129757, 127712, 129760, 127715, 129763, 127718, 129766, 127721, 129769, 127724, 129772, 127727, 129775, 127730, 129778, 127733, 129781, 127736, 129784, 127739, 129787, 127742, 129790, 127745, 129793, 127748, 129796, 127751, 129799, 127754, 129802, 127757, 129805, 127760, 129808, 127763, 129811, 127766, 129814, 127769, 129817, 127772, 129820, 127775, 129823, 127778, 129826, 127781, 129829, 127784, 129832, 127787, 129835, 127790, 129838, 127793, 129841, 127796, 129844, 127799, 129847, 127802, 129850, 127805, 129853, 127808, 129856, 127811, 129859, 127814, 129862, 127817, 129865, 127820, 129868, 127823, 129871, 127826, 129874, 127829, 129877, 127832, 129880, 127835, 129883, 127838, 129886, 127841, 129889, 127844, 129892, 127847, 129895, 127850, 129898, 127853, 129901, 127856, 129904, 127859, 129907, 127862, 129910, 127865, 129913, 127868, 129916, 127871, 129919, 127874, 129922, 127877, 129925, 127880, 129928, 127883, 129931, 127886, 129934, 127889, 129937, 127892, 129940, 127895, 129943, 127898, 129946, 127901, 129949, 127904, 129952, 127907, 129955, 127910, 129958, 127913, 129961, 127916, 129964, 127919, 129967, 127922, 129970, 127925, 129973, 127928, 129976, 127931, 129979, 127934, 129982, 127937, 129985, 127940, 129988, 127943, 129991, 127946, 129994, 127949, 129997, 127952, 130000, 127955, 130003, 127958, 130006, 127961, 130009, 127964, 130012, 127967, 130015, 127970, 130018, 127973, 130021, 127976, 130024, 127979, 130027, 127982, 130030, 127985, 130033, 127988, 130036, 127991, 130039, 127994, 130042, 127997, 130045, 128000, 130048, 128003, 130051, 128006, 130054, 128009, 130057, 128012, 130060, 128015, 130063, 128018, 130066, 128021, 130069, 128024, 130072, 128027, 130075, 128030, 130078, 128033, 130081, 128036, 130084, 128039, 130087, 128042, 130090, 128045, 130093, 128048, 130096, 128051, 130099, 128054, 130102, 128057, 130105, 128060, 130108, 128063, 130111, 128066, 130114, 128069, 130117, 128072, 130120, 128075, 130123, 128078, 130126, 128081, 130129, 128084, 130132, 128087, 130135, 128090, 130138, 128093, 130141, 128096, 130144, 128099, 130147, 128102, 130150, 128105, 130153, 128108, 130156, 128111, 130159, 128114, 130162, 128117, 130165, 128120, 130168, 128123, 130171, 128126, 130174, 128129, 130177, 128132, 130180, 128135, 130183, 128138, 130186, 128141, 130189, 128144, 130192, 128147, 130195, 128150, 130198, 128153, 130201, 128156, 130204, 128159, 130207, 128162, 130210, 128165, 130213, 128168, 130216, 128171, 130219, 128174, 130222, 128177, 130225, 128180, 130228, 128183, 130231, 128186, 130234, 128189, 130237, 128192, 130240, 128195, 130243, 128198, 130246, 128201, 130249, 128204, 130252, 128207, 130255, 128210, 130258, 128213, 130261, 128216, 130264, 128219, 130267, 128222, 130270, 128225, 130273, 128228, 130276, 128231, 130279, 128234, 130282, 128237, 130285, 128240, 130288, 128243, 130291, 128246, 130294, 128249, 130297, 128252, 128255, 128258, 128261, 128264, 128267, 128270, 128273, 128276, 128279, 128282, 128285, 128288, 128291, 128294, 128297, 128300, 128303, 128306, 128309, 128312, 128315, 128318, 128321, 128324, 128327, 128330, 128333, 128336, 128339, 128342, 128345, 128348, 128351, 128354, 128357, 128360, 128363, 128366, 128369, 128372, 128375, 128378, 128381, 128384, 128387, 128390, 128393, 128396, 128399, 128402, 128405, 128408, 128411, 128414, 128417, 128420, 128423, 128426, 128429, 128432, 128435, 128438, 128441, 128444, 128447, 128450, 128453, 128456, 128459, 128462, 128465, 128468, 128471, 128474, 128477, 128480, 128483, 128486, 128489, 128492, 128495, 128498, 128501, 128504, 128507, 128510, 128513, 128516, 128519, 128522, 128525, 128528, 128531, 128534, 128537, 128540, 128543, 128546, 128549, 128552, 128555, 128558, 128561, 128564, 128567, 128570, 128573, 128576, 128579, 128582, 128585, 128588, 128591, 128594, 128597, 128600, 128603, 128606, 128609, 128612, 128615, 128618, 128621, 128624, 128627, 128630, 128633, 128636, 128639, 128642, 128645, 128648, 128651, 128654, 128657, 128660, 128663, 128666, 128669, 128672, 128675, 128678, 128681, 128684, 128687, 128690, 128693, 128696, 128699, 128702, 128705, 128708, 128711, 128714, 128717, 128720, 128723, 128726, 128729, 128732, 128735, 128738, 128741, 128744, 128747, 128750, 128753, 128756, 128759, 128762, 128765, 128768, 128771, 128774, 128777, 128780, 128783, 128786, 128789, 128792, 128795, 128798, 128801, 128804, 128807, 128810, 128813, 128816, 128819, 128822, 128825, 128828, 128831, 128834, 128837, 128840, 128843, 128846, 128849, 128852, 128855, 128858, 128861, 128864, 128867, 128870, 128873, 128876, 128879, 128882, 128885, 128888, 128891, 128894, 128897, 128900, 128903, 128906, 128909, 128912, 128915, 128918, 128921, 128924, 128927, 128930, 128933, 128936, 128939, 128942, 128945, 128948, 128951, 128954, 128957, 128960, 128963, 128966, 128969, 128972, 128975, 128978, 128981, 128984, 128987, 128990, 128993, 128996, 128999, 129002, 129005, 129008, 129011, 129014, 129017, 129020, 129023]}
2024-06-20 16:50:30,632 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,632 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/name)
2024-06-20 16:50:30,637 [DEBUG] py4...: ǀǀOK[200], content: {"name":"name","values":["9606.ENSP00000350170","9606.ENSP00000376921","9606.ENSP00000373413","9606.ENSP00000246548","9606.ENSP00000355741","9606.ENSP00000355865","9606.ENSP00000359489","9606.ENSP00000356953","9606.ENSP00000354416","9606.ENSP00000355747","9606.ENSP00000419260","9606.ENSP00000316032","9606.ENSP00000361433","9606.ENSP00000320650","9606.ENSP00000311816","9606.ENSP00000246672","9606.ENSP00000447537","9606.ENSP00000259708","9606.ENSP00000222584","9606.ENSP00000353331","9606.ENSP00000360108","9606.ENSP00000261712","9606.ENSP00000247668","9606.ENSP00000451828","9606.ENSP00000378914","9606.ENSP00000282753","9606.ENSP00000360280","9606.ENSP00000319591","9606.ENSP00000378917","9606.ENSP00000362334","9606.ENSP00000216037","9606.ENSP00000360671","9606.ENSP00000332549","9606.ENSP00000378487","9606.ENSP00000375892","9606.ENSP00000307786","9606.ENSP00000261303","9606.ENSP00000263967","9606.ENSP00000293190","9606.ENSP00000408695","9606.ENSP00000391723","9606.ENSP00000290541","9606.ENSP00000360270","9606.ENSP00000281154","9606.ENSP00000370744","9606.ENSP00000370589","9606.ENSP00000340330","9606.ENSP00000351908","9606.ENSP00000488361","9606.ENSP00000310129","9606.ENSP00000415822","9606.ENSP00000361635","9606.ENSP00000355155","9606.ENSP00000353010","9606.ENSP00000260402","9606.ENSP00000378974","9606.ENSP00000369996","9606.ENSP00000352608","9606.ENSP00000349205","9606.ENSP00000365301","9606.ENSP00000324560","9606.ENSP00000222254","9606.ENSP00000277746","9606.ENSP00000431926","9606.ENSP00000262139","9606.ENSP00000371532","9606.ENSP00000442793","9606.ENSP00000355325","9606.ENSP00000311121","9606.ENSP00000281456","9606.ENSP00000401445","9606.ENSP00000366475","9606.ENSP00000434241","9606.ENSP00000362144","9606.ENSP00000414359","9606.ENSP00000443631","9606.ENSP00000440485","9606.ENSP00000440185","9606.ENSP00000357876","9606.ENSP00000261479","9606.ENSP00000359531","9606.ENSP00000338173","9606.ENSP00000432568","9606.ENSP00000428994","9606.ENSP00000458663","9606.ENSP00000329357","9606.ENSP00000306253","9606.ENSP00000362649","9606.ENSP00000271308","9606.ENSP00000332772","9606.ENSP00000496695","9606.ENSP00000355511","9606.ENSP00000501150","9606.ENSP00000467024","9606.ENSP00000230354","9606.ENSP00000221233","9606.ENSP00000500582","9606.ENSP00000392028","9606.ENSP00000223321","9606.ENSP00000371101","9606.ENSP00000288828","9606.ENSP00000467262","9606.ENSP00000310572","9606.ENSP00000262904","9606.ENSP00000244769","9606.ENSP00000291568","9606.ENSP00000396937","9606.ENSP00000395535","9606.ENSP00000484998","9606.ENSP00000492795","9606.ENSP00000446576","9606.ENSP00000419395","9606.ENSP00000338185","9606.ENSP00000425979","9606.ENSP00000345702","9606.ENSP00000343535","9606.ENSP00000478877","9606.ENSP00000352011","9606.ENSP00000262039","9606.ENSP00000364813","9606.ENSP00000418695","9606.ENSP00000352252","9606.ENSP00000349595","9606.ENSP00000222574","9606.ENSP00000225174","9606.ENSP00000221485","9606.ENSP00000270586","9606.ENSP00000308533","9606.ENSP00000355231","9606.ENSP00000222330","9606.ENSP00000359910","9606.ENSP00000382104","9606.ENSP00000481554","9606.ENSP00000352257","9606.ENSP00000392423","9606.ENSP00000375810","9606.ENSP00000428056","9606.ENSP00000370125","9606.ENSP00000394560","9606.ENSP00000354553","9606.ENSP00000263431","9606.ENSP00000355645","9606.ENSP00000338990","9606.ENSP00000482753","9606.ENSP00000262741","9606.ENSP00000409007","9606.ENSP00000391211","9606.ENSP00000369145","9606.ENSP00000366563","9606.ENSP00000260950","9606.ENSP00000025008","9606.ENSP00000343552","9606.ENSP00000216455","9606.ENSP00000340278","9606.ENSP00000296526","9606.ENSP00000259727","9606.ENSP00000262193","9606.ENSP00000265171","9606.ENSP00000386541","9606.ENSP00000386710","9606.ENSP00000269143","9606.ENSP00000401633","9606.ENSP00000250003","9606.ENSP00000436864","9606.ENSP00000247178","9606.ENSP00000435412","9606.ENSP00000221742","9606.ENSP00000379181","9606.ENSP00000261523","9606.ENSP00000381382","9606.ENSP00000264639","9606.ENSP00000356982","9606.ENSP00000286548","9606.ENSP00000410759","9606.ENSP00000360608","9606.ENSP00000228644","9606.ENSP00000483688","9606.ENSP00000339867","9606.ENSP00000481021","9606.ENSP00000313377","9606.ENSP00000247219","9606.ENSP00000351614","9606.ENSP00000354558","9606.ENSP00000282356","9606.ENSP00000237264","9606.ENSP00000477999","9606.ENSP00000489829","9606.ENSP00000397259","9606.ENSP00000259457","9606.ENSP00000497112","9606.ENSP00000428845","9606.ENSP00000497594","9606.ENSP00000432412","9606.ENSP00000272317","9606.ENSP00000345206","9606.ENSP00000364118","9606.ENSP00000263269","9606.ENSP00000258149","9606.ENSP00000367762","9606.ENSP00000387699","9606.ENSP00000481029","9606.ENSP00000345064","9606.ENSP00000157812","9606.ENSP00000295777","9606.ENSP00000477455","9606.ENSP00000362299","9606.ENSP00000368966","9606.ENSP00000295897","9606.ENSP00000341243","9606.ENSP00000313007","9606.ENSP00000044462","9606.ENSP00000500386","9606.ENSP00000363435","9606.ENSP00000246186","9606.ENSP00000496129","9606.ENSP00000257290","9606.ENSP00000309595","9606.ENSP00000261427","9606.ENSP00000309474","9606.ENSP00000410769","9606.ENSP00000234389","9606.ENSP00000487785","9606.ENSP00000348442","9606.ENSP00000261667","9606.ENSP00000370808","9606.ENSP00000335153","9606.ENSP00000219313","9606.ENSP00000376322","9606.ENSP00000353072","9606.ENSP00000351742","9606.ENSP00000215071","9606.ENSP00000282486","9606.ENSP00000440045","9606.ENSP00000387593","9606.ENSP00000252934","9606.ENSP00000053867","9606.ENSP00000354681","9606.ENSP00000323046","9606.ENSP00000358525","9606.ENSP00000303356","9606.ENSP00000333363","9606.ENSP00000357292","9606.ENSP00000262241","9606.ENSP00000480916","9606.ENSP00000369895","9606.ENSP00000294435","9606.ENSP00000262367","9606.ENSP00000345195","9606.ENSP00000429763","9606.ENSP00000341826","9606.ENSP00000403397","9606.ENSP00000298910","9606.ENSP00000369531","9606.ENSP00000272444","9606.ENSP00000406549","9606.ENSP00000270142","9606.ENSP00000347997","9606.ENSP00000337103","9606.ENSP00000368314","9606.ENSP00000264606","9606.ENSP00000284262","9606.ENSP00000479719","9606.ENSP00000219548","9606.ENSP00000406286","9606.ENSP00000350928","9606.ENSP00000283228","9606.ENSP00000346671","9606.ENSP00000385142","9606.ENSP00000013807","9606.ENSP00000302108","9606.ENSP00000371729","9606.ENSP00000284551","9606.ENSP00000356231","9606.ENSP00000263754","9606.ENSP00000359727","9606.ENSP00000287820","9606.ENSP00000458065","9606.ENSP00000386229","9606.ENSP00000357565","9606.ENSP00000040584","9606.ENSP00000334463","9606.ENSP00000295757","9606.ENSP00000357206","9606.ENSP00000363123","9606.ENSP00000263209","9606.ENSP00000362399","9606.ENSP00000355028","9606.ENSP00000358151","9606.ENSP00000377015","9606.ENSP00000295756","9606.ENSP00000453858","9606.ENSP00000292246","9606.ENSP00000428426","9606.ENSP00000340989","9606.ENSP00000408617","9606.ENSP00000383199","9606.ENSP00000345347","9606.ENSP00000358155","9606.ENSP00000263205","9606.ENSP00000490614","9606.ENSP00000264657","9606.ENSP00000441685","9606.ENSP00000347896","9606.ENSP00000391942","9606.ENSP00000254976","9606.ENSP00000286628","9606.ENSP00000366249","9606.ENSP00000285419","9606.ENSP00000437256","9606.ENSP00000464342","9606.ENSP00000366488","9606.ENSP00000489624","9606.ENSP00000325863","9606.ENSP00000260116","9606.ENSP00000319060","9606.ENSP00000406293","9606.ENSP00000216144","9606.ENSP00000337353","9606.ENSP00000230321","9606.ENSP00000398698","9606.ENSP00000359719","9606.ENSP00000228872","9606.ENSP00000250495","9606.ENSP00000352738","9606.ENSP00000378476","9606.ENSP00000430432","9606.ENSP00000358784","9606.ENSP00000364210","9606.ENSP00000253408","9606.ENSP00000282146","9606.ENSP00000380432","9606.ENSP00000282020","9606.ENSP00000482169","9606.ENSP00000287713","9606.ENSP00000483254","9606.ENSP00000364204","9606.ENSP00000333262","9606.ENSP00000358283","9606.ENSP00000378699","9606.ENSP00000419243","9606.ENSP00000239231","9606.ENSP00000295987","9606.ENSP00000378338","9606.ENSP00000224140","9606.ENSP00000181796","9606.ENSP00000484060","9606.ENSP00000323588","9606.ENSP00000390941","9606.ENSP00000264689","9606.ENSP00000260665","9606.ENSP00000283195","9606.ENSP00000351777","9606.ENSP00000349722","9606.ENSP00000354923","9606.ENSP00000437125","9606.ENSP00000374354","9606.ENSP00000346694","9606.ENSP00000498362","9606.ENSP00000216254","9606.ENSP00000380903","9606.ENSP00000276654","9606.ENSP00000359095","9606.ENSP00000357583","9606.ENSP00000477437","9606.ENSP00000249396","9606.ENSP00000408526","9606.ENSP00000310036","9606.ENSP00000478887","9606.ENSP00000463653","9606.ENSP00000354929","9606.ENSP00000377372","9606.ENSP00000326366","9606.ENSP00000438574","9606.ENSP00000258106","9606.ENSP00000333277","9606.ENSP00000362014","9606.ENSP00000334002","9606.ENSP00000418447","9606.ENSP00000240100","9606.ENSP00000252804","9606.ENSP00000495360","9606.ENSP00000227507","9606.ENSP00000264552","9606.ENSP00000307863","9606.ENSP00000300213","9606.ENSP00000306894","9606.ENSP00000369863","9606.ENSP00000269228","9606.ENSP00000216127","9606.ENSP00000379915","9606.ENSP00000348645","9606.ENSP00000399403","9606.ENSP00000406209","9606.ENSP00000391803","9606.ENSP00000233813","9606.ENSP00000444433","9606.ENSP00000475626","9606.ENSP00000489407","9606.ENSP00000295589","9606.ENSP00000454229","9606.ENSP00000500990","9606.ENSP00000499582","9606.ENSP00000293288","9606.ENSP00000362131","9606.ENSP00000311032","9606.ENSP00000359085","9606.ENSP00000264867","9606.ENSP00000405388","9606.ENSP00000296271","9606.ENSP00000352516","9606.ENSP00000316842","9606.ENSP00000498255","9606.ENSP00000180166","9606.ENSP00000282561","9606.ENSP00000332194","9606.ENSP00000284981","9606.ENSP00000221930","9606.ENSP00000212015","9606.ENSP00000477715","9606.ENSP00000270349","9606.ENSP00000368881","9606.ENSP00000388638","9606.ENSP00000285667","9606.ENSP00000386458","9606.ENSP00000454852","9606.ENSP00000362485","9606.ENSP00000368884","9606.ENSP00000270225","9606.ENSP00000260386","9606.ENSP00000365514","9606.ENSP00000240316","9606.ENSP00000327687","9606.ENSP00000303540","9606.ENSP00000418572","9606.ENSP00000418960","9606.ENSP00000419782","9606.ENSP00000307900","9606.ENSP00000324173","9606.ENSP00000418721","9606.ENSP00000347170","9606.ENSP00000273320","9606.ENSP00000225577","9606.ENSP00000415579","9606.ENSP00000376637","9606.ENSP00000359804","9606.ENSP00000374455","9606.ENSP00000413035","9606.ENSP00000383042","9606.ENSP00000221801","9606.ENSP00000399851","9606.ENSP00000302216","9606.ENSP00000376753","9606.ENSP00000364270","9606.ENSP00000315137","9606.ENSP00000366452","9606.ENSP00000256079","9606.ENSP00000349748","9606.ENSP00000216727","9606.ENSP00000288943","9606.ENSP00000385216","9606.ENSP00000216218","9606.ENSP00000304331","9606.ENSP00000366330","9606.ENSP00000361027","9606.ENSP00000252996","9606.ENSP00000365861","9606.ENSP00000302100","9606.ENSP00000305422","9606.ENSP00000254810","9606.ENSP00000386786","9606.ENSP00000304643","9606.ENSP00000361021","9606.ENSP00000346483","9606.ENSP00000307604","9606.ENSP00000226382","9606.ENSP00000347184","9606.ENSP00000298556","9606.ENSP00000268058","9606.ENSP00000399376","9606.ENSP00000244061","9606.ENSP00000338512","9606.ENSP00000291295","9606.ENSP00000405674","9606.ENSP00000223129","9606.ENSP00000323148","9606.ENSP00000318635","9606.ENSP00000237014","9606.ENSP00000353864","9606.ENSP00000368984","9606.ENSP00000397563","9606.ENSP00000284240","9606.ENSP00000320821","9606.ENSP00000498653","9606.ENSP00000216714","9606.ENSP00000499501","9606.ENSP00000476119","9606.ENSP00000254722","9606.ENSP00000430000","9606.ENSP00000340820","9606.ENSP00000430241","9606.ENSP00000327513","9606.ENSP00000329403","9606.ENSP00000380602","9606.ENSP00000358089","9606.ENSP00000301587","9606.ENSP00000296755","9606.ENSP00000365227","9606.ENSP00000247225","9606.ENSP00000338629","9606.ENSP00000262958","9606.ENSP00000339835","9606.ENSP00000282499","9606.ENSP00000374049","9606.ENSP00000078429","9606.ENSP00000379616","9606.ENSP00000489262","9606.ENSP00000305702","9606.ENSP00000376352","9606.ENSP00000471191","9606.ENSP00000314407","9606.ENSP00000261367","9606.ENSP00000365807","9606.ENSP00000405327","9606.ENSP00000368970","9606.ENSP00000329918","9606.ENSP00000261366","9606.ENSP00000365576","9606.ENSP00000216200","9606.ENSP00000497217","9606.ENSP00000397297","9606.ENSP00000365458","9606.ENSP00000306920","9606.ENSP00000418994","9606.ENSP00000254719","9606.ENSP00000250113","9606.ENSP00000377681","9606.ENSP00000401371","9606.ENSP00000355657","9606.ENSP00000265113","9606.ENSP00000340292","9606.ENSP00000425561","9606.ENSP00000254108","9606.ENSP00000363822","9606.ENSP00000264033","9606.ENSP00000494750","9606.ENSP00000231004","9606.ENSP00000489189","9606.ENSP00000384625","9606.ENSP00000361405","9606.ENSP00000354335","9606.ENSP00000469455","9606.ENSP00000324806","9606.ENSP00000436679","9606.ENSP00000264255","9606.ENSP00000264498","9606.ENSP00000343690","9606.ENSP00000302814","9606.ENSP00000369127","9606.ENSP00000301727","9606.ENSP00000265351","9606.ENSP00000266682","9606.ENSP00000360660","9606.ENSP00000379287","9606.ENSP00000267890","9606.ENSP00000298596","9606.ENSP00000381488","9606.ENSP00000309457","9606.ENSP00000282928","9606.ENSP00000354346","9606.ENSP00000310561","9606.ENSP00000297261","9606.ENSP00000370571","9606.ENSP00000439937","9606.ENSP00000481593","9606.ENSP00000225916","9606.ENSP00000265379","9606.ENSP00000345997","9606.ENSP00000265381","9606.ENSP00000313829","9606.ENSP00000435466","9606.ENSP00000266594","9606.ENSP00000254488","9606.ENSP00000496959","9606.ENSP00000497806","9606.ENSP00000240185","9606.ENSP00000415676","9606.ENSP00000354111","9606.ENSP00000220592","9606.ENSP00000494538","9606.ENSP00000480012","9606.ENSP00000391269","9606.ENSP00000277120","9606.ENSP00000366070","9606.ENSP00000269601","9606.ENSP00000264276","9606.ENSP00000402257","9606.ENSP00000426503","9606.ENSP00000424566","9606.ENSP00000258962","9606.ENSP00000320347","9606.ENSP00000391381","9606.ENSP00000264036","9606.ENSP00000403343","9606.ENSP00000288490","9606.ENSP00000368007","9606.ENSP00000291700","9606.ENSP00000219476","9606.ENSP00000492363","9606.ENSP00000354360","9606.ENSP00000417864","9606.ENSP00000310585","9606.ENSP00000358967","9606.ENSP00000354125","9606.ENSP00000265431","9606.ENSP00000359890","9606.ENSP00000263257","9606.ENSP00000302967","9606.ENSP00000343001","9606.ENSP00000369689","9606.ENSP00000252486","9606.ENSP00000255631","9606.ENSP00000356790","9606.ENSP00000480050","9606.ENSP00000470248","9606.ENSP00000354497","9606.ENSP00000278616","9606.ENSP00000303709","9606.ENSP00000265421","9606.ENSP00000252482","9606.ENSP00000264335","9606.ENSP00000321455","9606.ENSP00000323511","9606.ENSP00000473623","9606.ENSP00000312987","9606.ENSP00000442920","9606.ENSP00000215095","9606.ENSP00000336712","9606.ENSP00000378394","9606.ENSP00000220420","9606.ENSP00000299001","9606.ENSP00000246914","9606.ENSP00000331040","9606.ENSP00000221996","9606.ENSP00000450873","9606.ENSP00000263038","9606.ENSP00000265459","9606.ENSP00000342056","9606.ENSP00000371985","9606.ENSP00000400142","9606.ENSP00000263160","9606.ENSP00000254325","9606.ENSP00000403888","9606.ENSP00000254322","9606.ENSP00000379350","9606.ENSP00000414303","9606.ENSP00000359506","9606.ENSP00000422185","9606.ENSP00000360609","9606.ENSP00000268712","9606.ENSP00000358518","9606.ENSP00000462745","9606.ENSP00000263025","9606.ENSP00000493382","9606.ENSP00000405965","9606.ENSP00000368332","9606.ENSP00000346534","9606.ENSP00000345575","9606.ENSP00000309477","9606.ENSP00000290649","9606.ENSP00000361930","9606.ENSP00000495557","9606.ENSP00000345571","9606.ENSP00000309591","9606.ENSP00000302961","9606.ENSP00000376077","9606.ENSP00000355370","9606.ENSP00000376197","9606.ENSP00000438886","9606.ENSP00000359978","9606.ENSP00000358886","9606.ENSP00000317333","9606.ENSP00000374552","9606.ENSP00000261837","9606.ENSP00000427900","9606.ENSP00000435637","9606.ENSP00000431162","9606.ENSP00000306330","9606.ENSP00000362578","9606.ENSP00000385675","9606.ENSP00000332706","9606.ENSP00000348056","9606.ENSP00000365601","9606.ENSP00000278379","9606.ENSP00000370083","9606.ENSP00000276079","9606.ENSP00000453170","9606.ENSP00000245255","9606.ENSP00000305480","9606.ENSP00000364639","9606.ENSP00000265081","9606.ENSP00000353767","9606.ENSP00000353646","9606.ENSP00000269305","9606.ENSP00000316357","9606.ENSP00000398632","9606.ENSP00000279488","9606.ENSP00000481848","9606.ENSP00000258302","9606.ENSP00000354859","9606.ENSP00000314173","9606.ENSP00000377936","9606.ENSP00000499387","9606.ENSP00000360266","9606.ENSP00000362205","9606.ENSP00000265195","9606.ENSP00000384474","9606.ENSP00000349156","9606.ENSP00000258415","9606.ENSP00000422435","9606.ENSP00000370193","9606.ENSP00000315299","9606.ENSP00000370058","9606.ENSP00000371267","9606.ENSP00000248975","9606.ENSP00000414856","9606.ENSP00000321606","9606.ENSP00000339004","9606.ENSP00000350386","9606.ENSP00000409279","9606.ENSP00000353414","9606.ENSP00000362680","9606.ENSP00000261731","9606.ENSP00000215832","9606.ENSP00000349168","9606.ENSP00000294702","9606.ENSP00000385410","9606.ENSP00000360493","9606.ENSP00000477141","9606.ENSP00000340467","9606.ENSP00000295910","9606.ENSP00000411355","9606.ENSP00000381057","9606.ENSP00000421339","9606.ENSP00000308610","9606.ENSP00000225504","9606.ENSP00000261601","9606.ENSP00000371133","9606.ENSP00000321835","9606.ENSP00000455698","9606.ENSP00000479667","9606.ENSP00000419081","9606.ENSP00000256261","9606.ENSP00000306561","9606.ENSP00000295900","9606.ENSP00000349298","9606.ENSP00000362300","9606.ENSP00000254079","9606.ENSP00000381185","9606.ENSP00000219197","9606.ENSP00000490107","9606.ENSP00000417901","9606.ENSP00000359019","9606.ENSP00000380070","9606.ENSP00000458537","9606.ENSP00000288135","9606.ENSP00000457205","9606.ENSP00000393379","9606.ENSP00000478249","9606.ENSP00000318585","9606.ENSP00000305288","9606.ENSP00000259711","9606.ENSP00000265164","9606.ENSP00000343515","9606.ENSP00000340125","9606.ENSP00000471851","9606.ENSP00000360231","9606.ENSP00000245451","9606.ENSP00000202625","9606.ENSP00000306138","9606.ENSP00000248600"]}
2024-06-20 16:50:30,638 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['9606.ENSP00000350170', '9606.ENSP00000376921', '9606.ENSP00000373413', '9606.ENSP00000246548', '9606.ENSP00000355741', '9606.ENSP00000355865', '9606.ENSP00000359489', '9606.ENSP00000356953', '9606.ENSP00000354416', '9606.ENSP00000355747', '9606.ENSP00000419260', '9606.ENSP00000316032', '9606.ENSP00000361433', '9606.ENSP00000320650', '9606.ENSP00000311816', '9606.ENSP00000246672', '9606.ENSP00000447537', '9606.ENSP00000259708', '9606.ENSP00000222584', '9606.ENSP00000353331', '9606.ENSP00000360108', '9606.ENSP00000261712', '9606.ENSP00000247668', '9606.ENSP00000451828', '9606.ENSP00000378914', '9606.ENSP00000282753', '9606.ENSP00000360280', '9606.ENSP00000319591', '9606.ENSP00000378917', '9606.ENSP00000362334', '9606.ENSP00000216037', '9606.ENSP00000360671', '9606.ENSP00000332549', '9606.ENSP00000378487', '9606.ENSP00000375892', '9606.ENSP00000307786', '9606.ENSP00000261303', '9606.ENSP00000263967', '9606.ENSP00000293190', '9606.ENSP00000408695', '9606.ENSP00000391723', '9606.ENSP00000290541', '9606.ENSP00000360270', '9606.ENSP00000281154', '9606.ENSP00000370744', '9606.ENSP00000370589', '9606.ENSP00000340330', '9606.ENSP00000351908', '9606.ENSP00000488361', '9606.ENSP00000310129', '9606.ENSP00000415822', '9606.ENSP00000361635', '9606.ENSP00000355155', '9606.ENSP00000353010', '9606.ENSP00000260402', '9606.ENSP00000378974', '9606.ENSP00000369996', '9606.ENSP00000352608', '9606.ENSP00000349205', '9606.ENSP00000365301', '9606.ENSP00000324560', '9606.ENSP00000222254', '9606.ENSP00000277746', '9606.ENSP00000431926', '9606.ENSP00000262139', '9606.ENSP00000371532', '9606.ENSP00000442793', '9606.ENSP00000355325', '9606.ENSP00000311121', '9606.ENSP00000281456', '9606.ENSP00000401445', '9606.ENSP00000366475', '9606.ENSP00000434241', '9606.ENSP00000362144', '9606.ENSP00000414359', '9606.ENSP00000443631', '9606.ENSP00000440485', '9606.ENSP00000440185', '9606.ENSP00000357876', '9606.ENSP00000261479', '9606.ENSP00000359531', '9606.ENSP00000338173', '9606.ENSP00000432568', '9606.ENSP00000428994', '9606.ENSP00000458663', '9606.ENSP00000329357', '9606.ENSP00000306253', '9606.ENSP00000362649', '9606.ENSP00000271308', '9606.ENSP00000332772', '9606.ENSP00000496695', '9606.ENSP00000355511', '9606.ENSP00000501150', '9606.ENSP00000467024', '9606.ENSP00000230354', '9606.ENSP00000221233', '9606.ENSP00000500582', '9606.ENSP00000392028', '9606.ENSP00000223321', '9606.ENSP00000371101', '9606.ENSP00000288828', '9606.ENSP00000467262', '9606.ENSP00000310572', '9606.ENSP00000262904', '9606.ENSP00000244769', '9606.ENSP00000291568', '9606.ENSP00000396937', '9606.ENSP00000395535', '9606.ENSP00000484998', '9606.ENSP00000492795', '9606.ENSP00000446576', '9606.ENSP00000419395', '9606.ENSP00000338185', '9606.ENSP00000425979', '9606.ENSP00000345702', '9606.ENSP00000343535', '9606.ENSP00000478877', '9606.ENSP00000352011', '9606.ENSP00000262039', '9606.ENSP00000364813', '9606.ENSP00000418695', '9606.ENSP00000352252', '9606.ENSP00000349595', '9606.ENSP00000222574', '9606.ENSP00000225174', '9606.ENSP00000221485', '9606.ENSP00000270586', '9606.ENSP00000308533', '9606.ENSP00000355231', '9606.ENSP00000222330', '9606.ENSP00000359910', '9606.ENSP00000382104', '9606.ENSP00000481554', '9606.ENSP00000352257', '9606.ENSP00000392423', '9606.ENSP00000375810', '9606.ENSP00000428056', '9606.ENSP00000370125', '9606.ENSP00000394560', '9606.ENSP00000354553', '9606.ENSP00000263431', '9606.ENSP00000355645', '9606.ENSP00000338990', '9606.ENSP00000482753', '9606.ENSP00000262741', '9606.ENSP00000409007', '9606.ENSP00000391211', '9606.ENSP00000369145', '9606.ENSP00000366563', '9606.ENSP00000260950', '9606.ENSP00000025008', '9606.ENSP00000343552', '9606.ENSP00000216455', '9606.ENSP00000340278', '9606.ENSP00000296526', '9606.ENSP00000259727', '9606.ENSP00000262193', '9606.ENSP00000265171', '9606.ENSP00000386541', '9606.ENSP00000386710', '9606.ENSP00000269143', '9606.ENSP00000401633', '9606.ENSP00000250003', '9606.ENSP00000436864', '9606.ENSP00000247178', '9606.ENSP00000435412', '9606.ENSP00000221742', '9606.ENSP00000379181', '9606.ENSP00000261523', '9606.ENSP00000381382', '9606.ENSP00000264639', '9606.ENSP00000356982', '9606.ENSP00000286548', '9606.ENSP00000410759', '9606.ENSP00000360608', '9606.ENSP00000228644', '9606.ENSP00000483688', '9606.ENSP00000339867', '9606.ENSP00000481021', '9606.ENSP00000313377', '9606.ENSP00000247219', '9606.ENSP00000351614', '9606.ENSP00000354558', '9606.ENSP00000282356', '9606.ENSP00000237264', '9606.ENSP00000477999', '9606.ENSP00000489829', '9606.ENSP00000397259', '9606.ENSP00000259457', '9606.ENSP00000497112', '9606.ENSP00000428845', '9606.ENSP00000497594', '9606.ENSP00000432412', '9606.ENSP00000272317', '9606.ENSP00000345206', '9606.ENSP00000364118', '9606.ENSP00000263269', '9606.ENSP00000258149', '9606.ENSP00000367762', '9606.ENSP00000387699', '9606.ENSP00000481029', '9606.ENSP00000345064', '9606.ENSP00000157812', '9606.ENSP00000295777', '9606.ENSP00000477455', '9606.ENSP00000362299', '9606.ENSP00000368966', '9606.ENSP00000295897', '9606.ENSP00000341243', '9606.ENSP00000313007', '9606.ENSP00000044462', '9606.ENSP00000500386', '9606.ENSP00000363435', '9606.ENSP00000246186', '9606.ENSP00000496129', '9606.ENSP00000257290', '9606.ENSP00000309595', '9606.ENSP00000261427', '9606.ENSP00000309474', '9606.ENSP00000410769', '9606.ENSP00000234389', '9606.ENSP00000487785', '9606.ENSP00000348442', '9606.ENSP00000261667', '9606.ENSP00000370808', '9606.ENSP00000335153', '9606.ENSP00000219313', '9606.ENSP00000376322', '9606.ENSP00000353072', '9606.ENSP00000351742', '9606.ENSP00000215071', '9606.ENSP00000282486', '9606.ENSP00000440045', '9606.ENSP00000387593', '9606.ENSP00000252934', '9606.ENSP00000053867', '9606.ENSP00000354681', '9606.ENSP00000323046', '9606.ENSP00000358525', '9606.ENSP00000303356', '9606.ENSP00000333363', '9606.ENSP00000357292', '9606.ENSP00000262241', '9606.ENSP00000480916', '9606.ENSP00000369895', '9606.ENSP00000294435', '9606.ENSP00000262367', '9606.ENSP00000345195', '9606.ENSP00000429763', '9606.ENSP00000341826', '9606.ENSP00000403397', '9606.ENSP00000298910', '9606.ENSP00000369531', '9606.ENSP00000272444', '9606.ENSP00000406549', '9606.ENSP00000270142', '9606.ENSP00000347997', '9606.ENSP00000337103', '9606.ENSP00000368314', '9606.ENSP00000264606', '9606.ENSP00000284262', '9606.ENSP00000479719', '9606.ENSP00000219548', '9606.ENSP00000406286', '9606.ENSP00000350928', '9606.ENSP00000283228', '9606.ENSP00000346671', '9606.ENSP00000385142', '9606.ENSP00000013807', '9606.ENSP00000302108', '9606.ENSP00000371729', '9606.ENSP00000284551', '9606.ENSP00000356231', '9606.ENSP00000263754', '9606.ENSP00000359727', '9606.ENSP00000287820', '9606.ENSP00000458065', '9606.ENSP00000386229', '9606.ENSP00000357565', '9606.ENSP00000040584', '9606.ENSP00000334463', '9606.ENSP00000295757', '9606.ENSP00000357206', '9606.ENSP00000363123', '9606.ENSP00000263209', '9606.ENSP00000362399', '9606.ENSP00000355028', '9606.ENSP00000358151', '9606.ENSP00000377015', '9606.ENSP00000295756', '9606.ENSP00000453858', '9606.ENSP00000292246', '9606.ENSP00000428426', '9606.ENSP00000340989', '9606.ENSP00000408617', '9606.ENSP00000383199', '9606.ENSP00000345347', '9606.ENSP00000358155', '9606.ENSP00000263205', '9606.ENSP00000490614', '9606.ENSP00000264657', '9606.ENSP00000441685', '9606.ENSP00000347896', '9606.ENSP00000391942', '9606.ENSP00000254976', '9606.ENSP00000286628', '9606.ENSP00000366249', '9606.ENSP00000285419', '9606.ENSP00000437256', '9606.ENSP00000464342', '9606.ENSP00000366488', '9606.ENSP00000489624', '9606.ENSP00000325863', '9606.ENSP00000260116', '9606.ENSP00000319060', '9606.ENSP00000406293', '9606.ENSP00000216144', '9606.ENSP00000337353', '9606.ENSP00000230321', '9606.ENSP00000398698', '9606.ENSP00000359719', '9606.ENSP00000228872', '9606.ENSP00000250495', '9606.ENSP00000352738', '9606.ENSP00000378476', '9606.ENSP00000430432', '9606.ENSP00000358784', '9606.ENSP00000364210', '9606.ENSP00000253408', '9606.ENSP00000282146', '9606.ENSP00000380432', '9606.ENSP00000282020', '9606.ENSP00000482169', '9606.ENSP00000287713', '9606.ENSP00000483254', '9606.ENSP00000364204', '9606.ENSP00000333262', '9606.ENSP00000358283', '9606.ENSP00000378699', '9606.ENSP00000419243', '9606.ENSP00000239231', '9606.ENSP00000295987', '9606.ENSP00000378338', '9606.ENSP00000224140', '9606.ENSP00000181796', '9606.ENSP00000484060', '9606.ENSP00000323588', '9606.ENSP00000390941', '9606.ENSP00000264689', '9606.ENSP00000260665', '9606.ENSP00000283195', '9606.ENSP00000351777', '9606.ENSP00000349722', '9606.ENSP00000354923', '9606.ENSP00000437125', '9606.ENSP00000374354', '9606.ENSP00000346694', '9606.ENSP00000498362', '9606.ENSP00000216254', '9606.ENSP00000380903', '9606.ENSP00000276654', '9606.ENSP00000359095', '9606.ENSP00000357583', '9606.ENSP00000477437', '9606.ENSP00000249396', '9606.ENSP00000408526', '9606.ENSP00000310036', '9606.ENSP00000478887', '9606.ENSP00000463653', '9606.ENSP00000354929', '9606.ENSP00000377372', '9606.ENSP00000326366', '9606.ENSP00000438574', '9606.ENSP00000258106', '9606.ENSP00000333277', '9606.ENSP00000362014', '9606.ENSP00000334002', '9606.ENSP00000418447', '9606.ENSP00000240100', '9606.ENSP00000252804', '9606.ENSP00000495360', '9606.ENSP00000227507', '9606.ENSP00000264552', '9606.ENSP00000307863', '9606.ENSP00000300213', '9606.ENSP00000306894', '9606.ENSP00000369863', '9606.ENSP00000269228', '9606.ENSP00000216127', '9606.ENSP00000379915', '9606.ENSP00000348645', '9606.ENSP00000399403', '9606.ENSP00000406209', '9606.ENSP00000391803', '9606.ENSP00000233813', '9606.ENSP00000444433', '9606.ENSP00000475626', '9606.ENSP00000489407', '9606.ENSP00000295589', '9606.ENSP00000454229', '9606.ENSP00000500990', '9606.ENSP00000499582', '9606.ENSP00000293288', '9606.ENSP00000362131', '9606.ENSP00000311032', '9606.ENSP00000359085', '9606.ENSP00000264867', '9606.ENSP00000405388', '9606.ENSP00000296271', '9606.ENSP00000352516', '9606.ENSP00000316842', '9606.ENSP00000498255', '9606.ENSP00000180166', '9606.ENSP00000282561', '9606.ENSP00000332194', '9606.ENSP00000284981', '9606.ENSP00000221930', '9606.ENSP00000212015', '9606.ENSP00000477715', '9606.ENSP00000270349', '9606.ENSP00000368881', '9606.ENSP00000388638', '9606.ENSP00000285667', '9606.ENSP00000386458', '9606.ENSP00000454852', '9606.ENSP00000362485', '9606.ENSP00000368884', '9606.ENSP00000270225', '9606.ENSP00000260386', '9606.ENSP00000365514', '9606.ENSP00000240316', '9606.ENSP00000327687', '9606.ENSP00000303540', '9606.ENSP00000418572', '9606.ENSP00000418960', '9606.ENSP00000419782', '9606.ENSP00000307900', '9606.ENSP00000324173', '9606.ENSP00000418721', '9606.ENSP00000347170', '9606.ENSP00000273320', '9606.ENSP00000225577', '9606.ENSP00000415579', '9606.ENSP00000376637', '9606.ENSP00000359804', '9606.ENSP00000374455', '9606.ENSP00000413035', '9606.ENSP00000383042', '9606.ENSP00000221801', '9606.ENSP00000399851', '9606.ENSP00000302216', '9606.ENSP00000376753', '9606.ENSP00000364270', '9606.ENSP00000315137', '9606.ENSP00000366452', '9606.ENSP00000256079', '9606.ENSP00000349748', '9606.ENSP00000216727', '9606.ENSP00000288943', '9606.ENSP00000385216', '9606.ENSP00000216218', '9606.ENSP00000304331', '9606.ENSP00000366330', '9606.ENSP00000361027', '9606.ENSP00000252996', '9606.ENSP00000365861', '9606.ENSP00000302100', '9606.ENSP00000305422', '9606.ENSP00000254810', '9606.ENSP00000386786', '9606.ENSP00000304643', '9606.ENSP00000361021', '9606.ENSP00000346483', '9606.ENSP00000307604', '9606.ENSP00000226382', '9606.ENSP00000347184', '9606.ENSP00000298556', '9606.ENSP00000268058', '9606.ENSP00000399376', '9606.ENSP00000244061', '9606.ENSP00000338512', '9606.ENSP00000291295', '9606.ENSP00000405674', '9606.ENSP00000223129', '9606.ENSP00000323148', '9606.ENSP00000318635', '9606.ENSP00000237014', '9606.ENSP00000353864', '9606.ENSP00000368984', '9606.ENSP00000397563', '9606.ENSP00000284240', '9606.ENSP00000320821', '9606.ENSP00000498653', '9606.ENSP00000216714', '9606.ENSP00000499501', '9606.ENSP00000476119', '9606.ENSP00000254722', '9606.ENSP00000430000', '9606.ENSP00000340820', '9606.ENSP00000430241', '9606.ENSP00000327513', '9606.ENSP00000329403', '9606.ENSP00000380602', '9606.ENSP00000358089', '9606.ENSP00000301587', '9606.ENSP00000296755', '9606.ENSP00000365227', '9606.ENSP00000247225', '9606.ENSP00000338629', '9606.ENSP00000262958', '9606.ENSP00000339835', '9606.ENSP00000282499', '9606.ENSP00000374049', '9606.ENSP00000078429', '9606.ENSP00000379616', '9606.ENSP00000489262', '9606.ENSP00000305702', '9606.ENSP00000376352', '9606.ENSP00000471191', '9606.ENSP00000314407', '9606.ENSP00000261367', '9606.ENSP00000365807', '9606.ENSP00000405327', '9606.ENSP00000368970', '9606.ENSP00000329918', '9606.ENSP00000261366', '9606.ENSP00000365576', '9606.ENSP00000216200', '9606.ENSP00000497217', '9606.ENSP00000397297', '9606.ENSP00000365458', '9606.ENSP00000306920', '9606.ENSP00000418994', '9606.ENSP00000254719', '9606.ENSP00000250113', '9606.ENSP00000377681', '9606.ENSP00000401371', '9606.ENSP00000355657', '9606.ENSP00000265113', '9606.ENSP00000340292', '9606.ENSP00000425561', '9606.ENSP00000254108', '9606.ENSP00000363822', '9606.ENSP00000264033', '9606.ENSP00000494750', '9606.ENSP00000231004', '9606.ENSP00000489189', '9606.ENSP00000384625', '9606.ENSP00000361405', '9606.ENSP00000354335', '9606.ENSP00000469455', '9606.ENSP00000324806', '9606.ENSP00000436679', '9606.ENSP00000264255', '9606.ENSP00000264498', '9606.ENSP00000343690', '9606.ENSP00000302814', '9606.ENSP00000369127', '9606.ENSP00000301727', '9606.ENSP00000265351', '9606.ENSP00000266682', '9606.ENSP00000360660', '9606.ENSP00000379287', '9606.ENSP00000267890', '9606.ENSP00000298596', '9606.ENSP00000381488', '9606.ENSP00000309457', '9606.ENSP00000282928', '9606.ENSP00000354346', '9606.ENSP00000310561', '9606.ENSP00000297261', '9606.ENSP00000370571', '9606.ENSP00000439937', '9606.ENSP00000481593', '9606.ENSP00000225916', '9606.ENSP00000265379', '9606.ENSP00000345997', '9606.ENSP00000265381', '9606.ENSP00000313829', '9606.ENSP00000435466', '9606.ENSP00000266594', '9606.ENSP00000254488', '9606.ENSP00000496959', '9606.ENSP00000497806', '9606.ENSP00000240185', '9606.ENSP00000415676', '9606.ENSP00000354111', '9606.ENSP00000220592', '9606.ENSP00000494538', '9606.ENSP00000480012', '9606.ENSP00000391269', '9606.ENSP00000277120', '9606.ENSP00000366070', '9606.ENSP00000269601', '9606.ENSP00000264276', '9606.ENSP00000402257', '9606.ENSP00000426503', '9606.ENSP00000424566', '9606.ENSP00000258962', '9606.ENSP00000320347', '9606.ENSP00000391381', '9606.ENSP00000264036', '9606.ENSP00000403343', '9606.ENSP00000288490', '9606.ENSP00000368007', '9606.ENSP00000291700', '9606.ENSP00000219476', '9606.ENSP00000492363', '9606.ENSP00000354360', '9606.ENSP00000417864', '9606.ENSP00000310585', '9606.ENSP00000358967', '9606.ENSP00000354125', '9606.ENSP00000265431', '9606.ENSP00000359890', '9606.ENSP00000263257', '9606.ENSP00000302967', '9606.ENSP00000343001', '9606.ENSP00000369689', '9606.ENSP00000252486', '9606.ENSP00000255631', '9606.ENSP00000356790', '9606.ENSP00000480050', '9606.ENSP00000470248', '9606.ENSP00000354497', '9606.ENSP00000278616', '9606.ENSP00000303709', '9606.ENSP00000265421', '9606.ENSP00000252482', '9606.ENSP00000264335', '9606.ENSP00000321455', '9606.ENSP00000323511', '9606.ENSP00000473623', '9606.ENSP00000312987', '9606.ENSP00000442920', '9606.ENSP00000215095', '9606.ENSP00000336712', '9606.ENSP00000378394', '9606.ENSP00000220420', '9606.ENSP00000299001', '9606.ENSP00000246914', '9606.ENSP00000331040', '9606.ENSP00000221996', '9606.ENSP00000450873', '9606.ENSP00000263038', '9606.ENSP00000265459', '9606.ENSP00000342056', '9606.ENSP00000371985', '9606.ENSP00000400142', '9606.ENSP00000263160', '9606.ENSP00000254325', '9606.ENSP00000403888', '9606.ENSP00000254322', '9606.ENSP00000379350', '9606.ENSP00000414303', '9606.ENSP00000359506', '9606.ENSP00000422185', '9606.ENSP00000360609', '9606.ENSP00000268712', '9606.ENSP00000358518', '9606.ENSP00000462745', '9606.ENSP00000263025', '9606.ENSP00000493382', '9606.ENSP00000405965', '9606.ENSP00000368332', '9606.ENSP00000346534', '9606.ENSP00000345575', '9606.ENSP00000309477', '9606.ENSP00000290649', '9606.ENSP00000361930', '9606.ENSP00000495557', '9606.ENSP00000345571', '9606.ENSP00000309591', '9606.ENSP00000302961', '9606.ENSP00000376077', '9606.ENSP00000355370', '9606.ENSP00000376197', '9606.ENSP00000438886', '9606.ENSP00000359978', '9606.ENSP00000358886', '9606.ENSP00000317333', '9606.ENSP00000374552', '9606.ENSP00000261837', '9606.ENSP00000427900', '9606.ENSP00000435637', '9606.ENSP00000431162', '9606.ENSP00000306330', '9606.ENSP00000362578', '9606.ENSP00000385675', '9606.ENSP00000332706', '9606.ENSP00000348056', '9606.ENSP00000365601', '9606.ENSP00000278379', '9606.ENSP00000370083', '9606.ENSP00000276079', '9606.ENSP00000453170', '9606.ENSP00000245255', '9606.ENSP00000305480', '9606.ENSP00000364639', '9606.ENSP00000265081', '9606.ENSP00000353767', '9606.ENSP00000353646', '9606.ENSP00000269305', '9606.ENSP00000316357', '9606.ENSP00000398632', '9606.ENSP00000279488', '9606.ENSP00000481848', '9606.ENSP00000258302', '9606.ENSP00000354859', '9606.ENSP00000314173', '9606.ENSP00000377936', '9606.ENSP00000499387', '9606.ENSP00000360266', '9606.ENSP00000362205', '9606.ENSP00000265195', '9606.ENSP00000384474', '9606.ENSP00000349156', '9606.ENSP00000258415', '9606.ENSP00000422435', '9606.ENSP00000370193', '9606.ENSP00000315299', '9606.ENSP00000370058', '9606.ENSP00000371267', '9606.ENSP00000248975', '9606.ENSP00000414856', '9606.ENSP00000321606', '9606.ENSP00000339004', '9606.ENSP00000350386', '9606.ENSP00000409279', '9606.ENSP00000353414', '9606.ENSP00000362680', '9606.ENSP00000261731', '9606.ENSP00000215832', '9606.ENSP00000349168', '9606.ENSP00000294702', '9606.ENSP00000385410', '9606.ENSP00000360493', '9606.ENSP00000477141', '9606.ENSP00000340467', '9606.ENSP00000295910', '9606.ENSP00000411355', '9606.ENSP00000381057', '9606.ENSP00000421339', '9606.ENSP00000308610', '9606.ENSP00000225504', '9606.ENSP00000261601', '9606.ENSP00000371133', '9606.ENSP00000321835', '9606.ENSP00000455698', '9606.ENSP00000479667', '9606.ENSP00000419081', '9606.ENSP00000256261', '9606.ENSP00000306561', '9606.ENSP00000295900', '9606.ENSP00000349298', '9606.ENSP00000362300', '9606.ENSP00000254079', '9606.ENSP00000381185', '9606.ENSP00000219197', '9606.ENSP00000490107', '9606.ENSP00000417901', '9606.ENSP00000359019', '9606.ENSP00000380070', '9606.ENSP00000458537', '9606.ENSP00000288135', '9606.ENSP00000457205', '9606.ENSP00000393379', '9606.ENSP00000478249', '9606.ENSP00000318585', '9606.ENSP00000305288', '9606.ENSP00000259711', '9606.ENSP00000265164', '9606.ENSP00000343515', '9606.ENSP00000340125', '9606.ENSP00000471851', '9606.ENSP00000360231', '9606.ENSP00000245451', '9606.ENSP00000202625', '9606.ENSP00000306138', '9606.ENSP00000248600']}
2024-06-20 16:50:30,639 [DEBUG] py4...: ǀReturning 'get_table_columns':                         name
129026  9606.ENSP00000350170
129029  9606.ENSP00000376921
129032  9606.ENSP00000373413
129035  9606.ENSP00000246548
129038  9606.ENSP00000355741
...                      ...
129011  9606.ENSP00000360231
129014  9606.ENSP00000245451
129017  9606.ENSP00000202625
129020  9606.ENSP00000306138
129023  9606.ENSP00000248600

[780 rows x 1 columns]
2024-06-20 16:50:30,680 [DEBUG] py4...: ǀCalling get_table_column_names('node', 'default', 126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,680 [DEBUG] py4...: ǀǀCalling get_network_suid(126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,681 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,681 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:30,685 [DEBUG] py4...: ǀǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:30,685 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:30,686 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 126975
2024-06-20 16:50:30,686 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/126975/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,686 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns)
2024-06-20 16:50:30,691 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"database","type":"String","immutable":false,"primaryKey":false}]
2024-06-20 16:50:30,691 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'database', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:50:30,691 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', '@id', 'compartment::cytoskeleton', 'compartment::cytosol', 'compartment::endoplasmic reticulum', 'compartment::endosome', 'compartment::extracellular', 'compartment::golgi apparatus', 'compartment::lysosome', 'compartment::mitochondrion', 'compartment::nucleus', 'compartment::peroxisome', 'compartment::plasma membrane', 'display name', 'kegg_db', 'label', 'link', 'name.copy', 'query term', 'stringdb::STRING style', 'stringdb::canonical name', 'stringdb::database identifier', 'stringdb::description', 'stringdb::enhancedLabel Passthrough', 'stringdb::full name', 'stringdb::imageurl', 'stringdb::namespace', 'stringdb::node type', 'stringdb::sequence', 'stringdb::species', 'stringdb::structures', 'target::development level', 'target::family', 'tissue::adrenal gland', 'tissue::blood', 'tissue::bone', 'tissue::bone marrow', 'tissue::eye', 'tissue::gall bladder', 'tissue::heart', 'tissue::intestine', 'tissue::kidney', 'tissue::liver', 'tissue::lung', 'tissue::muscle', 'tissue::nervous system', 'tissue::pancreas', 'tissue::saliva', 'tissue::skin', 'tissue::spleen', 'tissue::stomach', 'tissue::thyroid gland', 'tissue::urine', 'type', 'uniprot', 'string_db', 'stringdb::disease score', 'Border Width', 'ChEBI', 'Color', 'Ensembl', 'GraphID', 'Label Font Size', 'Node Size', 'XrefDatasource', 'XrefId', 'wiki_db', 'database']
2024-06-20 16:50:30,693 [DEBUG] py4...: ǀCalling cyrest_put('networks/126975/tables/defaultnode', body={'key': 'name', 'dataKey': 'name', 'data': [{'name': '9606.ENSP00000350170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376921', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000373413', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246548', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355741', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355865', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359489', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356953', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354416', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355747', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419260', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316032', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361433', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320650', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000311816', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246672', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000447537', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259708', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000222584', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353331', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261712', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000247668', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000451828', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378914', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000282753', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000360280', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000319591', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378917', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000362334', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000216037', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000360671', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000332549', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378487', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000375892', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000307786', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261303', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000263967', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000293190', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000408695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000391723', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000290541', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000360270', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000281154', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000370744', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000370589', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000340330', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000351908', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000488361', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000310129', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000415822', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000361635', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000355155', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000353010', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000260402', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000378974', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000369996', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000352608', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000349205', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000365301', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000324560', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000222254', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000277746', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000431926', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000262139', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000371532', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000442793', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000355325', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000311121', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000281456', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000401445', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000366475', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000434241', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362144', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000414359', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000443631', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000440485', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000440185', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000357876', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261479', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000359531', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000338173', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000432568', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000428994', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000458663', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000329357', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000306253', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362649', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000271308', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000332772', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000355511', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000501150', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000467024', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000230354', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000221233', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000500582', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000392028', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000223321', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000371101', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288828', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000467262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310572', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000262904', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000244769', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000291568', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000396937', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000395535', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000484998', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000492795', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000446576', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000419395', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338185', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000425979', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345702', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000343535', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478877', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000352011', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262039', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000364813', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000352252', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349595', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000222574', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225174', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000221485', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270586', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000308533', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355231', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000222330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359910', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000382104', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481554', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000352257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000392423', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000375810', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428056', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000370125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000394560', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000354553', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263431', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000355645', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338990', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000482753', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262741', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000409007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391211', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000369145', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366563', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000260950', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000025008', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000343552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216455', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000340278', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296526', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000259727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262193', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000265171', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386541', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000386710', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269143', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000401633', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250003', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000436864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247178', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000435412', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221742', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000379181', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261523', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000381382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264639', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000356982', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000286548', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000410759', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360608', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000228644', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000483688', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000339867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481021', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000313377', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247219', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000351614', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354558', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000282356', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000237264', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000477999', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489829', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000397259', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259457', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000497112', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428845', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000497594', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000432412', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000272317', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345206', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000364118', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263269', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000258149', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000367762', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000387699', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481029', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000345064', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000157812', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000295777', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477455', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362299', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368966', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000295897', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000341243', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000313007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000044462', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000500386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363435', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000246186', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496129', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000257290', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309595', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261427', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309474', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000410769', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000234389', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000487785', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348442', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000261667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370808', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000335153', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219313', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000376322', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353072', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000351742', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215071', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000282486', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000440045', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000387593', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252934', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000053867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354681', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000323046', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358525', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303356', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333363', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357292', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262241', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480916', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369895', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000294435', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262367', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000429763', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000341826', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403397', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298910', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369531', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000272444', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406549', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347997', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000337103', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368314', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264606', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000479719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219548', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406286', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000350928', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000283228', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346671', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000013807', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371729', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284551', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263754', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000287820', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000458065', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386229', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357565', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000040584', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000334463', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295757', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357206', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363123', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263209', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362399', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355028', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358151', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377015', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295756', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000453858', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000292246', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428426', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340989', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000408617', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000383199', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345347', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358155', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000490614', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264657', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000441685', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347896', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391942', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254976', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000286628', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366249', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000285419', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000437256', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000464342', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489624', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000325863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260116', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000319060', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406293', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216144', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000337353', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000230321', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000398698', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000228872', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250495', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000352738', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378476', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430432', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358784', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364210', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000253408', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282146', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380432', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282020', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000482169', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000287713', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000483254', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364204', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358283', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378699', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419243', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000239231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295987', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378338', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000224140', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000181796', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000484060', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323588', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000390941', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264689', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260665', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000283195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000351777', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349722', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354923', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000437125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374354', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346694', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498362', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216254', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380903', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000276654', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359095', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357583', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477437', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000249396', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000408526', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310036', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478887', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000463653', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354929', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377372', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000326366', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000438574', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258106', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333277', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362014', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000334002', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418447', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240100', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252804', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000495360', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000227507', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000300213', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306894', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269228', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216127', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379915', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348645', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399403', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406209', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391803', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000233813', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000444433', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000475626', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489407', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295589', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000454229', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000500990', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499582', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000293288', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362131', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000311032', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359085', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405388', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296271', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000352516', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316842', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000180166', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000332194', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284981', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221930', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000212015', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477715', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270349', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368881', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000388638', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000285667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386458', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000454852', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362485', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368884', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270225', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365514', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240316', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000327687', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303540', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418572', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418960', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419782', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000324173', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418721', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000273320', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225577', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000415579', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376637', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359804', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000413035', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000383042', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221801', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399851', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302216', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376753', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364270', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000315137', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366452', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000256079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349748', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288943', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385216', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216218', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000304331', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361027', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252996', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365861', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302100', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305422', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254810', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386786', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000304643', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361021', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346483', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307604', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000226382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347184', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298556', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000268058', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399376', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000244061', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338512', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000291295', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405674', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000223129', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323148', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000318635', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000237014', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368984', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000397563', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284240', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320821', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498653', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216714', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499501', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000476119', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254722', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430000', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340820', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430241', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000327513', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000329403', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380602', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358089', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000301587', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296755', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365227', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247225', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338629', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262958', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000339835', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282499', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000374049', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000078429', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000379616', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489262', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000305702', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376352', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000471191', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000314407', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000261367', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365807', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000405327', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368970', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000329918', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261366', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365576', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216200', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000497217', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000397297', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365458', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306920', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418994', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250113', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377681', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000401371', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355657', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265113', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340292', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000425561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363822', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264033', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000494750', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000231004', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489189', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000384625', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361405', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354335', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000469455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000324806', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000436679', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264498', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343690', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302814', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369127', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000301727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265351', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000266682', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360660', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379287', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000267890', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298596', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309457', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282928', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354346', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000297261', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370571', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000439937', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'wiki;string'}, {'name': '9606.ENSP00000481593', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225916', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345997', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265381', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000313829', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000435466', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000266594', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496959', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000497806', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000415676', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354111', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000220592', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000494538', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480012', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391269', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000277120', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366070', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264276', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000402257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000426503', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000424566', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258962', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320347', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391381', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264036', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403343', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288490', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000291700', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219476', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000492363', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354360', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000417864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310585', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358967', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265431', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359890', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302967', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343001', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369689', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252486', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000255631', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356790', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480050', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000470248', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354497', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000278616', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303709', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265421', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252482', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264335', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323511', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000473623', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000312987', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000442920', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215095', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000336712', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378394', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000220420', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000299001', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246914', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000331040', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221996', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000450873', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263038', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265459', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000342056', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371985', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000400142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263160', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254325', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403888', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254322', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379350', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000414303', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359506', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000422185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360609', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000268712', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358518', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000462745', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263025', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000493382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405965', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368332', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346534', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345575', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309477', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000290649', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361930', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000495557', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345571', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309591', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302961', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376077', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355370', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376197', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000438886', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359978', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358886', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000317333', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261837', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000427900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000435637', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000431162', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362578', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385675', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000332706', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348056', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000278379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370083', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000276079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000453170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000245255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305480', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364639', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265081', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353767', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353646', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269305', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316357', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000398632', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000279488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481848', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258302', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354859', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000314173', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377936', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499387', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360266', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000384474', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349156', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258415', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000422435', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370193', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000315299', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370058', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371267', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000248975', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000414856', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321606', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000339004', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000350386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000409279', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353414', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'wiki;string'}, {'name': '9606.ENSP00000362680', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261731', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215832', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349168', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000294702', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385410', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360493', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477141', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340467', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295910', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000411355', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381057', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000421339', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000308610', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225504', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371133', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321835', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000455698', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000479667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419081', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000256261', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349298', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362300', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219197', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000490107', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000417901', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359019', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380070', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000458537', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288135', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000457205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000393379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478249', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000318585', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305288', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259711', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265164', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343515', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000471851', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000245451', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000202625', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306138', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000248600', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}]}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,694 [DEBUG] py4...: ǀHTTP PUT(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode), json: {'key': 'name', 'dataKey': 'name', 'data': [{'name': '9606.ENSP00000350170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376921', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000373413', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246548', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355741', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355865', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359489', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356953', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354416', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355747', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419260', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316032', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361433', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320650', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000311816', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246672', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000447537', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259708', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000222584', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353331', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261712', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000247668', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000451828', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378914', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000282753', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000360280', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000319591', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378917', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000362334', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000216037', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000360671', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000332549', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000378487', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000375892', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000307786', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261303', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000263967', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000293190', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000408695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000391723', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000290541', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000360270', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000281154', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000370744', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000370589', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000340330', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000351908', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000488361', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000310129', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000415822', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000361635', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000355155', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000353010', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000260402', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000378974', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000369996', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000352608', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000349205', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000365301', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000324560', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000222254', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000277746', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000431926', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000262139', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000371532', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000442793', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000355325', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000311121', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000281456', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000401445', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000366475', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000434241', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362144', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000414359', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000443631', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000440485', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000440185', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000357876', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261479', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000359531', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000338173', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000432568', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000428994', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000458663', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000329357', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000306253', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362649', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000271308', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000332772', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000355511', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000501150', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000467024', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000230354', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000221233', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000500582', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000392028', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000223321', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000371101', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288828', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000467262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310572', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000262904', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000244769', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000291568', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000396937', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000395535', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000484998', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000492795', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000446576', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000419395', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338185', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000425979', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345702', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000343535', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478877', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000352011', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262039', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000364813', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418695', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000352252', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349595', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000222574', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225174', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000221485', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270586', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000308533', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355231', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000222330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359910', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000382104', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481554', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000352257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000392423', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000375810', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428056', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000370125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000394560', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000354553', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263431', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000355645', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338990', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000482753', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262741', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000409007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391211', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000369145', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366563', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000260950', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000025008', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000343552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216455', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000340278', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296526', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000259727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262193', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000265171', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386541', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000386710', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269143', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000401633', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250003', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000436864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247178', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000435412', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221742', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000379181', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261523', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000381382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264639', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000356982', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000286548', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000410759', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360608', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000228644', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000483688', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000339867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481021', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000313377', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247219', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000351614', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354558', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000282356', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000237264', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000477999', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489829', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000397259', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259457', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000497112', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428845', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000497594', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000432412', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000272317', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345206', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000364118', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263269', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000258149', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000367762', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': None, 'database': 'kegg;wiki'}, {'name': '9606.ENSP00000387699', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481029', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000345064', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000157812', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000295777', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477455', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000362299', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368966', 'kegg_db': 1.0, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'kegg;wiki;string'}, {'name': '9606.ENSP00000295897', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000341243', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000313007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000044462', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000500386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363435', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000246186', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496129', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000257290', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309595', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000261427', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309474', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000410769', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000234389', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000487785', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348442', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000261667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370808', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000335153', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219313', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000376322', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353072', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000351742', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215071', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000282486', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000440045', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000387593', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252934', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': 1.0, 'database': 'kegg;string'}, {'name': '9606.ENSP00000053867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354681', 'kegg_db': 1.0, 'wiki_db': None, 'string_db': None, 'database': 'kegg'}, {'name': '9606.ENSP00000323046', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358525', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303356', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333363', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357292', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262241', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480916', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369895', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000294435', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262367', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000429763', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000341826', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403397', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298910', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369531', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000272444', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406549', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347997', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000337103', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368314', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264606', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000479719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219548', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406286', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000350928', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000283228', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346671', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000013807', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371729', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284551', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263754', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000287820', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000458065', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386229', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357565', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000040584', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000334463', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295757', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357206', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363123', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263209', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362399', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355028', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358151', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377015', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295756', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000453858', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000292246', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000428426', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340989', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000408617', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000383199', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345347', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358155', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000490614', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264657', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000441685', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347896', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391942', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254976', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000286628', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366249', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000285419', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000437256', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000464342', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489624', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000325863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260116', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000319060', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406293', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216144', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000337353', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000230321', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000398698', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000228872', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250495', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000352738', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378476', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430432', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358784', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364210', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000253408', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282146', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380432', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282020', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000482169', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000287713', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000483254', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364204', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333262', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358283', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378699', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419243', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000239231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295987', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378338', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000224140', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000181796', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000484060', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323588', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000390941', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264689', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260665', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000283195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000351777', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349722', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354923', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000437125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374354', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346694', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498362', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216254', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380903', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000276654', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359095', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000357583', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477437', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000249396', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000408526', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310036', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478887', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000463653', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354929', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377372', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000326366', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000438574', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258106', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000333277', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362014', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000334002', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418447', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240100', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252804', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000495360', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000227507', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000300213', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306894', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369863', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269228', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216127', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379915', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348645', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399403', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000406209', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391803', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000233813', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000444433', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000475626', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489407', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295589', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000454229', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000500990', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499582', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000293288', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362131', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000311032', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359085', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264867', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405388', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296271', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000352516', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316842', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000180166', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000332194', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284981', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221930', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000212015', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477715', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270349', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368881', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000388638', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000285667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386458', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000454852', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362485', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368884', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000270225', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000260386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365514', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240316', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000327687', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303540', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418572', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418960', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419782', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000324173', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418721', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000273320', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225577', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000415579', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376637', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359804', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000413035', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000383042', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221801', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399851', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302216', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376753', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364270', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000315137', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366452', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000256079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349748', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288943', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385216', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216218', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000304331', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361027', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252996', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365861', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302100', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305422', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254810', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000386786', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000304643', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361021', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346483', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000307604', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000226382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000347184', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298556', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000268058', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000399376', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000244061', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338512', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000291295', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405674', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000223129', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323148', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000318635', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000237014', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368984', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000397563', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000284240', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320821', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000498653', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216714', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499501', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000476119', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254722', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430000', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340820', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000430241', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000327513', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000329403', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380602', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358089', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000301587', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000296755', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365227', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000247225', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000338629', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000262958', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000339835', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282499', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000374049', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000078429', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000379616', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489262', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000305702', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376352', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000471191', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000314407', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000261367', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365807', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': None, 'database': 'wiki'}, {'name': '9606.ENSP00000405327', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368970', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000329918', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261366', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365576', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000216200', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000497217', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000397297', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365458', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306920', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000418994', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254719', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000250113', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377681', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000401371', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355657', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265113', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340292', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000425561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254108', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000363822', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264033', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000494750', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000231004', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000489189', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000384625', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361405', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354335', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000469455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000324806', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000436679', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264498', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343690', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302814', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369127', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000301727', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265351', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000266682', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360660', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379287', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000267890', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000298596', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309457', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000282928', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354346', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000297261', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370571', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000439937', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'wiki;string'}, {'name': '9606.ENSP00000481593', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225916', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345997', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265381', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000313829', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000435466', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000266594', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000496959', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000497806', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000240185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000415676', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354111', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000220592', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000494538', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480012', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391269', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000277120', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000366070', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264276', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000402257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000426503', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000424566', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258962', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000320347', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000391381', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264036', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403343', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288490', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368007', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000291700', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219476', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000492363', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354360', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000417864', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000310585', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358967', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265431', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359890', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263257', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302967', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343001', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000369689', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252486', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000255631', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000356790', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000480050', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000470248', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354497', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000278616', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000303709', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265421', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000252482', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000264335', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321455', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000323511', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000473623', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000312987', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000442920', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215095', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000336712', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000378394', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000220420', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000299001', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000246914', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000331040', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000221996', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000450873', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263038', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265459', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000342056', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371985', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000400142', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263160', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254325', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000403888', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254322', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000379350', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000414303', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359506', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000422185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360609', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000268712', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358518', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000462745', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000263025', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000493382', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000405965', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000368332', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000346534', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345575', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309477', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000290649', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000361930', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000495557', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000345571', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000309591', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000302961', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376077', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000355370', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000376197', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000438886', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359978', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000358886', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000317333', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000374552', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261837', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000427900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000435637', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000431162', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306330', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362578', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385675', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000332706', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000348056', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000365601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000278379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370083', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000276079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000453170', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000245255', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305480', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000364639', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265081', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353767', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353646', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000269305', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000316357', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000398632', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000279488', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000481848', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258302', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000354859', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000314173', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000377936', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000499387', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360266', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265195', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000384474', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349156', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000258415', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000422435', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370193', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000315299', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000370058', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371267', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000248975', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000414856', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321606', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000339004', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000350386', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000409279', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000353414', 'kegg_db': None, 'wiki_db': 1.0, 'string_db': 1.0, 'database': 'wiki;string'}, {'name': '9606.ENSP00000362680', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261731', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000215832', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349168', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000294702', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000385410', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360493', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000477141', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340467', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295910', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000411355', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381057', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000421339', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000308610', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000225504', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000261601', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000371133', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000321835', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000455698', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000479667', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000419081', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000256261', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306561', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000295900', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000349298', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000362300', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000254079', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000381185', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000219197', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000490107', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000417901', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000359019', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000380070', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000458537', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000288135', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000457205', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000393379', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000478249', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000318585', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000305288', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000259711', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000265164', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000343515', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000340125', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000471851', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000360231', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000245451', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000202625', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000306138', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}, {'name': '9606.ENSP00000248600', 'kegg_db': None, 'wiki_db': None, 'string_db': 1.0, 'database': 'string'}]}
2024-06-20 16:50:30,728 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:50:30,729 [DEBUG] py4...: ǀReturning 'cyrest_put': ''
2024-06-20 16:50:30,729 [DEBUG] py4...: Returning 'load_table_data': 'Success: Data loaded in defaultnode table'
2024-06-20 16:50:30,729 [DEBUG] py4...: --------------------
2024-06-20 16:50:30,729 [DEBUG] py4...: Calling delete_table_column('row.names')
2024-06-20 16:50:30,730 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,730 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:30,730 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:50:30,738 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 126975
}
],
 "errors":[]
}
2024-06-20 16:50:30,739 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 126975}]
2024-06-20 16:50:30,739 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:30,740 [DEBUG] py4...: ǀCalling cyrest_delete('networks/126975/tables/defaultnode/columns/row.names', base_url='http://127.0.0.1:1234/v1', require_json=False)
2024-06-20 16:50:30,740 [DEBUG] py4...: ǀHTTP DELETE(http://127.0.0.1:1234/v1/networks/126975/tables/defaultnode/columns/row.names)
2024-06-20 16:50:30,746 [DEBUG] py4...: ǀOK[200], content: 
2024-06-20 16:50:30,747 [DEBUG] py4...: ǀReturning 'cyrest_delete': ''
2024-06-20 16:50:30,747 [DEBUG] py4...: Returning 'delete_table_column': ''
2024-06-20 16:50:30,747 [DEBUG] py4...: --------------------
2024-06-20 16:50:34,767 [DEBUG] py4...: Calling clone_network(126975)
2024-06-20 16:50:34,768 [DEBUG] py4...: ǀCalling get_network_suid(126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:34,768 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:34,768 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:50:34,774 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975]
2024-06-20 16:50:34,774 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975]
2024-06-20 16:50:34,774 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:50:34,774 [DEBUG] py4...: ǀCalling commands_post('network clone network="SUID:126975"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:34,775 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/clone), json: {'network': 'SUID:126975'}
2024-06-20 16:50:35,523 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":216957,"view":306780},
 "errors":[]
}
2024-06-20 16:50:35,524 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 216957, 'view': 306780}
2024-06-20 16:50:35,524 [DEBUG] py4...: Returning 'clone_network': 216957
2024-06-20 16:50:35,524 [DEBUG] py4...: --------------------
2024-06-20 16:50:35,525 [DEBUG] py4...: Calling commands_run('string expand additionalNodes=2000 network="Merged STRING KEGG Wiki network cutoff 0.4_1" nodeTypes="Homo sapiens" selectivityAlpha=0.5')
2024-06-20 16:50:35,525 [DEBUG] py4...: ǀCalling commands_get('string expand additionalNodes=2000 network="Merged STRING KEGG Wiki network cutoff 0.4_1" nodeTypes="Homo sapiens" selectivityAlpha=0.5', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:50:35,526 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/expand), params: {'additionalNodes': '2000', 'network': 'Merged STRING KEGG Wiki network cutoff 0.4_1', 'nodeTypes': 'Homo sapiens', 'selectivityAlpha': '0.5'}
2024-06-20 16:52:10,189 [DEBUG] py4...: ǀOK[200], content: Loaded network 'Merged STRING KEGG Wiki network cutoff 0.4_1' with 2780 nodes and 208707 edges
Finished

2024-06-20 16:52:10,202 [DEBUG] py4...: ǀReturning 'commands_get': ["Loaded network 'Merged STRING KEGG Wiki network cutoff 0.4_1' with 2780 nodes and 208707 edges"]
2024-06-20 16:52:10,202 [DEBUG] py4...: Returning 'commands_run': ["Loaded network 'Merged STRING KEGG Wiki network cutoff 0.4_1' with 2780 nodes and 208707 edges"]
2024-06-20 16:52:10,202 [DEBUG] py4...: --------------------
2024-06-20 16:52:10,203 [DEBUG] py4...: Calling rename_network('Merged STRING KEGG Wiki network cutoff 0.4 expanded')
2024-06-20 16:52:10,203 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:10,203 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:10,204 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:52:10,211 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 216957
}
],
 "errors":[]
}
2024-06-20 16:52:10,212 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 216957}]
2024-06-20 16:52:10,212 [DEBUG] py4...: ǀReturning 'get_network_suid': 216957
2024-06-20 16:52:10,212 [DEBUG] py4...: ǀCalling commands_post('network rename name="Merged STRING KEGG Wiki network cutoff 0.4 expanded" sourceNetwork="SUID:216957"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:10,213 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/rename), json: {'name': 'Merged STRING KEGG Wiki network cutoff 0.4 expanded', 'sourceNetwork': 'SUID:216957'}
2024-06-20 16:52:10,219 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"network":216957, "title":"Merged STRING KEGG Wiki network cutoff 0.4 expanded"},
 "errors":[]
}
2024-06-20 16:52:10,220 [DEBUG] py4...: ǀReturning 'commands_post': {'network': 216957, 'title': 'Merged STRING KEGG Wiki network cutoff 0.4 expanded'}
2024-06-20 16:52:10,220 [DEBUG] py4...: Returning 'rename_network': {'network': 216957, 'title': 'Merged STRING KEGG Wiki network cutoff 0.4 expanded'}
2024-06-20 16:52:10,220 [DEBUG] py4...: --------------------
2024-06-20 16:52:10,221 [DEBUG] py4...: Calling get_network_suid('Merged STRING KEGG Wiki network cutoff 0.4 expanded')
2024-06-20 16:52:10,221 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:10,222 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:10,222 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-06-20 16:52:10,227 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Wikipathways WP4760 network uniprot","SUID":40096},{"name":"Wikipathways WP4760 network stringified","SUID":41686},{"name":"STRING 0050954 network C0.4","SUID":42582},{"name":"KEGG hsa05017 network stringified","SUID":26235},{"name":"Wikipathways WP4760 network_1","SUID":40683},{"name":"KEGG hsa05017 network","SUID":21981},{"name":"Merged STRING KEGG Wiki network cutoff 0.4","SUID":126975},{"name":"Merged STRING KEGG Wiki network cutoff 0.4 expanded","SUID":216957}]
2024-06-20 16:52:10,228 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Wikipathways WP4760 network uniprot', 'SUID': 40096}, {'name': 'Wikipathways WP4760 network stringified', 'SUID': 41686}, {'name': 'STRING 0050954 network C0.4', 'SUID': 42582}, {'name': 'KEGG hsa05017 network stringified', 'SUID': 26235}, {'name': 'Wikipathways WP4760 network_1', 'SUID': 40683}, {'name': 'KEGG hsa05017 network', 'SUID': 21981}, {'name': 'Merged STRING KEGG Wiki network cutoff 0.4', 'SUID': 126975}, {'name': 'Merged STRING KEGG Wiki network cutoff 0.4 expanded', 'SUID': 216957}]
2024-06-20 16:52:10,228 [DEBUG] py4...: ǀReturning 'get_network_list': ['Wikipathways WP4760 network uniprot', 'Wikipathways WP4760 network stringified', 'STRING 0050954 network C0.4', 'KEGG hsa05017 network stringified', 'Wikipathways WP4760 network_1', 'KEGG hsa05017 network', 'Merged STRING KEGG Wiki network cutoff 0.4', 'Merged STRING KEGG Wiki network cutoff 0.4 expanded']
2024-06-20 16:52:10,229 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Merged STRING KEGG Wiki network cutoff 0.4 expanded" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:10,229 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Merged STRING KEGG Wiki network cutoff 0.4 expanded', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:52:10,238 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 216957
}
],
 "errors":[]
}
2024-06-20 16:52:10,239 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 216957}]
2024-06-20 16:52:10,239 [DEBUG] py4...: Returning 'get_network_suid': 216957
2024-06-20 16:52:10,239 [DEBUG] py4...: --------------------
2024-06-20 16:52:46,017 [DEBUG] py4...: Calling get_visual_style_names()
2024-06-20 16:52:46,018 [DEBUG] py4...: ǀCalling cyrest_get('apply/styles', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,018 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles)
2024-06-20 16:52:46,030 [DEBUG] py4...: ǀOK[200], content: ["STRING - Wikipathways WP4760 network uniprot","WikiPathways-As-Network","default","STRING - spinocerebellar ataxia type 1","Gradient1","Curved","Sample3","Directed","Ripple","Nested Network Style","Big Labels","Minimal","Sample2","STRING - KEGG hsa05017 network","default black","Sample1","Universe","Marquee","STRINGdefault","Solid"]
2024-06-20 16:52:46,031 [DEBUG] py4...: ǀReturning 'cyrest_get': ['STRING - Wikipathways WP4760 network uniprot', 'WikiPathways-As-Network', 'default', 'STRING - spinocerebellar ataxia type 1', 'Gradient1', 'Curved', 'Sample3', 'Directed', 'Ripple', 'Nested Network Style', 'Big Labels', 'Minimal', 'Sample2', 'STRING - KEGG hsa05017 network', 'default black', 'Sample1', 'Universe', 'Marquee', 'STRINGdefault', 'Solid']
2024-06-20 16:52:46,031 [DEBUG] py4...: Returning 'get_visual_style_names': ['STRING - Wikipathways WP4760 network uniprot', 'WikiPathways-As-Network', 'default', 'STRING - spinocerebellar ataxia type 1', 'Gradient1', 'Curved', 'Sample3', 'Directed', 'Ripple', 'Nested Network Style', 'Big Labels', 'Minimal', 'Sample2', 'STRING - KEGG hsa05017 network', 'default black', 'Sample1', 'Universe', 'Marquee', 'STRINGdefault', 'Solid']
2024-06-20 16:52:46,031 [DEBUG] py4...: --------------------
2024-06-20 16:52:46,032 [DEBUG] py4...: Calling create_visual_style('ADCN style')
2024-06-20 16:52:46,032 [DEBUG] py4...: ǀCalling cyrest_post('styles', body={'title': 'ADCN style', 'defaults': [], 'mappings': []}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,033 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/styles), json: {'title': 'ADCN style', 'defaults': [], 'mappings': []}
2024-06-20 16:52:46,053 [DEBUG] py4...: ǀCreated[201], content: {"title": "ADCN style"}
2024-06-20 16:52:46,054 [DEBUG] py4...: ǀReturning 'cyrest_post': {'title': 'ADCN style'}
2024-06-20 16:52:46,054 [DEBUG] py4...: Returning 'create_visual_style': {'title': 'ADCN style'}
2024-06-20 16:52:46,056 [DEBUG] py4...: --------------------
2024-06-20 16:52:46,056 [DEBUG] py4...: Calling set_current_network(216957)
2024-06-20 16:52:46,056 [DEBUG] py4...: ǀCalling get_network_suid(216957)
2024-06-20 16:52:46,057 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,057 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:52:46,063 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975,216957]
2024-06-20 16:52:46,064 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975, 216957]
2024-06-20 16:52:46,064 [DEBUG] py4...: ǀReturning 'get_network_suid': 216957
2024-06-20 16:52:46,065 [DEBUG] py4...: ǀCalling commands_post('network set current network="SUID:216957"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,065 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:216957'}
2024-06-20 16:52:46,072 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:52:46,073 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:52:46,073 [DEBUG] py4...: Returning 'set_current_network': {}
2024-06-20 16:52:46,073 [DEBUG] py4...: --------------------
2024-06-20 16:52:46,073 [DEBUG] py4...: Calling gen_node_color_map('tissue::nervous system', ('palette_color_brewer_s_YlOrBr', 'sequential', <function palette_color_brewer_s_YlOrBr.<locals>.<lambda> at 0x00000228D64C1440>), style_name='ADCN style')
2024-06-20 16:52:46,074 [DEBUG] py4...: ǀCalling get_table_columns(table='node', columns='tissue::nervous system', network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,074 [DEBUG] py4...: ǀǀCalling get_network_suid(None, 'http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,074 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,074 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:52:46,083 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 216957
}
],
 "errors":[]
}
2024-06-20 16:52:46,083 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 216957}]
2024-06-20 16:52:46,083 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 216957
2024-06-20 16:52:46,084 [DEBUG] py4...: ǀǀCalling get_table_column_types('node', namespace='default', network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,084 [DEBUG] py4...: ǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,084 [DEBUG] py4...: ǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,084 [DEBUG] py4...: ǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:52:46,091 [DEBUG] py4...: ǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 216957
}
],
 "errors":[]
}
2024-06-20 16:52:46,092 [DEBUG] py4...: ǀǀǀǀReturning 'commands_post': [{'SUID': 216957}]
2024-06-20 16:52:46,092 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 216957
2024-06-20 16:52:46,092 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/216957/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,093 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/216957/tables/defaultnode/columns)
2024-06-20 16:52:46,098 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"database","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::interactor score","type":"Double","immutable":false,"primaryKey":false}]
2024-06-20 16:52:46,098 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'database', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::interactor score', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:52:46,099 [DEBUG] py4...: ǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', '@id': 'String', 'compartment::cytoskeleton': 'Double', 'compartment::cytosol': 'Double', 'compartment::endoplasmic reticulum': 'Double', 'compartment::endosome': 'Double', 'compartment::extracellular': 'Double', 'compartment::golgi apparatus': 'Double', 'compartment::lysosome': 'Double', 'compartment::mitochondrion': 'Double', 'compartment::nucleus': 'Double', 'compartment::peroxisome': 'Double', 'compartment::plasma membrane': 'Double', 'display name': 'String', 'kegg_db': 'Integer', 'label': 'String', 'link': 'String', 'name.copy': 'String', 'query term': 'String', 'stringdb::STRING style': 'String', 'stringdb::canonical name': 'String', 'stringdb::database identifier': 'String', 'stringdb::description': 'String', 'stringdb::enhancedLabel Passthrough': 'String', 'stringdb::full name': 'String', 'stringdb::imageurl': 'String', 'stringdb::namespace': 'String', 'stringdb::node type': 'String', 'stringdb::sequence': 'String', 'stringdb::species': 'String', 'stringdb::structures': 'List', 'target::development level': 'String', 'target::family': 'String', 'tissue::adrenal gland': 'Double', 'tissue::blood': 'Double', 'tissue::bone': 'Double', 'tissue::bone marrow': 'Double', 'tissue::eye': 'Double', 'tissue::gall bladder': 'Double', 'tissue::heart': 'Double', 'tissue::intestine': 'Double', 'tissue::kidney': 'Double', 'tissue::liver': 'Double', 'tissue::lung': 'Double', 'tissue::muscle': 'Double', 'tissue::nervous system': 'Double', 'tissue::pancreas': 'Double', 'tissue::saliva': 'Double', 'tissue::skin': 'Double', 'tissue::spleen': 'Double', 'tissue::stomach': 'Double', 'tissue::thyroid gland': 'Double', 'tissue::urine': 'Double', 'type': 'String', 'uniprot': 'String', 'string_db': 'Integer', 'stringdb::disease score': 'Double', 'Border Width': 'Double', 'ChEBI': 'String', 'Color': 'String', 'Ensembl': 'String', 'GraphID': 'String', 'Label Font Size': 'Double', 'Node Size': 'Double', 'XrefDatasource': 'String', 'XrefId': 'String', 'wiki_db': 'Integer', 'database': 'String', 'stringdb::interactor score': 'Double'}
2024-06-20 16:52:46,099 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/216957/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,099 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/216957/tables/defaultnode/columns/SUID)
2024-06-20 16:52:46,107 [DEBUG] py4...: ǀǀOK[200], content: {"name":"SUID","values":[348165,344068,344071,344065,348162,344077,348174,348168,348171,344074,348180,348183,344086,348177,344080,344083,348189,344092,344095,344089,348186,344101,348198,348192,348195,344098,348204,348207,344110,348201,344104,344107,348213,344116,344119,344113,348210,344125,348222,348216,348219,344122,348228,348231,344134,348225,344128,344131,348237,344140,344143,344137,348234,344149,348246,348240,348243,344146,348252,348255,344158,348249,344152,344155,348261,344164,344167,344161,348258,344173,348270,348264,348267,344170,348276,348279,344182,348273,344176,344179,348285,344188,344191,344185,348282,344197,348294,348288,348291,344194,348300,348303,344206,348297,344200,344203,348309,344212,344215,344209,348306,344221,348318,348312,348315,344218,348324,348327,344230,348321,344224,344227,348333,344236,344239,344233,348330,344245,348342,348336,348339,344242,348348,217273,348351,344254,348345,217278,344248,344251,217283,348357,344260,344263,344257,348354,344269,217288,348366,348360,217293,348363,344266,217298,348372,348375,344278,217303,348369,344272,344275,348381,344284,344287,344281,217308,348378,344293,217313,348390,217318,348384,348387,344290,217323,348396,348399,344302,348393,344296,344299,348405,344308,344311,217328,344305,217333,348402,344317,217338,348414,217343,348408,348411,344314,348420,348423,344326,348417,344320,344323,217348,348429,344332,217353,344335,344329,217358,348426,217363,344341,348438,348432,348435,344338,348444,348447,217368,344350,348441,344344,217373,344347,348453,217378,344356,344359,217383,344353,348450,344365,348462,348456,348459,217388,344362,348468,217393,348471,344374,348465,217398,344368,344371,217403,348477,344380,344383,344377,348474,344389,217408,348486,348480,217413,348483,344386,217418,348492,348495,344398,217423,348489,344392,344395,348501,344404,344407,344401,217428,348498,344413,217433,348510,217438,348504,348507,344410,217443,348516,348519,344422,348513,344416,344419,348525,344428,344431,217448,344425,217453,348522,344437,217458,348534,217463,348528,348531,344434,348540,348543,344446,348537,344440,344443,217468,348549,344452,217473,344455,344449,217478,348546,217483,344461,348558,348552,348555,344458,348564,348567,217488,344470,348561,344464,217493,344467,348573,217498,344476,344479,217503,344473,348570,344485,348582,348576,348579,217508,344482,348588,217513,348591,344494,348585,217518,344488,344491,217523,348597,344500,344503,344497,348594,344509,217528,348606,348600,217533,348603,344506,217538,348612,348615,344518,217543,348609,344512,344515,348621,344524,344527,344521,217548,348618,344533,217553,348630,217558,348624,348627,344530,217563,348636,348639,344542,348633,344536,344539,348645,344548,344551,217568,344545,217573,348642,344557,217578,348654,217583,348648,348651,344554,348660,348663,344566,348657,344560,344563,217588,348669,344572,217593,344575,344569,217598,348666,217603,344581,348678,348672,348675,344578,348684,348687,217608,344590,348681,344584,217613,344587,348693,217618,344596,344599,217623,344593,348690,344605,348702,348696,348699,217628,344602,348708,217633,348711,344614,348705,217638,344608,344611,217643,348717,344620,344623,344617,348714,344629,217648,348726,348720,217653,348723,344626,217658,348732,348735,344638,217663,348729,344632,344635,348741,344644,344647,344641,217668,348738,344653,217673,348750,217678,348744,348747,344650,217683,348756,348759,344662,348753,344656,344659,348765,344668,344671,217688,344665,217693,348762,344677,217698,348774,217703,348768,348771,344674,348780,348783,344686,348777,344680,344683,217708,348789,344692,217713,344695,344689,217718,348786,217723,344701,348798,348792,348795,344698,348804,348807,217728,344710,348801,344704,217733,344707,348813,217738,344716,344719,217743,344713,348810,344725,348822,348816,348819,217748,344722,348828,217753,348831,344734,348825,217758,344728,344731,217763,348837,344740,344743,344737,348834,344749,217768,348846,348840,217773,348843,344746,217778,348852,348855,344758,217783,348849,344752,344755,348861,344764,344767,344761,217788,348858,344773,217793,348870,217798,348864,348867,344770,217803,348876,348879,344782,348873,344776,344779,348885,344788,344791,217808,344785,217813,348882,344797,217818,348894,217823,348888,348891,344794,348900,348903,344806,348897,344800,344803,217828,348909,344812,217833,344815,344809,217838,348906,217843,344821,348918,348912,348915,344818,348924,348927,217848,344830,348921,344824,217853,344827,348933,217858,344836,344839,217863,344833,348930,344845,348942,348936,348939,217868,344842,348948,217873,348951,344854,348945,217878,344848,344851,217883,348957,344860,344863,344857,348954,344869,217888,348966,348960,217893,348963,344866,217898,348972,348975,344878,217903,348969,344872,344875,348981,344884,344887,344881,217908,348978,344893,217913,348990,217918,348984,348987,344890,217923,348996,348999,344902,348993,344896,344899,349005,344908,344911,217928,344905,217933,349002,344917,217938,349014,217943,349008,349011,344914,349020,349023,344926,349017,344920,344923,217948,349029,344932,217953,344935,344929,217958,349026,217963,344941,349038,349032,349035,344938,349044,349047,217968,344950,349041,344944,217973,344947,349053,217978,344956,344959,217983,344953,349050,344965,349062,349056,349059,217988,344962,349068,217993,349071,344974,349065,217998,344968,344971,218003,349077,344980,344983,344977,349074,344989,218008,349086,349080,218013,349083,344986,218018,349092,349095,344998,218023,349089,344992,344995,349101,345004,345007,345001,218028,349098,345013,218033,349110,218038,349104,349107,345010,218043,349116,349119,345022,349113,345016,345019,349125,345028,345031,218048,345025,218053,349122,345037,218058,349134,218063,349128,349131,345034,349140,349143,345046,349137,345040,345043,218068,349149,345052,218073,345055,345049,218078,349146,218083,345061,349158,349152,349155,345058,349164,349167,218088,345070,349161,345064,218093,345067,349173,218098,345076,345079,218103,345073,349170,345085,349182,349176,349179,218108,345082,349188,218113,349191,345094,349185,218118,345088,345091,218123,349197,345100,345103,345097,349194,345109,218128,349206,349200,218133,349203,345106,218138,349212,349215,345118,218143,349209,345112,345115,349221,345124,345127,345121,218148,349218,345133,218153,349230,218158,349224,349227,345130,218163,349236,349239,345142,349233,345136,345139,349245,345148,345151,218168,345145,218173,349242,345157,218178,349254,218183,349248,349251,345154,349260,349263,345166,349257,345160,345163,218188,349269,345172,218193,345175,345169,218198,349266,218203,345181,349278,349272,349275,345178,349284,349287,218208,345190,349281,345184,218213,345187,349293,218218,345196,345199,218223,345193,349290,345205,349302,349296,349299,218228,345202,349308,218233,349311,345214,349305,218238,345208,345211,218243,349317,345220,345223,345217,349314,345229,218248,349326,349320,218253,349323,345226,218258,349332,349335,345238,218263,349329,345232,345235,349341,345244,345247,345241,218268,349338,345253,218273,349350,218278,349344,349347,345250,218283,349356,349359,345262,349353,345256,345259,349365,345268,345271,218288,345265,218293,349362,345277,218298,349374,218303,349368,349371,345274,349380,349383,345286,349377,345280,345283,218308,349389,345292,218313,345295,345289,218318,349386,218323,345301,349398,349392,349395,345298,349404,349407,218328,345310,349401,345304,218333,345307,349413,218338,345316,345319,218343,345313,349410,345325,349422,349416,349419,218348,345322,349428,218353,349431,345334,349425,218358,345328,345331,218363,349437,345340,345343,345337,349434,345349,218368,349446,349440,218373,349443,345346,218378,349452,349455,345358,218383,349449,345352,345355,349461,345364,345367,345361,218388,349458,345373,218393,349470,218398,349464,349467,345370,218403,349476,349479,345382,349473,345376,345379,349485,345388,345391,218408,345385,218413,349482,345397,218418,349494,218423,349488,349491,345394,349500,349503,345406,349497,345400,345403,218428,349509,345412,218433,345415,345409,218438,349506,218443,345421,349518,349512,349515,345418,349524,349527,218448,345430,349521,345424,218453,345427,349533,218458,345436,345439,218463,345433,349530,345445,349542,349536,349539,218468,345442,349548,218473,349551,345454,349545,218478,345448,345451,218483,349557,345460,345463,345457,349554,345469,218488,349566,349560,218493,349563,345466,218498,349572,349575,345478,218503,349569,345472,345475,349581,345484,345487,345481,218508,349578,345493,218513,349590,218518,349584,349587,345490,218523,349596,349599,345502,349593,345496,345499,349605,345508,345511,218528,345505,218533,349602,345517,218538,349614,218543,349608,349611,345514,349620,349623,345526,349617,345520,345523,218548,349629,345532,218553,345535,345529,218558,349626,218563,345541,349638,349632,349635,345538,349644,349647,218568,345550,349641,345544,218573,345547,349653,218578,345556,345559,218583,345553,349650,345565,349662,349656,349659,218588,345562,349668,218593,349671,345574,349665,218598,345568,345571,218603,349677,345580,345583,345577,349674,345589,218608,349686,349680,218613,349683,345586,218618,349692,349695,345598,218623,349689,345592,345595,349701,345604,345607,345601,218628,349698,345613,218633,349710,218638,349704,349707,345610,218643,349716,349719,345622,349713,345616,345619,349725,345628,345631,218648,345625,218653,349722,345637,218658,349734,218663,349728,349731,345634,349740,349743,345646,349737,345640,345643,218668,349749,345652,218673,345655,345649,218678,349746,218683,345661,349758,349752,349755,345658,349764,349767,218688,345670,349761,345664,218693,345667,349773,218698,345676,345679,218703,345673,349770,345685,349782,349776,349779,218708,345682,349788,218713,349791,345694,349785,218718,345688,345691,218723,349797,345700,345703,345697,349794,345709,218728,349806,349800,218733,349803,345706,218738,349812,349815,345718,218743,349809,345712,345715,349821,345724,345727,345721,218748,349818,345733,218753,349830,218758,349824,349827,345730,218763,349836,349839,345742,349833,345736,345739,349845,345748,345751,218768,345745,218773,349842,345757,218778,349854,218783,349848,349851,345754,349860,349863,345766,349857,345760,345763,218788,349869,345772,218793,345775,345769,218798,349866,218803,345781,349878,349872,349875,345778,349884,349887,218808,345790,349881,345784,218813,345787,349893,218818,345796,345799,218823,345793,349890,345805,349896,218828,345802,218833,345814,218838,345808,345811,218843,345820,345823,345817,345829,218848,218853,345826,218858,345838,218863,345832,345835,345844,345847,345841,218868,345853,218873,218878,345850,218883,345862,345856,345859,345868,345871,218888,345865,218893,345877,218898,218903,345874,345886,345880,345883,218908,345892,218913,345895,349991,345889,218918,218923,345901,345898,218928,345910,345904,218933,345907,218938,345916,345919,218943,345913,345925,218948,345922,218953,345934,218958,345928,345931,218963,345940,345943,345937,345949,218968,218973,345946,218978,345958,218983,345952,345955,345964,345967,345961,218988,345973,218993,218998,345970,219003,345982,345976,345979,345988,345991,219008,345985,219013,345997,219018,219023,345994,346006,346000,346003,219028,346012,219033,346015,346009,219038,219043,346021,346018,219048,346030,346024,219053,346027,219058,346036,346039,219063,346033,346045,219068,346042,219073,346054,219078,346048,346051,219083,346060,346063,346057,346069,219088,219093,346066,219098,346078,219103,346072,346075,346084,346087,346081,219108,346093,219113,219118,346090,219123,346102,346096,346099,346108,346111,219128,346105,219133,346117,219138,219143,346114,346126,346120,346123,219148,346132,219153,346135,346129,219158,219163,346141,346138,219168,346150,346144,219173,346147,219178,346156,346159,219183,346153,346165,219188,346162,219193,346174,219198,346168,346171,219203,346180,346183,346177,346189,219208,219213,346186,219218,346198,219223,346192,346195,346204,346207,346201,219228,346213,219233,219238,346210,219243,346222,346216,346219,346228,346231,219248,346225,219253,346237,219258,219263,346234,346246,346240,346243,219268,346252,219273,346255,346249,219278,219283,346261,346258,219288,346270,346264,219293,346267,219298,346276,346279,219303,346273,346285,219308,346282,219313,346294,219318,346288,346291,219323,346300,346303,346297,346309,219328,219333,346306,219338,346318,219343,346312,346315,346324,346327,346321,219348,346333,219353,219358,346330,219363,350439,346342,346336,346339,346348,346351,219368,346345,219373,346357,219378,219383,346354,346366,346360,346363,219388,346372,219393,346375,346369,219398,219403,346381,346378,219408,346390,346384,219413,346387,219418,346396,346399,219423,346393,346405,219428,346402,219433,346414,219438,346408,346411,219443,346420,346423,346417,346429,219448,219453,346426,219458,346438,219463,346432,346435,346444,346447,346441,219468,346453,219473,219478,346450,219483,346462,346456,346459,346468,346471,219488,346465,219493,346477,219498,219503,346474,346486,346480,346483,219508,346492,219513,346495,346489,219518,219523,346501,346498,219528,346510,346504,219533,346507,219538,346516,346519,219543,346513,346525,219548,346522,219553,346534,219558,346528,346531,219563,346540,346543,346537,346549,219568,219573,346546,219578,346558,219583,346552,346555,346564,346567,346561,219588,346573,219593,219598,346570,219603,346582,346576,346579,346588,346591,219608,346585,219613,346597,219618,219623,346594,346606,346600,346603,219628,346612,219633,346615,346609,219638,219643,346621,346618,219648,346630,346624,219653,346627,219658,346636,346639,219663,346633,346645,219668,346642,219673,346654,219678,346648,346651,219683,346660,346663,346657,346669,219688,219693,346666,219698,346678,219703,346672,346675,346684,346687,346681,219708,346693,219713,219718,346690,219723,346702,346696,346699,346708,346711,219728,346705,350800,219733,346717,219738,219743,346714,346725,346720,219748,219753,219758,219763,219768,219773,219778,219783,219788,219793,219798,346771,219803,219808,219813,219818,342703,219823,342709,219828,342706,219833,342718,219838,342712,342715,219843,342724,342727,342721,342733,219848,219853,342730,219858,342742,219863,342736,342739,342748,342751,342745,219868,342757,219873,219878,342754,346850,219883,342766,342760,342763,342772,342775,219888,342769,219893,342781,219898,219903,342778,342790,342784,342787,219908,342796,219913,342799,342793,219918,219923,342805,342802,219928,342814,342808,219933,342811,219938,342820,342823,219943,342817,342829,346923,219948,342826,219953,342838,219958,342832,342835,219963,342844,342847,342841,342853,219968,219973,342850,219978,342862,219983,342856,342859,342868,342871,342865,219988,342877,219993,219998,342874,220003,342886,342880,342883,342892,342895,220008,342889,220013,342901,220018,346998,220023,342898,342910,342904,342907,351099,220028,342916,220033,342919,342913,220038,220043,342925,342922,220048,342934,342928,220053,342931,220058,342940,342943,220063,342937,342949,220068,342946,220073,342958,220078,342952,342955,220083,342964,342967,342961,342973,220088,220093,347067,342970,220098,342982,220103,342976,342979,342988,342991,342985,220108,342997,220113,220118,342994,220123,343006,343000,343003,343012,343015,220128,343009,220133,343021,220138,220143,343018,351221,343030,343024,343027,220148,343036,220153,343039,351230,343033,220158,351224,351227,220163,343045,351236,351239,351233,343042,351245,220168,343054,343048,220173,343051,347146,351242,220178,343060,343063,351254,220183,343057,351248,351251,343069,351260,351263,351257,220188,343066,351269,220193,343078,220198,343072,343075,351266,220203,343084,343087,351278,343081,351272,351275,343093,351284,351287,220208,351281,220213,343090,351293,220218,343102,220223,343096,343099,351290,343108,343111,351302,343105,351296,351299,220228,343117,351308,220233,351311,351305,220238,343114,220243,351317,343126,343120,343123,351314,343132,343135,220248,343129,351320,220253,343141,220258,220263,347233,343138,343150,343144,343147,220268,343156,220273,343159,343153,220278,220283,343165,343162,220288,343174,343168,220293,343171,220298,343180,343183,220303,343177,343189,220308,343186,220313,343198,220318,343192,343195,220323,343204,343207,343201,343213,220328,220333,347307,343210,220338,343222,220343,343216,343219,343228,343231,343225,220348,343237,220353,220358,343234,220363,343246,343240,343243,343252,343255,220368,343249,220373,343261,220378,220383,343258,343270,343264,343267,220388,343276,220393,343279,343273,220398,220403,343285,343282,220408,343294,347385,343288,220413,343291,220418,343300,343303,220423,343297,343309,220428,343306,220433,343318,220438,343312,343315,220443,343324,343327,343321,343333,220448,220453,343330,220458,343342,220463,343336,343339,343348,343351,343345,220468,343357,347453,220473,220478,343354,220483,343366,343360,343363,343372,343375,220488,343369,220493,343381,220498,220503,343378,343390,343384,343387,220508,343396,220513,343399,343393,220518,220523,343405,347497,343402,220528,343414,343408,220533,343411,220538,343420,343423,220543,343417,343429,220548,343426,220553,343438,220558,343432,343435,220563,343444,343447,343441,343453,347551,220568,220573,343450,220578,343462,220583,343456,343459,343468,343471,343465,220588,343477,220593,220598,343474,220603,343486,343480,343483,343492,343495,220608,343489,220613,343501,220618,220623,343498,343510,343504,343507,220628,343516,220633,343519,343513,220638,220643,343525,343522,347618,220648,343534,343528,220653,343531,220658,343540,343543,220663,343537,343549,220668,343546,347652,220673,343558,220678,343552,343555,220683,343564,343567,343561,343573,220688,220693,343570,220698,343582,220703,343576,343579,343588,343591,343585,220708,343597,220713,220718,347691,343594,220723,343606,343600,343603,343612,343615,220728,343609,220733,343621,220738,220743,343618,343630,343624,343627,220748,343636,220753,343639,343633,220758,347731,220763,343645,343642,220768,343654,343648,220773,343651,220778,343660,343663,220783,343657,343669,220788,343666,220793,343678,220798,343672,343675,220803,343684,343687,343681,343693,220808,220813,347787,343690,220818,343702,220823,343696,343699,343708,343711,343705,220828,343717,220833,220838,343714,220843,343726,343720,343723,343732,343735,220848,343729,220853,343741,220858,220863,343738,347834,343750,343744,343747,220868,343756,220873,343759,343753,220878,220883,343765,343762,220888,343774,343768,220893,343771,220898,343780,343783,220903,343777,343789,347880,220908,343786,220913,343798,220918,343792,343795,220923,343804,343807,343801,343813,220928,220933,343810,220938,343822,220943,343816,343819,343828,343831,343825,220948,343837,347932,220953,220958,343834,220963,343846,343840,343843,343852,343855,220968,343849,220973,343861,220978,220983,343858,343870,343864,343867,220988,343876,220993,343879,343873,220998,221003,343885,343882,221008,343894,343888,221013,343891,221018,343900,343903,221023,343897,343909,221028,343906,348013,221033,343918,221038,343912,343915,221043,343924,343927,343921,343933,221048,221053,343930,221058,343942,221063,343936,343939,343948,343951,343945,221068,343957,221073,221078,343954,221083,343966,343960,343963,343972,343975,221088,343969,221093,343981,221098,348079,221103,343978,343990,343984,343987,221108,343996,221113,343999,343993,221118,221123,344005,348102,344002,348108,348111,221128,344014,348105,344008,221133,344011,348117,221138,344020,344023,221143,344017,348114,344029,348126,348120,348123,221148,344026,348132,221153,348135,344038,348129,221158,344032,344035,221163,348141,344044,344047,344041,348138,344053,221168,348150,348144,348147,344050,348156,348159,344062,348153,344056,344059]}
2024-06-20 16:52:46,109 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [348165, 344068, 344071, 344065, 348162, 344077, 348174, 348168, 348171, 344074, 348180, 348183, 344086, 348177, 344080, 344083, 348189, 344092, 344095, 344089, 348186, 344101, 348198, 348192, 348195, 344098, 348204, 348207, 344110, 348201, 344104, 344107, 348213, 344116, 344119, 344113, 348210, 344125, 348222, 348216, 348219, 344122, 348228, 348231, 344134, 348225, 344128, 344131, 348237, 344140, 344143, 344137, 348234, 344149, 348246, 348240, 348243, 344146, 348252, 348255, 344158, 348249, 344152, 344155, 348261, 344164, 344167, 344161, 348258, 344173, 348270, 348264, 348267, 344170, 348276, 348279, 344182, 348273, 344176, 344179, 348285, 344188, 344191, 344185, 348282, 344197, 348294, 348288, 348291, 344194, 348300, 348303, 344206, 348297, 344200, 344203, 348309, 344212, 344215, 344209, 348306, 344221, 348318, 348312, 348315, 344218, 348324, 348327, 344230, 348321, 344224, 344227, 348333, 344236, 344239, 344233, 348330, 344245, 348342, 348336, 348339, 344242, 348348, 217273, 348351, 344254, 348345, 217278, 344248, 344251, 217283, 348357, 344260, 344263, 344257, 348354, 344269, 217288, 348366, 348360, 217293, 348363, 344266, 217298, 348372, 348375, 344278, 217303, 348369, 344272, 344275, 348381, 344284, 344287, 344281, 217308, 348378, 344293, 217313, 348390, 217318, 348384, 348387, 344290, 217323, 348396, 348399, 344302, 348393, 344296, 344299, 348405, 344308, 344311, 217328, 344305, 217333, 348402, 344317, 217338, 348414, 217343, 348408, 348411, 344314, 348420, 348423, 344326, 348417, 344320, 344323, 217348, 348429, 344332, 217353, 344335, 344329, 217358, 348426, 217363, 344341, 348438, 348432, 348435, 344338, 348444, 348447, 217368, 344350, 348441, 344344, 217373, 344347, 348453, 217378, 344356, 344359, 217383, 344353, 348450, 344365, 348462, 348456, 348459, 217388, 344362, 348468, 217393, 348471, 344374, 348465, 217398, 344368, 344371, 217403, 348477, 344380, 344383, 344377, 348474, 344389, 217408, 348486, 348480, 217413, 348483, 344386, 217418, 348492, 348495, 344398, 217423, 348489, 344392, 344395, 348501, 344404, 344407, 344401, 217428, 348498, 344413, 217433, 348510, 217438, 348504, 348507, 344410, 217443, 348516, 348519, 344422, 348513, 344416, 344419, 348525, 344428, 344431, 217448, 344425, 217453, 348522, 344437, 217458, 348534, 217463, 348528, 348531, 344434, 348540, 348543, 344446, 348537, 344440, 344443, 217468, 348549, 344452, 217473, 344455, 344449, 217478, 348546, 217483, 344461, 348558, 348552, 348555, 344458, 348564, 348567, 217488, 344470, 348561, 344464, 217493, 344467, 348573, 217498, 344476, 344479, 217503, 344473, 348570, 344485, 348582, 348576, 348579, 217508, 344482, 348588, 217513, 348591, 344494, 348585, 217518, 344488, 344491, 217523, 348597, 344500, 344503, 344497, 348594, 344509, 217528, 348606, 348600, 217533, 348603, 344506, 217538, 348612, 348615, 344518, 217543, 348609, 344512, 344515, 348621, 344524, 344527, 344521, 217548, 348618, 344533, 217553, 348630, 217558, 348624, 348627, 344530, 217563, 348636, 348639, 344542, 348633, 344536, 344539, 348645, 344548, 344551, 217568, 344545, 217573, 348642, 344557, 217578, 348654, 217583, 348648, 348651, 344554, 348660, 348663, 344566, 348657, 344560, 344563, 217588, 348669, 344572, 217593, 344575, 344569, 217598, 348666, 217603, 344581, 348678, 348672, 348675, 344578, 348684, 348687, 217608, 344590, 348681, 344584, 217613, 344587, 348693, 217618, 344596, 344599, 217623, 344593, 348690, 344605, 348702, 348696, 348699, 217628, 344602, 348708, 217633, 348711, 344614, 348705, 217638, 344608, 344611, 217643, 348717, 344620, 344623, 344617, 348714, 344629, 217648, 348726, 348720, 217653, 348723, 344626, 217658, 348732, 348735, 344638, 217663, 348729, 344632, 344635, 348741, 344644, 344647, 344641, 217668, 348738, 344653, 217673, 348750, 217678, 348744, 348747, 344650, 217683, 348756, 348759, 344662, 348753, 344656, 344659, 348765, 344668, 344671, 217688, 344665, 217693, 348762, 344677, 217698, 348774, 217703, 348768, 348771, 344674, 348780, 348783, 344686, 348777, 344680, 344683, 217708, 348789, 344692, 217713, 344695, 344689, 217718, 348786, 217723, 344701, 348798, 348792, 348795, 344698, 348804, 348807, 217728, 344710, 348801, 344704, 217733, 344707, 348813, 217738, 344716, 344719, 217743, 344713, 348810, 344725, 348822, 348816, 348819, 217748, 344722, 348828, 217753, 348831, 344734, 348825, 217758, 344728, 344731, 217763, 348837, 344740, 344743, 344737, 348834, 344749, 217768, 348846, 348840, 217773, 348843, 344746, 217778, 348852, 348855, 344758, 217783, 348849, 344752, 344755, 348861, 344764, 344767, 344761, 217788, 348858, 344773, 217793, 348870, 217798, 348864, 348867, 344770, 217803, 348876, 348879, 344782, 348873, 344776, 344779, 348885, 344788, 344791, 217808, 344785, 217813, 348882, 344797, 217818, 348894, 217823, 348888, 348891, 344794, 348900, 348903, 344806, 348897, 344800, 344803, 217828, 348909, 344812, 217833, 344815, 344809, 217838, 348906, 217843, 344821, 348918, 348912, 348915, 344818, 348924, 348927, 217848, 344830, 348921, 344824, 217853, 344827, 348933, 217858, 344836, 344839, 217863, 344833, 348930, 344845, 348942, 348936, 348939, 217868, 344842, 348948, 217873, 348951, 344854, 348945, 217878, 344848, 344851, 217883, 348957, 344860, 344863, 344857, 348954, 344869, 217888, 348966, 348960, 217893, 348963, 344866, 217898, 348972, 348975, 344878, 217903, 348969, 344872, 344875, 348981, 344884, 344887, 344881, 217908, 348978, 344893, 217913, 348990, 217918, 348984, 348987, 344890, 217923, 348996, 348999, 344902, 348993, 344896, 344899, 349005, 344908, 344911, 217928, 344905, 217933, 349002, 344917, 217938, 349014, 217943, 349008, 349011, 344914, 349020, 349023, 344926, 349017, 344920, 344923, 217948, 349029, 344932, 217953, 344935, 344929, 217958, 349026, 217963, 344941, 349038, 349032, 349035, 344938, 349044, 349047, 217968, 344950, 349041, 344944, 217973, 344947, 349053, 217978, 344956, 344959, 217983, 344953, 349050, 344965, 349062, 349056, 349059, 217988, 344962, 349068, 217993, 349071, 344974, 349065, 217998, 344968, 344971, 218003, 349077, 344980, 344983, 344977, 349074, 344989, 218008, 349086, 349080, 218013, 349083, 344986, 218018, 349092, 349095, 344998, 218023, 349089, 344992, 344995, 349101, 345004, 345007, 345001, 218028, 349098, 345013, 218033, 349110, 218038, 349104, 349107, 345010, 218043, 349116, 349119, 345022, 349113, 345016, 345019, 349125, 345028, 345031, 218048, 345025, 218053, 349122, 345037, 218058, 349134, 218063, 349128, 349131, 345034, 349140, 349143, 345046, 349137, 345040, 345043, 218068, 349149, 345052, 218073, 345055, 345049, 218078, 349146, 218083, 345061, 349158, 349152, 349155, 345058, 349164, 349167, 218088, 345070, 349161, 345064, 218093, 345067, 349173, 218098, 345076, 345079, 218103, 345073, 349170, 345085, 349182, 349176, 349179, 218108, 345082, 349188, 218113, 349191, 345094, 349185, 218118, 345088, 345091, 218123, 349197, 345100, 345103, 345097, 349194, 345109, 218128, 349206, 349200, 218133, 349203, 345106, 218138, 349212, 349215, 345118, 218143, 349209, 345112, 345115, 349221, 345124, 345127, 345121, 218148, 349218, 345133, 218153, 349230, 218158, 349224, 349227, 345130, 218163, 349236, 349239, 345142, 349233, 345136, 345139, 349245, 345148, 345151, 218168, 345145, 218173, 349242, 345157, 218178, 349254, 218183, 349248, 349251, 345154, 349260, 349263, 345166, 349257, 345160, 345163, 218188, 349269, 345172, 218193, 345175, 345169, 218198, 349266, 218203, 345181, 349278, 349272, 349275, 345178, 349284, 349287, 218208, 345190, 349281, 345184, 218213, 345187, 349293, 218218, 345196, 345199, 218223, 345193, 349290, 345205, 349302, 349296, 349299, 218228, 345202, 349308, 218233, 349311, 345214, 349305, 218238, 345208, 345211, 218243, 349317, 345220, 345223, 345217, 349314, 345229, 218248, 349326, 349320, 218253, 349323, 345226, 218258, 349332, 349335, 345238, 218263, 349329, 345232, 345235, 349341, 345244, 345247, 345241, 218268, 349338, 345253, 218273, 349350, 218278, 349344, 349347, 345250, 218283, 349356, 349359, 345262, 349353, 345256, 345259, 349365, 345268, 345271, 218288, 345265, 218293, 349362, 345277, 218298, 349374, 218303, 349368, 349371, 345274, 349380, 349383, 345286, 349377, 345280, 345283, 218308, 349389, 345292, 218313, 345295, 345289, 218318, 349386, 218323, 345301, 349398, 349392, 349395, 345298, 349404, 349407, 218328, 345310, 349401, 345304, 218333, 345307, 349413, 218338, 345316, 345319, 218343, 345313, 349410, 345325, 349422, 349416, 349419, 218348, 345322, 349428, 218353, 349431, 345334, 349425, 218358, 345328, 345331, 218363, 349437, 345340, 345343, 345337, 349434, 345349, 218368, 349446, 349440, 218373, 349443, 345346, 218378, 349452, 349455, 345358, 218383, 349449, 345352, 345355, 349461, 345364, 345367, 345361, 218388, 349458, 345373, 218393, 349470, 218398, 349464, 349467, 345370, 218403, 349476, 349479, 345382, 349473, 345376, 345379, 349485, 345388, 345391, 218408, 345385, 218413, 349482, 345397, 218418, 349494, 218423, 349488, 349491, 345394, 349500, 349503, 345406, 349497, 345400, 345403, 218428, 349509, 345412, 218433, 345415, 345409, 218438, 349506, 218443, 345421, 349518, 349512, 349515, 345418, 349524, 349527, 218448, 345430, 349521, 345424, 218453, 345427, 349533, 218458, 345436, 345439, 218463, 345433, 349530, 345445, 349542, 349536, 349539, 218468, 345442, 349548, 218473, 349551, 345454, 349545, 218478, 345448, 345451, 218483, 349557, 345460, 345463, 345457, 349554, 345469, 218488, 349566, 349560, 218493, 349563, 345466, 218498, 349572, 349575, 345478, 218503, 349569, 345472, 345475, 349581, 345484, 345487, 345481, 218508, 349578, 345493, 218513, 349590, 218518, 349584, 349587, 345490, 218523, 349596, 349599, 345502, 349593, 345496, 345499, 349605, 345508, 345511, 218528, 345505, 218533, 349602, 345517, 218538, 349614, 218543, 349608, 349611, 345514, 349620, 349623, 345526, 349617, 345520, 345523, 218548, 349629, 345532, 218553, 345535, 345529, 218558, 349626, 218563, 345541, 349638, 349632, 349635, 345538, 349644, 349647, 218568, 345550, 349641, 345544, 218573, 345547, 349653, 218578, 345556, 345559, 218583, 345553, 349650, 345565, 349662, 349656, 349659, 218588, 345562, 349668, 218593, 349671, 345574, 349665, 218598, 345568, 345571, 218603, 349677, 345580, 345583, 345577, 349674, 345589, 218608, 349686, 349680, 218613, 349683, 345586, 218618, 349692, 349695, 345598, 218623, 349689, 345592, 345595, 349701, 345604, 345607, 345601, 218628, 349698, 345613, 218633, 349710, 218638, 349704, 349707, 345610, 218643, 349716, 349719, 345622, 349713, 345616, 345619, 349725, 345628, 345631, 218648, 345625, 218653, 349722, 345637, 218658, 349734, 218663, 349728, 349731, 345634, 349740, 349743, 345646, 349737, 345640, 345643, 218668, 349749, 345652, 218673, 345655, 345649, 218678, 349746, 218683, 345661, 349758, 349752, 349755, 345658, 349764, 349767, 218688, 345670, 349761, 345664, 218693, 345667, 349773, 218698, 345676, 345679, 218703, 345673, 349770, 345685, 349782, 349776, 349779, 218708, 345682, 349788, 218713, 349791, 345694, 349785, 218718, 345688, 345691, 218723, 349797, 345700, 345703, 345697, 349794, 345709, 218728, 349806, 349800, 218733, 349803, 345706, 218738, 349812, 349815, 345718, 218743, 349809, 345712, 345715, 349821, 345724, 345727, 345721, 218748, 349818, 345733, 218753, 349830, 218758, 349824, 349827, 345730, 218763, 349836, 349839, 345742, 349833, 345736, 345739, 349845, 345748, 345751, 218768, 345745, 218773, 349842, 345757, 218778, 349854, 218783, 349848, 349851, 345754, 349860, 349863, 345766, 349857, 345760, 345763, 218788, 349869, 345772, 218793, 345775, 345769, 218798, 349866, 218803, 345781, 349878, 349872, 349875, 345778, 349884, 349887, 218808, 345790, 349881, 345784, 218813, 345787, 349893, 218818, 345796, 345799, 218823, 345793, 349890, 345805, 349896, 218828, 345802, 218833, 345814, 218838, 345808, 345811, 218843, 345820, 345823, 345817, 345829, 218848, 218853, 345826, 218858, 345838, 218863, 345832, 345835, 345844, 345847, 345841, 218868, 345853, 218873, 218878, 345850, 218883, 345862, 345856, 345859, 345868, 345871, 218888, 345865, 218893, 345877, 218898, 218903, 345874, 345886, 345880, 345883, 218908, 345892, 218913, 345895, 349991, 345889, 218918, 218923, 345901, 345898, 218928, 345910, 345904, 218933, 345907, 218938, 345916, 345919, 218943, 345913, 345925, 218948, 345922, 218953, 345934, 218958, 345928, 345931, 218963, 345940, 345943, 345937, 345949, 218968, 218973, 345946, 218978, 345958, 218983, 345952, 345955, 345964, 345967, 345961, 218988, 345973, 218993, 218998, 345970, 219003, 345982, 345976, 345979, 345988, 345991, 219008, 345985, 219013, 345997, 219018, 219023, 345994, 346006, 346000, 346003, 219028, 346012, 219033, 346015, 346009, 219038, 219043, 346021, 346018, 219048, 346030, 346024, 219053, 346027, 219058, 346036, 346039, 219063, 346033, 346045, 219068, 346042, 219073, 346054, 219078, 346048, 346051, 219083, 346060, 346063, 346057, 346069, 219088, 219093, 346066, 219098, 346078, 219103, 346072, 346075, 346084, 346087, 346081, 219108, 346093, 219113, 219118, 346090, 219123, 346102, 346096, 346099, 346108, 346111, 219128, 346105, 219133, 346117, 219138, 219143, 346114, 346126, 346120, 346123, 219148, 346132, 219153, 346135, 346129, 219158, 219163, 346141, 346138, 219168, 346150, 346144, 219173, 346147, 219178, 346156, 346159, 219183, 346153, 346165, 219188, 346162, 219193, 346174, 219198, 346168, 346171, 219203, 346180, 346183, 346177, 346189, 219208, 219213, 346186, 219218, 346198, 219223, 346192, 346195, 346204, 346207, 346201, 219228, 346213, 219233, 219238, 346210, 219243, 346222, 346216, 346219, 346228, 346231, 219248, 346225, 219253, 346237, 219258, 219263, 346234, 346246, 346240, 346243, 219268, 346252, 219273, 346255, 346249, 219278, 219283, 346261, 346258, 219288, 346270, 346264, 219293, 346267, 219298, 346276, 346279, 219303, 346273, 346285, 219308, 346282, 219313, 346294, 219318, 346288, 346291, 219323, 346300, 346303, 346297, 346309, 219328, 219333, 346306, 219338, 346318, 219343, 346312, 346315, 346324, 346327, 346321, 219348, 346333, 219353, 219358, 346330, 219363, 350439, 346342, 346336, 346339, 346348, 346351, 219368, 346345, 219373, 346357, 219378, 219383, 346354, 346366, 346360, 346363, 219388, 346372, 219393, 346375, 346369, 219398, 219403, 346381, 346378, 219408, 346390, 346384, 219413, 346387, 219418, 346396, 346399, 219423, 346393, 346405, 219428, 346402, 219433, 346414, 219438, 346408, 346411, 219443, 346420, 346423, 346417, 346429, 219448, 219453, 346426, 219458, 346438, 219463, 346432, 346435, 346444, 346447, 346441, 219468, 346453, 219473, 219478, 346450, 219483, 346462, 346456, 346459, 346468, 346471, 219488, 346465, 219493, 346477, 219498, 219503, 346474, 346486, 346480, 346483, 219508, 346492, 219513, 346495, 346489, 219518, 219523, 346501, 346498, 219528, 346510, 346504, 219533, 346507, 219538, 346516, 346519, 219543, 346513, 346525, 219548, 346522, 219553, 346534, 219558, 346528, 346531, 219563, 346540, 346543, 346537, 346549, 219568, 219573, 346546, 219578, 346558, 219583, 346552, 346555, 346564, 346567, 346561, 219588, 346573, 219593, 219598, 346570, 219603, 346582, 346576, 346579, 346588, 346591, 219608, 346585, 219613, 346597, 219618, 219623, 346594, 346606, 346600, 346603, 219628, 346612, 219633, 346615, 346609, 219638, 219643, 346621, 346618, 219648, 346630, 346624, 219653, 346627, 219658, 346636, 346639, 219663, 346633, 346645, 219668, 346642, 219673, 346654, 219678, 346648, 346651, 219683, 346660, 346663, 346657, 346669, 219688, 219693, 346666, 219698, 346678, 219703, 346672, 346675, 346684, 346687, 346681, 219708, 346693, 219713, 219718, 346690, 219723, 346702, 346696, 346699, 346708, 346711, 219728, 346705, 350800, 219733, 346717, 219738, 219743, 346714, 346725, 346720, 219748, 219753, 219758, 219763, 219768, 219773, 219778, 219783, 219788, 219793, 219798, 346771, 219803, 219808, 219813, 219818, 342703, 219823, 342709, 219828, 342706, 219833, 342718, 219838, 342712, 342715, 219843, 342724, 342727, 342721, 342733, 219848, 219853, 342730, 219858, 342742, 219863, 342736, 342739, 342748, 342751, 342745, 219868, 342757, 219873, 219878, 342754, 346850, 219883, 342766, 342760, 342763, 342772, 342775, 219888, 342769, 219893, 342781, 219898, 219903, 342778, 342790, 342784, 342787, 219908, 342796, 219913, 342799, 342793, 219918, 219923, 342805, 342802, 219928, 342814, 342808, 219933, 342811, 219938, 342820, 342823, 219943, 342817, 342829, 346923, 219948, 342826, 219953, 342838, 219958, 342832, 342835, 219963, 342844, 342847, 342841, 342853, 219968, 219973, 342850, 219978, 342862, 219983, 342856, 342859, 342868, 342871, 342865, 219988, 342877, 219993, 219998, 342874, 220003, 342886, 342880, 342883, 342892, 342895, 220008, 342889, 220013, 342901, 220018, 346998, 220023, 342898, 342910, 342904, 342907, 351099, 220028, 342916, 220033, 342919, 342913, 220038, 220043, 342925, 342922, 220048, 342934, 342928, 220053, 342931, 220058, 342940, 342943, 220063, 342937, 342949, 220068, 342946, 220073, 342958, 220078, 342952, 342955, 220083, 342964, 342967, 342961, 342973, 220088, 220093, 347067, 342970, 220098, 342982, 220103, 342976, 342979, 342988, 342991, 342985, 220108, 342997, 220113, 220118, 342994, 220123, 343006, 343000, 343003, 343012, 343015, 220128, 343009, 220133, 343021, 220138, 220143, 343018, 351221, 343030, 343024, 343027, 220148, 343036, 220153, 343039, 351230, 343033, 220158, 351224, 351227, 220163, 343045, 351236, 351239, 351233, 343042, 351245, 220168, 343054, 343048, 220173, 343051, 347146, 351242, 220178, 343060, 343063, 351254, 220183, 343057, 351248, 351251, 343069, 351260, 351263, 351257, 220188, 343066, 351269, 220193, 343078, 220198, 343072, 343075, 351266, 220203, 343084, 343087, 351278, 343081, 351272, 351275, 343093, 351284, 351287, 220208, 351281, 220213, 343090, 351293, 220218, 343102, 220223, 343096, 343099, 351290, 343108, 343111, 351302, 343105, 351296, 351299, 220228, 343117, 351308, 220233, 351311, 351305, 220238, 343114, 220243, 351317, 343126, 343120, 343123, 351314, 343132, 343135, 220248, 343129, 351320, 220253, 343141, 220258, 220263, 347233, 343138, 343150, 343144, 343147, 220268, 343156, 220273, 343159, 343153, 220278, 220283, 343165, 343162, 220288, 343174, 343168, 220293, 343171, 220298, 343180, 343183, 220303, 343177, 343189, 220308, 343186, 220313, 343198, 220318, 343192, 343195, 220323, 343204, 343207, 343201, 343213, 220328, 220333, 347307, 343210, 220338, 343222, 220343, 343216, 343219, 343228, 343231, 343225, 220348, 343237, 220353, 220358, 343234, 220363, 343246, 343240, 343243, 343252, 343255, 220368, 343249, 220373, 343261, 220378, 220383, 343258, 343270, 343264, 343267, 220388, 343276, 220393, 343279, 343273, 220398, 220403, 343285, 343282, 220408, 343294, 347385, 343288, 220413, 343291, 220418, 343300, 343303, 220423, 343297, 343309, 220428, 343306, 220433, 343318, 220438, 343312, 343315, 220443, 343324, 343327, 343321, 343333, 220448, 220453, 343330, 220458, 343342, 220463, 343336, 343339, 343348, 343351, 343345, 220468, 343357, 347453, 220473, 220478, 343354, 220483, 343366, 343360, 343363, 343372, 343375, 220488, 343369, 220493, 343381, 220498, 220503, 343378, 343390, 343384, 343387, 220508, 343396, 220513, 343399, 343393, 220518, 220523, 343405, 347497, 343402, 220528, 343414, 343408, 220533, 343411, 220538, 343420, 343423, 220543, 343417, 343429, 220548, 343426, 220553, 343438, 220558, 343432, 343435, 220563, 343444, 343447, 343441, 343453, 347551, 220568, 220573, 343450, 220578, 343462, 220583, 343456, 343459, 343468, 343471, 343465, 220588, 343477, 220593, 220598, 343474, 220603, 343486, 343480, 343483, 343492, 343495, 220608, 343489, 220613, 343501, 220618, 220623, 343498, 343510, 343504, 343507, 220628, 343516, 220633, 343519, 343513, 220638, 220643, 343525, 343522, 347618, 220648, 343534, 343528, 220653, 343531, 220658, 343540, 343543, 220663, 343537, 343549, 220668, 343546, 347652, 220673, 343558, 220678, 343552, 343555, 220683, 343564, 343567, 343561, 343573, 220688, 220693, 343570, 220698, 343582, 220703, 343576, 343579, 343588, 343591, 343585, 220708, 343597, 220713, 220718, 347691, 343594, 220723, 343606, 343600, 343603, 343612, 343615, 220728, 343609, 220733, 343621, 220738, 220743, 343618, 343630, 343624, 343627, 220748, 343636, 220753, 343639, 343633, 220758, 347731, 220763, 343645, 343642, 220768, 343654, 343648, 220773, 343651, 220778, 343660, 343663, 220783, 343657, 343669, 220788, 343666, 220793, 343678, 220798, 343672, 343675, 220803, 343684, 343687, 343681, 343693, 220808, 220813, 347787, 343690, 220818, 343702, 220823, 343696, 343699, 343708, 343711, 343705, 220828, 343717, 220833, 220838, 343714, 220843, 343726, 343720, 343723, 343732, 343735, 220848, 343729, 220853, 343741, 220858, 220863, 343738, 347834, 343750, 343744, 343747, 220868, 343756, 220873, 343759, 343753, 220878, 220883, 343765, 343762, 220888, 343774, 343768, 220893, 343771, 220898, 343780, 343783, 220903, 343777, 343789, 347880, 220908, 343786, 220913, 343798, 220918, 343792, 343795, 220923, 343804, 343807, 343801, 343813, 220928, 220933, 343810, 220938, 343822, 220943, 343816, 343819, 343828, 343831, 343825, 220948, 343837, 347932, 220953, 220958, 343834, 220963, 343846, 343840, 343843, 343852, 343855, 220968, 343849, 220973, 343861, 220978, 220983, 343858, 343870, 343864, 343867, 220988, 343876, 220993, 343879, 343873, 220998, 221003, 343885, 343882, 221008, 343894, 343888, 221013, 343891, 221018, 343900, 343903, 221023, 343897, 343909, 221028, 343906, 348013, 221033, 343918, 221038, 343912, 343915, 221043, 343924, 343927, 343921, 343933, 221048, 221053, 343930, 221058, 343942, 221063, 343936, 343939, 343948, 343951, 343945, 221068, 343957, 221073, 221078, 343954, 221083, 343966, 343960, 343963, 343972, 343975, 221088, 343969, 221093, 343981, 221098, 348079, 221103, 343978, 343990, 343984, 343987, 221108, 343996, 221113, 343999, 343993, 221118, 221123, 344005, 348102, 344002, 348108, 348111, 221128, 344014, 348105, 344008, 221133, 344011, 348117, 221138, 344020, 344023, 221143, 344017, 348114, 344029, 348126, 348120, 348123, 221148, 344026, 348132, 221153, 348135, 344038, 348129, 221158, 344032, 344035, 221163, 348141, 344044, 344047, 344041, 348138, 344053, 221168, 348150, 348144, 348147, 344050, 348156, 348159, 344062, 348153, 344056, 344059]}
2024-06-20 16:52:46,110 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/216957/tables/defaultnode/columns/tissue::nervous system', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,111 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/216957/tables/defaultnode/columns/tissue%3A%3Anervous%20system)
2024-06-20 16:52:46,121 [DEBUG] py4...: ǀǀOK[200], content: {"name":"tissue::nervous system","values":[4.946901,4.921225,4.868777,4.859584,4.856863,4.738342,4.742011,2.839645,4.48026,4.987707,4.614155,4.113006,4.997025,4.87333,4.982262,4.701943,4.488055,4.969018,2.646401,4.489356,4.486954,3.693146,4.694728,3.092781,4.883401,2.407853,4.645012,4.436411,1.090909,2.883327,4.923859,4.674345,4.676601,4.919133,4.947088,4.954939,2.628019,4.536798,4.637089,4.851315,3.966481,4.729046,3.661618,4.995534,4.65039,3.488322,4.723,4.482711,3.41774,4.24024,2.696228,4.378722,2.135853,2.762935,4.953718,4.867309,3.965071,4.763644,2.81358,2.633803,4.303928,2.634754,4.026604,3.482215,4.87282,4.625641,4.278583,4.941517,3.860426,4.73843,4.881094,4.98232,4.755979,4.896967,2.707058,4.727494,4.981807,3.267146,4.718469,3.77209,4.797281,3.639765,4.83206,4.965984,4.540823,4.228006,4.594231,4.93409,4.753768,4.535021,2.495749,4.923089,4.908215,3.510591,2.329788,4.754776,1.570123,1.605685,4.833655,4.318121,4.954009,4.974353,2.6277,4.79821,4.526301,3.26401,4.806556,4.922949,3.580186,4.804279,4.634066,4.919211,2.869425,4.001654,4.648445,1.756547,4.884604,4.496535,4.616928,4.682273,4.078025,4.766233,4.927562,4.708913,4.725708,4.645769,4.896825,4.729447,4.850545,3.146673,2.796666,0.738516,2.580019,3.619339,4.494416,4.895773,3.679446,4.760542,2.22301,4.954059,4.057041,4.034197,4.989486,4.921302,4.535643,3.400836,3.218323,2.263612,4.817278,4.375954,4.791171,4.116736,4.988216,3.792992,4.359192,4.489038,3.525981,4.996237,4.994573,4.691443,3.813422,4.955242,4.956329,4.920127,4.764858,3.838213,4.947494,4.923336,3.319703,4.989694,4.643883,4.946731,4.651584,4.887006,4.473552,2.884658,1.345234,4.914662,4.742646,4.819956,3.647586,4.96011,4.989822,4.956153,2.743528,3.680661,4.802811,4.761733,4.978823,4.788288,3.691662,4.729926,4.663112,4.713115,3.868558,4.427647,2.762339,4.61958,4.946021,2.225596,4.792296,4.84262,4.724203,4.839175,4.700376,4.954448,4.861221,3.884654,4.594563,3.688001,4.600189,4.998239,4.869334,4.573822,4.935632,4.9809,4.951208,4.672457,4.476527,2.421671,3.25512,4.826778,4.908014,4.853822,4.939573,2.409965,4.716705,4.754722,4.725854,4.106718,4.681229,4.164246,4.863063,2.212138,3.249333,4.817319,3.195363,4.9137,4.758909,4.987846,2.181053,4.529686,3.143045,4.537964,4.902734,3.259179,4.949046,4.627518,4.887115,4.592001,4.6038,2.444984,4.847524,3.052772,4.621598,3.883489,4.965151,2.217458,4.449634,4.278843,4.526176,4.975946,4.831665,4.698629,3.586614,3.53686,4.986767,4.949156,4.386881,4.636294,2.476085,4.975821,4.946648,4.80526,4.932883,4.190276,4.674003,2.595211,4.664373,4.691115,4.784991,4.25926,4.745211,4.851091,2.945918,4.991802,4.179016,3.912962,1.090909,4.871889,4.290341,4.987518,1.71736,4.989762,3.280543,4.739309,4.622949,4.701663,4.196926,4.880372,4.957432,2.924374,4.431007,4.954363,4.998772,4.855583,4.822122,4.520395,3.99929,4.425995,4.845278,4.889034,3.128474,4.944275,4.874327,4.968471,4.924529,4.194633,4.857501,3.058544,4.224018,4.721617,4.082058,4.062755,4.962064,4.630521,4.385213,4.554799,4.774182,4.279803,4.665536,4.924071,4.960517,4.876829,2.086291,4.684205,3.225291,5.0,3.597902,3.973161,4.968794,4.97865,2.594612,4.855078,4.812523,4.808595,2.15059,2.804534,3.663947,4.776546,4.581287,4.998623,3.404138,4.927887,3.135413,4.984907,4.879176,2.180189,2.676704,4.295416,4.811216,4.882428,4.951533,4.792815,2.967728,4.84967,4.435491,4.586283,4.916032,4.80657,4.927965,4.834716,4.896404,2.910707,4.298148,4.967308,4.824371,2.791658,4.492722,4.871183,2.300144,4.96036,1.180189,4.951291,3.576077,4.646636,4.938413,4.898418,4.884919,2.966703,4.848171,4.904933,4.951337,4.982185,4.058259,3.437824,4.856417,4.835628,4.706226,2.617378,4.977134,4.747266,4.6217,4.926412,4.665808,4.308862,2.600242,4.853701,4.953489,4.934287,4.749168,4.221715,4.667265,4.604407,4.759211,4.918908,4.721622,4.716016,4.533708,4.458479,4.742489,3.835819,3.055555,4.92641,4.598449,4.940095,4.65189,4.916459,3.952128,4.994965,4.605584,3.310597,4.458512,4.768576,3.710518,4.904689,2.300229,4.911887,3.551929,4.980396,2.898235,4.832677,4.661669,3.432064,2.125518,3.377611,4.771812,4.572573,4.96063,4.976711,4.820918,3.727061,4.584471,4.921568,4.937531,4.499168,3.627529,4.496527,4.858396,4.899901,2.756806,2.918746,4.634967,2.781929,3.672355,2.10015,4.523023,4.644302,3.586303,2.542914,4.756893,4.797751,4.121507,4.926722,3.124939,4.851972,4.762847,4.616647,4.299206,2.651245,4.802018,4.903048,4.741148,2.188509,4.822544,2.674634,3.443715,4.689898,4.888915,4.732894,4.773732,4.995305,4.920622,4.960656,4.814612,2.642079,4.428661,4.475298,3.33117,4.241609,4.803766,4.960726,3.935236,4.982534,2.729535,4.84783,4.847825,4.883918,4.893505,4.891542,2.8854,4.918377,4.479414,4.990403,4.972234,4.635472,4.805019,2.602248,4.778241,4.642713,3.289673,4.987453,2.690146,4.509161,2.703146,4.975838,4.804354,4.719769,4.639459,4.952941,1.322347,4.732036,4.542882,4.63571,4.801435,4.33993,4.630084,4.678236,4.950183,4.455802,4.502686,4.719765,4.828528,2.892651,4.172571,4.484738,4.846743,4.953465,3.996108,3.816294,4.954987,4.751654,4.561149,4.958264,2.654622,4.938455,4.846201,4.854459,4.059138,3.961607,4.66237,1.564627,4.872928,3.316327,4.804984,4.579924,3.142673,4.673143,4.975929,4.155226,4.709472,2.152348,2.438134,3.497534,2.286984,4.936502,1.202204,4.999225,2.915509,3.545267,4.178819,4.728743,2.679488,3.381892,2.979356,4.946854,2.045102,4.874573,4.881749,4.501965,4.677813,4.789086,4.921049,4.677207,4.988853,3.836497,4.995226,2.410004,4.458569,4.913596,4.826253,4.720976,4.791147,4.813831,4.966208,4.8836,4.911063,4.985764,2.813234,4.76363,3.112463,4.993049,4.607027,4.928578,2.925213,4.190921,4.76563,3.048501,4.626141,4.546244,5.0,4.555784,4.685623,4.880276,2.529902,2.671851,4.988931,2.416662,3.609559,4.705556,4.958654,4.952404,4.044734,4.996518,4.970789,4.817774,3.578324,4.929572,4.690951,4.719716,4.431697,4.983854,4.675984,4.764534,4.902869,4.808561,4.945543,2.63124,4.360539,4.991804,4.654423,4.891206,1.919583,4.869189,4.99463,4.972812,4.654566,3.534881,4.701219,4.821786,4.143575,4.943064,2.026804,4.601176,3.579879,4.671197,4.60527,4.640997,3.859646,4.883912,4.656126,3.301204,4.663677,3.707338,4.764908,4.971811,4.101231,3.464376,4.707136,1.589866,1.862623,4.867712,2.976182,4.502343,4.988094,4.567054,3.1377,4.708146,3.257318,4.859953,4.473358,2.373557,4.328242,4.705459,4.714013,3.990266,4.708248,2.647042,4.652044,4.926362,4.235602,4.610806,4.166373,2.962667,4.761732,4.822423,2.694612,4.951294,1.890993,4.678583,3.899554,4.699984,3.252764,4.296985,4.978526,4.873223,2.956343,4.879088,4.776523,4.46369,4.930308,3.907592,4.121346,4.874288,4.996465,3.949159,3.940191,2.464915,4.487954,4.877628,4.778749,4.729967,2.623875,4.879975,3.716627,4.912265,4.905145,4.960268,4.997719,4.922857,4.927656,4.190231,4.868234,4.383852,4.997386,4.640317,4.933342,4.898821,4.923758,3.970027,4.369062,4.834676,4.757675,4.684209,4.71076,4.996632,4.933465,2.879184,4.535027,4.966769,4.943022,1.857432,3.338592,2.345645,4.999397,2.010457,4.741461,4.905883,4.991716,4.97449,3.755291,4.717794,4.813222,4.985454,4.947299,4.60576,1.971001,4.206149,4.804893,4.983169,3.716869,3.936771,4.913403,4.965327,4.876845,3.202044,4.991686,4.991556,4.7786,4.554327,2.64042,2.37214,2.759628,3.96129,4.798157,4.333545,4.856554,3.821827,4.991618,4.994339,4.833892,3.125278,2.970768,4.957644,4.534748,4.866293,2.573908,4.719582,4.83992,4.18256,4.574757,4.928275,4.853057,4.868734,4.872072,4.925793,4.950218,3.886796,4.800599,4.577958,3.554691,4.514627,4.935559,4.556426,4.986997,4.840334,4.643553,2.100534,4.653097,3.929749,4.970079,1.574562,2.648082,3.586359,4.997037,4.792707,4.943689,4.518011,4.920098,2.521398,4.980497,1.836919,4.726676,5.0,3.571644,4.762704,4.916099,4.50974,4.973225,3.093558,4.72058,4.800487,4.153678,2.885159,4.925493,4.773349,4.96869,2.443718,4.879619,null,4.611612,4.577855,4.999505,4.524784,3.142951,4.666675,2.987841,4.829717,2.156829,4.304042,4.638624,4.020823,4.927881,4.953069,4.473802,2.57504,4.977645,3.926969,4.5476,4.887708,4.53064,4.597653,4.930801,3.654281,4.72039,4.110869,4.973483,3.46795,4.535752,4.762494,4.560712,4.948019,3.085081,2.995639,4.845388,3.966368,4.994877,4.776175,2.943163,4.99405,4.300127,4.510204,4.976084,3.632963,4.419094,4.815026,4.971664,4.96653,4.859192,3.893059,4.987321,4.959598,4.580956,4.862438,4.802914,4.797153,4.505993,4.65186,4.836658,2.143414,4.180698,4.277676,4.974727,4.938592,3.885377,4.696751,4.956689,2.8357,4.677269,2.307243,2.93381,1.968083,2.694675,2.833183,3.203321,4.83081,4.962824,2.629916,4.609184,4.783669,4.894539,1.683946,4.818708,4.850348,3.509691,2.74796,4.528637,3.031578,4.462428,3.08232,4.973539,4.981039,4.292459,4.659723,3.368526,4.956393,4.513303,4.727848,3.388334,4.637973,4.723937,2.715849,4.99697,2.88847,4.879305,3.656125,4.969484,4.621343,4.977522,4.450415,4.907399,4.760015,4.875937,2.995846,4.928083,4.526832,4.990664,4.862292,4.950437,4.962094,4.787546,4.810812,4.847253,4.942094,2.679428,4.824376,4.611932,4.857698,4.541445,4.766347,4.704855,4.965591,4.660784,4.954459,4.901462,4.60746,4.63482,4.773275,4.906264,4.951722,2.260916,4.765397,4.044442,2.93327,3.975461,3.431317,4.192797,3.165562,4.868558,4.782923,2.91774,2.539987,4.785018,4.715764,3.596706,4.131528,4.957593,4.702903,4.464357,4.685235,4.517417,4.744281,4.703719,4.463692,4.80068,4.7987,3.898025,4.809508,2.996247,4.400293,4.626996,4.313627,4.363249,4.896374,4.903984,4.989351,4.979502,4.411347,4.429253,4.646164,3.542746,4.445536,4.753178,4.788858,4.829853,4.880177,1.962491,4.877759,4.759367,4.910654,2.961335,4.843551,4.976773,4.987633,4.842608,1.994952,4.481595,3.81276,4.919579,1.939224,4.542832,4.719689,4.506418,4.133414,4.77491,4.521695,4.979479,3.37921,4.847777,4.962718,4.455425,4.3741,4.246845,4.505753,4.881108,3.213303,4.446539,4.665792,3.484403,4.937169,2.375568,4.938621,4.650978,4.675214,4.815599,4.994343,4.839146,4.773992,2.949691,4.933851,4.710821,4.822568,4.483065,4.581884,4.662218,3.630117,1.091667,2.618484,3.441167,3.40988,3.723495,4.976643,4.747113,4.647785,4.632259,4.99453,4.756697,4.871749,4.980996,4.898619,3.826267,4.414518,3.92411,4.397601,3.31967,4.832919,2.453491,2.320274,3.185782,2.958158,2.016499,4.590151,3.32713,3.195193,4.56571,4.981283,3.300047,4.870899,4.866216,4.940163,4.651686,4.472087,4.952313,4.808273,2.486966,4.62729,4.971754,4.640664,4.877811,3.006684,2.506348,4.304848,4.858487,4.886471,4.791948,4.990134,4.767706,4.240063,2.160004,2.456217,2.809777,3.373775,4.169164,4.96388,3.450895,4.430583,3.031348,4.977981,4.320191,4.828251,3.167235,4.609451,4.872315,4.943717,2.792415,4.611825,2.586888,2.699636,4.368912,3.077329,3.180372,4.895322,2.921648,4.564764,4.997499,2.324968,3.055786,4.896142,3.033232,3.569206,2.956793,2.452187,3.250604,4.797469,4.843823,3.78221,4.448802,4.827024,4.918949,4.185778,1.807066,3.665076,2.642179,3.0998,4.746754,2.744658,4.994801,4.436995,4.505291,4.848505,4.82866,3.579646,2.320297,3.537164,4.973696,4.917551,3.65102,4.796457,4.689396,4.124061,2.721764,2.98069,4.309084,4.954906,2.593462,2.670272,4.976596,4.980772,4.555563,2.281009,4.336172,4.819152,2.736863,4.869818,4.485077,4.043272,4.90105,2.632896,4.493978,4.823343,3.103601,2.890888,2.951653,4.520806,4.99963,3.999579,3.632824,3.19292,4.063282,4.938794,3.708643,2.602712,4.714436,3.35997,2.373889,4.450382,2.597574,4.916691,3.198916,null,3.285259,4.860172,4.822417,4.928586,3.94133,2.438324,4.67702,4.904644,3.728824,2.998459,4.132513,4.514878,4.823377,4.078267,3.468424,4.564228,4.523521,4.580521,4.333968,2.596422,4.407442,2.592867,4.734282,2.577123,4.774514,3.198374,4.71402,3.602129,3.110493,3.529972,3.280561,4.910131,4.89752,2.136567,3.744466,2.545785,4.967322,4.699156,3.841583,4.821303,4.677281,0.603737,4.760971,1.864071,2.621753,4.414861,4.392584,4.640405,4.734756,4.571085,4.795346,4.534581,4.741774,4.4127,4.954331,4.418091,4.681343,2.691764,3.900563,3.22227,2.219155,4.558033,2.61371,4.82187,4.50557,4.648612,2.954335,4.898048,4.847358,4.849998,4.620957,2.505208,3.632567,4.570657,3.884048,3.670973,3.847326,4.396685,4.896572,4.638189,4.718716,4.739531,4.529636,2.31997,4.772955,0.586563,2.768636,2.781417,4.384152,2.904819,1.903941,2.683906,3.340603,2.72063,4.980018,4.992421,3.803453,4.281067,3.148247,4.413972,4.697008,4.530299,4.716468,4.375002,3.575416,2.70245,2.98154,4.981722,4.983587,4.899981,4.495175,4.938983,4.801659,4.046981,4.874087,4.38755,4.656623,4.513672,2.823136,4.021721,2.64082,3.623757,4.622375,3.816686,4.49581,4.925934,4.887641,2.756197,4.521194,3.775657,4.852364,4.938266,3.42764,3.177558,4.998144,4.792702,4.533395,4.478369,4.884906,4.597737,3.50537,4.991661,2.863201,2.850112,2.669795,4.99907,4.947198,4.782031,4.740693,4.648526,2.45681,3.7125,4.300355,4.975381,4.650212,3.484646,4.988333,1.661257,0.687847,4.580777,4.89035,4.629447,3.778016,null,null,4.980389,null,2.441916,4.631421,null,2.808291,3.645435,4.399193,3.066279,4.937214,null,4.692901,4.884306,4.966058,4.614461,4.905725,4.643892,4.962197,4.722226,2.39121,2.432376,1.574955,4.876667,4.818952,2.641082,1.923024,3.013687,3.085793,4.175422,4.868235,4.725307,4.964007,4.801123,4.582137,4.734982,4.215126,4.952613,2.797699,4.600983,4.96437,4.976585,4.788173,3.165763,4.979065,4.975433,4.785176,4.724814,4.056426,4.802078,4.3642,4.733939,4.862257,3.380774,3.701783,3.921136,4.491349,4.963746,3.257048,3.612404,4.754161,4.966802,4.888248,4.989223,3.601849,3.283375,4.951708,4.576832,4.903881,4.961268,4.7038,4.473028,2.844198,2.179231,4.456374,4.900182,4.788768,1.621513,2.613452,2.491041,3.012021,4.646488,4.461621,4.805707,2.907294,4.486879,4.97989,3.000564,4.980631,3.95426,0.865306,3.744158,4.99352,3.450809,4.709206,4.997499,4.017187,4.803621,4.999216,4.826843,1.89444,2.279306,4.886109,3.887435,4.613445,4.835057,3.678007,4.413101,4.716844,4.934076,4.822547,4.579147,2.797135,4.983517,4.456467,1.526494,2.491076,4.524547,4.548954,4.71843,4.686955,4.810517,4.856973,4.910514,4.401951,4.67892,2.829055,3.945973,4.697184,4.822693,3.884996,4.724948,4.426051,2.600703,1.059437,4.657659,4.968673,4.886429,4.951294,4.83121,2.534157,4.265176,4.956409,3.588064,4.901,4.814763,4.952948,4.888794,4.597773,4.866274,3.85721,3.735889,4.975887,4.598505,2.590973,3.281434,2.873759,4.97511,4.684451,4.956015,3.557313,3.168622,4.833946,4.512902,4.806384,4.278783,4.780598,4.197443,4.897991,2.746977,4.850065,2.648152,2.545467,4.973712,4.970382,3.727268,4.633918,4.993492,4.964379,4.766525,2.456982,2.114749,null,3.182719,4.899064,4.425914,4.829541,4.918874,2.869786,4.999526,4.961401,1.849813,4.622001,4.672109,4.707443,4.862798,4.945264,4.805614,4.892009,4.876464,4.824751,4.669131,4.973441,4.782616,4.981763,4.356,4.644566,4.940287,4.899606,1.927133,2.97105,4.877633,4.817446,4.987622,4.984421,4.538691,4.761483,4.487646,4.654214,4.840225,4.734365,4.989548,2.422161,4.880349,4.580863,4.520659,4.557159,2.110799,3.363761,1.998074,4.881779,3.461561,4.998,3.142521,4.961381,2.742693,4.69755,3.638866,4.821988,4.609463,2.470072,2.066123,2.726644,4.996959,4.617884,4.92891,4.960884,4.697998,4.054139,4.828368,5.0,3.54734,4.955908,2.896956,4.884257,4.839419,4.810521,4.729211,4.238483,4.957647,3.232112,3.30578,4.578788,4.97122,4.994656,4.446863,2.224157,4.750104,4.708158,4.995113,3.380791,4.814743,3.583783,3.947802,4.689706,4.806663,4.593973,4.572898,2.296208,4.968032,4.523348,4.709663,2.794933,2.452779,4.967475,4.640846,4.821465,4.933969,4.929591,2.709409,4.971266,4.88324,2.378856,4.99754,4.782954,3.457534,2.65992,4.944377,4.865756,3.794457,3.796112,4.162201,4.568697,4.862193,4.828789,2.544858,4.852639,4.960788,3.526038,4.951104,4.889222,1.817109,2.229146,1.972994,4.924192,3.181604,4.542535,4.904114,3.029349,4.990368,3.056842,4.950004,4.983323,4.955508,2.476171,4.540466,4.942013,4.98637,4.886356,4.950133,1.928762,2.83569,4.71082,2.829953,4.614326,2.963412,2.59084,3.4097,4.912989,4.97806,3.290585,4.266074,2.18612,4.075506,3.007003,3.953808,4.998402,4.999272,4.427922,4.636706,4.978987,4.870095,4.013238,4.965258,4.514631,4.418227,4.589822,4.696658,4.969392,4.514986,4.088866,4.69173,4.864846,4.649597,4.548482,4.93846,4.419342,4.992473,2.576093,4.993502,4.660406,4.475166,4.821662,3.082048,3.015828,4.857829,2.930411,2.687822,4.705654,4.811501,4.955529,3.093169,0.6,3.21702,4.273238,4.990461,4.821666,3.550228,4.504463,2.215531,4.93305,3.679397,2.469006,4.614936,4.984952,0.566667,4.977786,4.762815,4.965017,4.851885,2.874709,4.675361,4.852212,4.663739,4.740708,4.669116,4.815195,2.589924,3.48041,4.599632,4.515647,4.760643,1.721071,3.963521,4.84467,4.977287,null,4.820677,4.286656,4.743306,4.982741,4.810375,3.94193,4.933875,3.773064,4.714552,2.787683,4.895619,4.994635,4.684206,4.557415,4.832093,3.617359,4.646345,4.882764,2.970061,null,4.871098,4.86577,4.458695,4.687007,2.725503,4.576811,4.699613,4.985593,4.706317,4.937065,2.44703,4.244619,4.901921,5.0,3.854955,4.471868,4.970951,4.866611,3.13452,4.47164,4.977641,4.570915,2.786624,2.817715,4.924551,2.593201,4.629446,4.786464,4.968916,4.404429,3.949076,4.807316,4.421383,4.984176,4.797042,4.741369,4.669282,4.95982,4.691673,4.384805,4.807606,3.940827,4.549748,4.507107,3.640971,4.390132,3.884626,3.773996,4.987839,4.736255,3.388333,3.842287,2.770184,4.842239,4.514535,5.0,2.267617,4.466226,3.808118,4.959143,4.989202,4.664638,2.751556,4.947862,4.649531,4.755417,4.968561,4.93518,4.993406,3.695181,4.635223,4.998813,4.986549,3.957979,3.243426,2.352663,4.204061,4.693984,4.598252,4.080262,3.850636,4.793643,4.769502,4.945607,4.673683,4.907717,4.97781,4.560017,4.907428,4.970791,3.046042,4.712141,4.784077,3.436297,4.994638,4.763798,2.451584,2.112487,2.740139,2.768153,4.817475,4.984168,2.546848,4.873854,4.940466,3.34027,4.928067,4.174465,4.729868,4.309695,3.981483,4.782324,4.648444,4.923622,4.972597,4.755866,4.952921,1.237348,4.79827,4.365989,4.633699,4.915584,4.304062,4.763429,2.5586,2.840457,4.150222,4.990637,4.926031,5.0,3.204424,4.101528,4.855441,4.988841,4.996302,4.967536,2.964202,4.661837,4.622473,4.962198,3.648618,4.372242,4.828959,4.985767,4.796285,3.29399,4.865337,4.882918,4.987637,4.999101,4.86367,4.396635,3.112141,4.971559,0.545455,4.814937,4.763565,4.564227,4.551017,4.835958,4.454756,3.793792,4.890968,4.266937,3.57441,4.680366,3.802121,4.975106,4.865573,3.526745,4.397311,2.488501,3.604774,4.05811,4.973124,4.183648,4.908066,4.876722,4.960151,2.063176,3.995882,4.848433,4.855088,4.679911,4.98997,4.931054,2.845818,1.528974,4.977928,2.663216,4.723362,4.257447,4.996203,4.989961,4.969611,2.491624,4.791693,3.198439,4.727177,3.131437,2.111195,4.864454,4.571451,4.838032,3.976819,1.831388,4.806628,3.109588,4.480183,4.521315,4.993344,4.709976,4.687274,4.832959,3.745601,4.539979,3.285395,0.820305,2.505517,4.837174,4.696421,4.502255,4.41859,4.607761,4.762689,4.908295,4.9288,4.742382,4.212592,4.683017,4.623775,3.527281,1.990167,4.508365,4.802226,4.85174,4.190274,4.617102,3.111731,4.766296,4.781443,4.666268,4.534592,4.413678,4.653656,4.349244,2.89886,4.987681,3.22192,3.191394,4.749482,3.725568,4.836546,4.692169,2.976831,2.808995,4.759244,4.962816,4.960374,4.821429,4.131611,4.637383,4.644538,3.409676,1.396317,2.855937,4.976106,4.958293,4.616319,4.596894,3.235997,4.034439,4.992177,1.987052,3.032812,4.975928,2.587731,4.647829,4.888963,4.8853,4.79868,4.998379,3.735346,4.934473,4.971473,4.360521,3.890529,4.850464,4.99124,4.927226,3.985741,4.923832,4.669645,3.464689,2.455352,4.680808,4.840814,4.960087,4.30989,4.832644,5.0,4.977371,4.9625,4.883176,4.212999,4.770044,4.601491,3.362068,4.98091,4.842837,4.991251,4.944906,4.658297,4.763964,4.926114,3.087354,4.582787,1.954129,1.745095,4.965198,4.788836,4.978756,4.749852,3.951952,4.651524,null,4.978131,2.903905,4.993961,5.0,4.514626,2.848099,3.031561,4.986737,4.912598,4.241515,4.490694,4.832568,4.161935,4.46431,4.40618,2.665589,2.195481,4.106667,4.997118,2.99063,4.935733,4.297096,4.925208,3.028728,4.767746,3.970661,4.868551,4.921912,4.932146,4.953384,3.141922,2.691634,4.716542,4.810635,4.18456,4.957933,4.855056,4.405991,3.843724,3.096087,2.92554,4.986489,2.521979,4.803268,4.854788,4.994683,4.459649,4.885724,4.949452,4.962297,4.931821,4.541557,3.42471,4.509931,3.295974,4.698983,4.983381,2.951507,3.993286,1.83997,4.421889,4.999986,2.647301,4.744058,4.999963,4.740557,1.905448,4.857027,4.965523,4.879602,4.925624,1.301078,4.508262,4.323138,3.954754,4.573715,4.997065,4.387541,3.297297,4.58269,3.598506,4.830477,4.806701,4.442589,4.897018,4.980611,4.737369,1.736961,4.535612,4.837028,2.653018,2.976183,4.91719,3.030494,4.755814,1.834267,3.462852,4.999859,4.508752,4.506606,4.691985,null,4.886168,4.74512,4.947172,4.918227,2.674182,4.992045,4.947858,4.862316,4.8267,4.625192,2.415989,2.36418,3.131758,4.798678,4.92533,2.627573,2.906939,4.936398,4.708622,4.782976,3.558059,4.891155,4.921211,4.726833,3.061722,4.775398,4.873392,4.474274,4.78389,4.50665,3.723731,4.510224,2.520013,1.527128,3.785356,4.671356,1.848409,4.801415,2.663565,2.959601,4.777393,4.852137,4.492201,3.688312,3.162319,4.580821,4.790616,4.988086,4.411192,4.583817,4.798874,4.993771,4.617979,2.710628,4.369324,4.80901,3.123492,4.88342,3.888184,4.962161,4.983807,4.413451,3.766149,3.109864,4.556631,4.818466,4.906669,0.97252,3.553932,4.858536,4.978435,4.205318,4.989765,3.945952,4.824896,4.85053,3.123302,4.998454,4.66149,4.570213,3.894247,4.975706,3.542189,4.941436,4.785667,2.473142,4.845009,2.720893,1.825713,4.677397,4.854214,4.804279,4.998541,4.971373,4.977055,3.956302,4.277278,4.9205,4.873791,2.382081,4.961064,4.512388,2.726714,3.047535,3.159951,4.878567,4.987394,4.859731,4.671828,4.119681,2.939999,4.987087,2.370196,4.253909,4.855772,3.097323,3.329647,4.670956,4.958817,4.96028,2.461239,3.88772,3.789749,4.957493,4.999202,4.943466,3.251618,1.631487,4.536644,4.987799,4.560454,4.819861,4.807328,4.806542,4.822582,4.268573,4.423667,4.895697,4.564937,4.888658,4.773281,4.848921,2.544191,3.408963,4.719439,4.970367,4.673831,4.705106,4.992884,4.987285,4.899333,4.589139,4.488334,4.97466,4.98888,4.704588,4.953719,4.5568,4.98618,4.817464,3.377393,4.905795,4.942892,4.487609,4.587082,4.63765,4.763366,3.812395,1.76337,5.0,4.349901,4.97626,4.613788,4.865395,4.953575,4.944085,4.536338,5.0,4.872394,3.234985,4.818262,4.453254,4.881271,4.196481,4.681833,2.676641,4.754441,4.696041,4.573836,2.806382,4.993982,4.166528,3.170146,4.509997,4.963204,4.668736,4.830489,4.976341,4.847918,4.868939,4.767678,4.638908,4.988353,3.471613,3.9116,4.949468,4.932663,4.66083,4.808183,4.770857,4.897671,4.943606,3.88614,4.926555,4.996166,4.838628,3.227201,4.619801,4.369165,4.672931,4.85379,4.959771,3.560736,4.976155,4.48996,4.871667,4.976136,4.666145,4.920897,4.687926,4.726487,4.814551,4.857086,4.663587,4.990044,4.923834,3.350729,4.899373,4.986606,4.929812,4.870231,4.451645,1.559714,4.648961,4.908025,4.764342,4.827381,2.728354,4.483904,4.450172,4.798682,3.307079,3.895546,4.933062,2.435777,4.888129,4.652363,4.855198,3.60474,4.703451,4.787457,4.997336,2.393469,4.439329,4.991329,4.999598,4.795512,4.980359,4.88411,4.787272,4.80474,4.819664,4.536367,4.942532,4.678294,4.728968,4.859304,4.984845,4.598528,4.869095,3.541157,4.778149,4.952151,4.667186,3.972545,3.003439,4.807667,4.605402,4.965473,4.706664,4.484682,3.934178,4.674279,4.47043,3.699461,4.908916,4.927717,4.917709,4.971609,4.769465,4.841777,4.754716,4.95604,4.655151,4.868098,4.97908,4.798601,3.066359,4.205609,4.966246,4.952305,4.73123,4.864636,4.986442,4.696828,3.353499,3.106523,4.85289,4.800687,4.956221,4.334891,4.947035,4.759006,3.1948,4.713632,3.132276,3.089416,4.990437,4.772061,4.901759,4.794144,3.043401,3.097136,3.832658,1.847993,3.07797,4.611139,4.452099,4.47183,4.819068,4.704522,4.205238,4.997465,3.752501,4.589585,4.932436,1.587161,4.097105,4.92214,4.94497,1.8186,3.604459,4.763106,4.860691,3.015831,4.613831,4.340674,2.542522,5.0,2.727146,4.85584,4.745787,4.620365,4.894564,4.8745,4.822415,4.615278,4.730684,4.872857,4.833333,4.883215,4.637833,4.66375,3.862591,4.934196,2.711564,4.99926,4.511671,3.715857,4.983452,3.082055,4.71979,4.710722,4.823875,3.590632,4.80589,4.691973,3.357425,4.542052,4.971696,4.625185,4.971993,4.958958,4.955847,4.845278,2.48701,0.99372,4.794369,4.858365,4.920189,4.676892,2.006919,4.520056,4.727133,4.646622,4.794831,4.50392,4.983395,4.96138,4.924085,4.509954,4.986871,3.647178,4.530024,2.268604,3.950795,4.945131,4.996127,3.435163,4.147632,3.69367,4.092943,4.917678,4.963915,4.96085,4.725182,4.896673,4.709719,4.973901,4.842159,4.667558,4.846715,4.873069,4.591849,4.513567,4.835817,4.649873,4.995222,4.801535,4.788045,4.715194,1.628212,4.869471,2.822857,4.982998,4.661518,4.9235,3.512536,4.913349,4.947769,4.407715,4.298819,2.38994,3.896978,3.699898,3.787128,4.948368,4.964966,3.727847,4.924697,4.784425,2.807452,4.567233,4.680549,3.823319,1.642534,4.808777,4.769223,4.945237,4.833665,4.731192,0.987942,4.722994,3.692655,4.572918,4.712239,4.874696,4.876261,2.681259,4.689076,4.829399,4.166899,4.891508,4.885145,3.116059,3.263404,4.887875,4.553407,2.616093,4.989136,4.50048,4.965889,4.856986,4.635959,4.867855,4.914096,4.384905,2.864182,4.619175,4.710008,4.520794]}
2024-06-20 16:52:46,124 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'tissue::nervous system', 'values': [4.946901, 4.921225, 4.868777, 4.859584, 4.856863, 4.738342, 4.742011, 2.839645, 4.48026, 4.987707, 4.614155, 4.113006, 4.997025, 4.87333, 4.982262, 4.701943, 4.488055, 4.969018, 2.646401, 4.489356, 4.486954, 3.693146, 4.694728, 3.092781, 4.883401, 2.407853, 4.645012, 4.436411, 1.090909, 2.883327, 4.923859, 4.674345, 4.676601, 4.919133, 4.947088, 4.954939, 2.628019, 4.536798, 4.637089, 4.851315, 3.966481, 4.729046, 3.661618, 4.995534, 4.65039, 3.488322, 4.723, 4.482711, 3.41774, 4.24024, 2.696228, 4.378722, 2.135853, 2.762935, 4.953718, 4.867309, 3.965071, 4.763644, 2.81358, 2.633803, 4.303928, 2.634754, 4.026604, 3.482215, 4.87282, 4.625641, 4.278583, 4.941517, 3.860426, 4.73843, 4.881094, 4.98232, 4.755979, 4.896967, 2.707058, 4.727494, 4.981807, 3.267146, 4.718469, 3.77209, 4.797281, 3.639765, 4.83206, 4.965984, 4.540823, 4.228006, 4.594231, 4.93409, 4.753768, 4.535021, 2.495749, 4.923089, 4.908215, 3.510591, 2.329788, 4.754776, 1.570123, 1.605685, 4.833655, 4.318121, 4.954009, 4.974353, 2.6277, 4.79821, 4.526301, 3.26401, 4.806556, 4.922949, 3.580186, 4.804279, 4.634066, 4.919211, 2.869425, 4.001654, 4.648445, 1.756547, 4.884604, 4.496535, 4.616928, 4.682273, 4.078025, 4.766233, 4.927562, 4.708913, 4.725708, 4.645769, 4.896825, 4.729447, 4.850545, 3.146673, 2.796666, 0.738516, 2.580019, 3.619339, 4.494416, 4.895773, 3.679446, 4.760542, 2.22301, 4.954059, 4.057041, 4.034197, 4.989486, 4.921302, 4.535643, 3.400836, 3.218323, 2.263612, 4.817278, 4.375954, 4.791171, 4.116736, 4.988216, 3.792992, 4.359192, 4.489038, 3.525981, 4.996237, 4.994573, 4.691443, 3.813422, 4.955242, 4.956329, 4.920127, 4.764858, 3.838213, 4.947494, 4.923336, 3.319703, 4.989694, 4.643883, 4.946731, 4.651584, 4.887006, 4.473552, 2.884658, 1.345234, 4.914662, 4.742646, 4.819956, 3.647586, 4.96011, 4.989822, 4.956153, 2.743528, 3.680661, 4.802811, 4.761733, 4.978823, 4.788288, 3.691662, 4.729926, 4.663112, 4.713115, 3.868558, 4.427647, 2.762339, 4.61958, 4.946021, 2.225596, 4.792296, 4.84262, 4.724203, 4.839175, 4.700376, 4.954448, 4.861221, 3.884654, 4.594563, 3.688001, 4.600189, 4.998239, 4.869334, 4.573822, 4.935632, 4.9809, 4.951208, 4.672457, 4.476527, 2.421671, 3.25512, 4.826778, 4.908014, 4.853822, 4.939573, 2.409965, 4.716705, 4.754722, 4.725854, 4.106718, 4.681229, 4.164246, 4.863063, 2.212138, 3.249333, 4.817319, 3.195363, 4.9137, 4.758909, 4.987846, 2.181053, 4.529686, 3.143045, 4.537964, 4.902734, 3.259179, 4.949046, 4.627518, 4.887115, 4.592001, 4.6038, 2.444984, 4.847524, 3.052772, 4.621598, 3.883489, 4.965151, 2.217458, 4.449634, 4.278843, 4.526176, 4.975946, 4.831665, 4.698629, 3.586614, 3.53686, 4.986767, 4.949156, 4.386881, 4.636294, 2.476085, 4.975821, 4.946648, 4.80526, 4.932883, 4.190276, 4.674003, 2.595211, 4.664373, 4.691115, 4.784991, 4.25926, 4.745211, 4.851091, 2.945918, 4.991802, 4.179016, 3.912962, 1.090909, 4.871889, 4.290341, 4.987518, 1.71736, 4.989762, 3.280543, 4.739309, 4.622949, 4.701663, 4.196926, 4.880372, 4.957432, 2.924374, 4.431007, 4.954363, 4.998772, 4.855583, 4.822122, 4.520395, 3.99929, 4.425995, 4.845278, 4.889034, 3.128474, 4.944275, 4.874327, 4.968471, 4.924529, 4.194633, 4.857501, 3.058544, 4.224018, 4.721617, 4.082058, 4.062755, 4.962064, 4.630521, 4.385213, 4.554799, 4.774182, 4.279803, 4.665536, 4.924071, 4.960517, 4.876829, 2.086291, 4.684205, 3.225291, 5.0, 3.597902, 3.973161, 4.968794, 4.97865, 2.594612, 4.855078, 4.812523, 4.808595, 2.15059, 2.804534, 3.663947, 4.776546, 4.581287, 4.998623, 3.404138, 4.927887, 3.135413, 4.984907, 4.879176, 2.180189, 2.676704, 4.295416, 4.811216, 4.882428, 4.951533, 4.792815, 2.967728, 4.84967, 4.435491, 4.586283, 4.916032, 4.80657, 4.927965, 4.834716, 4.896404, 2.910707, 4.298148, 4.967308, 4.824371, 2.791658, 4.492722, 4.871183, 2.300144, 4.96036, 1.180189, 4.951291, 3.576077, 4.646636, 4.938413, 4.898418, 4.884919, 2.966703, 4.848171, 4.904933, 4.951337, 4.982185, 4.058259, 3.437824, 4.856417, 4.835628, 4.706226, 2.617378, 4.977134, 4.747266, 4.6217, 4.926412, 4.665808, 4.308862, 2.600242, 4.853701, 4.953489, 4.934287, 4.749168, 4.221715, 4.667265, 4.604407, 4.759211, 4.918908, 4.721622, 4.716016, 4.533708, 4.458479, 4.742489, 3.835819, 3.055555, 4.92641, 4.598449, 4.940095, 4.65189, 4.916459, 3.952128, 4.994965, 4.605584, 3.310597, 4.458512, 4.768576, 3.710518, 4.904689, 2.300229, 4.911887, 3.551929, 4.980396, 2.898235, 4.832677, 4.661669, 3.432064, 2.125518, 3.377611, 4.771812, 4.572573, 4.96063, 4.976711, 4.820918, 3.727061, 4.584471, 4.921568, 4.937531, 4.499168, 3.627529, 4.496527, 4.858396, 4.899901, 2.756806, 2.918746, 4.634967, 2.781929, 3.672355, 2.10015, 4.523023, 4.644302, 3.586303, 2.542914, 4.756893, 4.797751, 4.121507, 4.926722, 3.124939, 4.851972, 4.762847, 4.616647, 4.299206, 2.651245, 4.802018, 4.903048, 4.741148, 2.188509, 4.822544, 2.674634, 3.443715, 4.689898, 4.888915, 4.732894, 4.773732, 4.995305, 4.920622, 4.960656, 4.814612, 2.642079, 4.428661, 4.475298, 3.33117, 4.241609, 4.803766, 4.960726, 3.935236, 4.982534, 2.729535, 4.84783, 4.847825, 4.883918, 4.893505, 4.891542, 2.8854, 4.918377, 4.479414, 4.990403, 4.972234, 4.635472, 4.805019, 2.602248, 4.778241, 4.642713, 3.289673, 4.987453, 2.690146, 4.509161, 2.703146, 4.975838, 4.804354, 4.719769, 4.639459, 4.952941, 1.322347, 4.732036, 4.542882, 4.63571, 4.801435, 4.33993, 4.630084, 4.678236, 4.950183, 4.455802, 4.502686, 4.719765, 4.828528, 2.892651, 4.172571, 4.484738, 4.846743, 4.953465, 3.996108, 3.816294, 4.954987, 4.751654, 4.561149, 4.958264, 2.654622, 4.938455, 4.846201, 4.854459, 4.059138, 3.961607, 4.66237, 1.564627, 4.872928, 3.316327, 4.804984, 4.579924, 3.142673, 4.673143, 4.975929, 4.155226, 4.709472, 2.152348, 2.438134, 3.497534, 2.286984, 4.936502, 1.202204, 4.999225, 2.915509, 3.545267, 4.178819, 4.728743, 2.679488, 3.381892, 2.979356, 4.946854, 2.045102, 4.874573, 4.881749, 4.501965, 4.677813, 4.789086, 4.921049, 4.677207, 4.988853, 3.836497, 4.995226, 2.410004, 4.458569, 4.913596, 4.826253, 4.720976, 4.791147, 4.813831, 4.966208, 4.8836, 4.911063, 4.985764, 2.813234, 4.76363, 3.112463, 4.993049, 4.607027, 4.928578, 2.925213, 4.190921, 4.76563, 3.048501, 4.626141, 4.546244, 5.0, 4.555784, 4.685623, 4.880276, 2.529902, 2.671851, 4.988931, 2.416662, 3.609559, 4.705556, 4.958654, 4.952404, 4.044734, 4.996518, 4.970789, 4.817774, 3.578324, 4.929572, 4.690951, 4.719716, 4.431697, 4.983854, 4.675984, 4.764534, 4.902869, 4.808561, 4.945543, 2.63124, 4.360539, 4.991804, 4.654423, 4.891206, 1.919583, 4.869189, 4.99463, 4.972812, 4.654566, 3.534881, 4.701219, 4.821786, 4.143575, 4.943064, 2.026804, 4.601176, 3.579879, 4.671197, 4.60527, 4.640997, 3.859646, 4.883912, 4.656126, 3.301204, 4.663677, 3.707338, 4.764908, 4.971811, 4.101231, 3.464376, 4.707136, 1.589866, 1.862623, 4.867712, 2.976182, 4.502343, 4.988094, 4.567054, 3.1377, 4.708146, 3.257318, 4.859953, 4.473358, 2.373557, 4.328242, 4.705459, 4.714013, 3.990266, 4.708248, 2.647042, 4.652044, 4.926362, 4.235602, 4.610806, 4.166373, 2.962667, 4.761732, 4.822423, 2.694612, 4.951294, 1.890993, 4.678583, 3.899554, 4.699984, 3.252764, 4.296985, 4.978526, 4.873223, 2.956343, 4.879088, 4.776523, 4.46369, 4.930308, 3.907592, 4.121346, 4.874288, 4.996465, 3.949159, 3.940191, 2.464915, 4.487954, 4.877628, 4.778749, 4.729967, 2.623875, 4.879975, 3.716627, 4.912265, 4.905145, 4.960268, 4.997719, 4.922857, 4.927656, 4.190231, 4.868234, 4.383852, 4.997386, 4.640317, 4.933342, 4.898821, 4.923758, 3.970027, 4.369062, 4.834676, 4.757675, 4.684209, 4.71076, 4.996632, 4.933465, 2.879184, 4.535027, 4.966769, 4.943022, 1.857432, 3.338592, 2.345645, 4.999397, 2.010457, 4.741461, 4.905883, 4.991716, 4.97449, 3.755291, 4.717794, 4.813222, 4.985454, 4.947299, 4.60576, 1.971001, 4.206149, 4.804893, 4.983169, 3.716869, 3.936771, 4.913403, 4.965327, 4.876845, 3.202044, 4.991686, 4.991556, 4.7786, 4.554327, 2.64042, 2.37214, 2.759628, 3.96129, 4.798157, 4.333545, 4.856554, 3.821827, 4.991618, 4.994339, 4.833892, 3.125278, 2.970768, 4.957644, 4.534748, 4.866293, 2.573908, 4.719582, 4.83992, 4.18256, 4.574757, 4.928275, 4.853057, 4.868734, 4.872072, 4.925793, 4.950218, 3.886796, 4.800599, 4.577958, 3.554691, 4.514627, 4.935559, 4.556426, 4.986997, 4.840334, 4.643553, 2.100534, 4.653097, 3.929749, 4.970079, 1.574562, 2.648082, 3.586359, 4.997037, 4.792707, 4.943689, 4.518011, 4.920098, 2.521398, 4.980497, 1.836919, 4.726676, 5.0, 3.571644, 4.762704, 4.916099, 4.50974, 4.973225, 3.093558, 4.72058, 4.800487, 4.153678, 2.885159, 4.925493, 4.773349, 4.96869, 2.443718, 4.879619, None, 4.611612, 4.577855, 4.999505, 4.524784, 3.142951, 4.666675, 2.987841, 4.829717, 2.156829, 4.304042, 4.638624, 4.020823, 4.927881, 4.953069, 4.473802, 2.57504, 4.977645, 3.926969, 4.5476, 4.887708, 4.53064, 4.597653, 4.930801, 3.654281, 4.72039, 4.110869, 4.973483, 3.46795, 4.535752, 4.762494, 4.560712, 4.948019, 3.085081, 2.995639, 4.845388, 3.966368, 4.994877, 4.776175, 2.943163, 4.99405, 4.300127, 4.510204, 4.976084, 3.632963, 4.419094, 4.815026, 4.971664, 4.96653, 4.859192, 3.893059, 4.987321, 4.959598, 4.580956, 4.862438, 4.802914, 4.797153, 4.505993, 4.65186, 4.836658, 2.143414, 4.180698, 4.277676, 4.974727, 4.938592, 3.885377, 4.696751, 4.956689, 2.8357, 4.677269, 2.307243, 2.93381, 1.968083, 2.694675, 2.833183, 3.203321, 4.83081, 4.962824, 2.629916, 4.609184, 4.783669, 4.894539, 1.683946, 4.818708, 4.850348, 3.509691, 2.74796, 4.528637, 3.031578, 4.462428, 3.08232, 4.973539, 4.981039, 4.292459, 4.659723, 3.368526, 4.956393, 4.513303, 4.727848, 3.388334, 4.637973, 4.723937, 2.715849, 4.99697, 2.88847, 4.879305, 3.656125, 4.969484, 4.621343, 4.977522, 4.450415, 4.907399, 4.760015, 4.875937, 2.995846, 4.928083, 4.526832, 4.990664, 4.862292, 4.950437, 4.962094, 4.787546, 4.810812, 4.847253, 4.942094, 2.679428, 4.824376, 4.611932, 4.857698, 4.541445, 4.766347, 4.704855, 4.965591, 4.660784, 4.954459, 4.901462, 4.60746, 4.63482, 4.773275, 4.906264, 4.951722, 2.260916, 4.765397, 4.044442, 2.93327, 3.975461, 3.431317, 4.192797, 3.165562, 4.868558, 4.782923, 2.91774, 2.539987, 4.785018, 4.715764, 3.596706, 4.131528, 4.957593, 4.702903, 4.464357, 4.685235, 4.517417, 4.744281, 4.703719, 4.463692, 4.80068, 4.7987, 3.898025, 4.809508, 2.996247, 4.400293, 4.626996, 4.313627, 4.363249, 4.896374, 4.903984, 4.989351, 4.979502, 4.411347, 4.429253, 4.646164, 3.542746, 4.445536, 4.753178, 4.788858, 4.829853, 4.880177, 1.962491, 4.877759, 4.759367, 4.910654, 2.961335, 4.843551, 4.976773, 4.987633, 4.842608, 1.994952, 4.481595, 3.81276, 4.919579, 1.939224, 4.542832, 4.719689, 4.506418, 4.133414, 4.77491, 4.521695, 4.979479, 3.37921, 4.847777, 4.962718, 4.455425, 4.3741, 4.246845, 4.505753, 4.881108, 3.213303, 4.446539, 4.665792, 3.484403, 4.937169, 2.375568, 4.938621, 4.650978, 4.675214, 4.815599, 4.994343, 4.839146, 4.773992, 2.949691, 4.933851, 4.710821, 4.822568, 4.483065, 4.581884, 4.662218, 3.630117, 1.091667, 2.618484, 3.441167, 3.40988, 3.723495, 4.976643, 4.747113, 4.647785, 4.632259, 4.99453, 4.756697, 4.871749, 4.980996, 4.898619, 3.826267, 4.414518, 3.92411, 4.397601, 3.31967, 4.832919, 2.453491, 2.320274, 3.185782, 2.958158, 2.016499, 4.590151, 3.32713, 3.195193, 4.56571, 4.981283, 3.300047, 4.870899, 4.866216, 4.940163, 4.651686, 4.472087, 4.952313, 4.808273, 2.486966, 4.62729, 4.971754, 4.640664, 4.877811, 3.006684, 2.506348, 4.304848, 4.858487, 4.886471, 4.791948, 4.990134, 4.767706, 4.240063, 2.160004, 2.456217, 2.809777, 3.373775, 4.169164, 4.96388, 3.450895, 4.430583, 3.031348, 4.977981, 4.320191, 4.828251, 3.167235, 4.609451, 4.872315, 4.943717, 2.792415, 4.611825, 2.586888, 2.699636, 4.368912, 3.077329, 3.180372, 4.895322, 2.921648, 4.564764, 4.997499, 2.324968, 3.055786, 4.896142, 3.033232, 3.569206, 2.956793, 2.452187, 3.250604, 4.797469, 4.843823, 3.78221, 4.448802, 4.827024, 4.918949, 4.185778, 1.807066, 3.665076, 2.642179, 3.0998, 4.746754, 2.744658, 4.994801, 4.436995, 4.505291, 4.848505, 4.82866, 3.579646, 2.320297, 3.537164, 4.973696, 4.917551, 3.65102, 4.796457, 4.689396, 4.124061, 2.721764, 2.98069, 4.309084, 4.954906, 2.593462, 2.670272, 4.976596, 4.980772, 4.555563, 2.281009, 4.336172, 4.819152, 2.736863, 4.869818, 4.485077, 4.043272, 4.90105, 2.632896, 4.493978, 4.823343, 3.103601, 2.890888, 2.951653, 4.520806, 4.99963, 3.999579, 3.632824, 3.19292, 4.063282, 4.938794, 3.708643, 2.602712, 4.714436, 3.35997, 2.373889, 4.450382, 2.597574, 4.916691, 3.198916, None, 3.285259, 4.860172, 4.822417, 4.928586, 3.94133, 2.438324, 4.67702, 4.904644, 3.728824, 2.998459, 4.132513, 4.514878, 4.823377, 4.078267, 3.468424, 4.564228, 4.523521, 4.580521, 4.333968, 2.596422, 4.407442, 2.592867, 4.734282, 2.577123, 4.774514, 3.198374, 4.71402, 3.602129, 3.110493, 3.529972, 3.280561, 4.910131, 4.89752, 2.136567, 3.744466, 2.545785, 4.967322, 4.699156, 3.841583, 4.821303, 4.677281, 0.603737, 4.760971, 1.864071, 2.621753, 4.414861, 4.392584, 4.640405, 4.734756, 4.571085, 4.795346, 4.534581, 4.741774, 4.4127, 4.954331, 4.418091, 4.681343, 2.691764, 3.900563, 3.22227, 2.219155, 4.558033, 2.61371, 4.82187, 4.50557, 4.648612, 2.954335, 4.898048, 4.847358, 4.849998, 4.620957, 2.505208, 3.632567, 4.570657, 3.884048, 3.670973, 3.847326, 4.396685, 4.896572, 4.638189, 4.718716, 4.739531, 4.529636, 2.31997, 4.772955, 0.586563, 2.768636, 2.781417, 4.384152, 2.904819, 1.903941, 2.683906, 3.340603, 2.72063, 4.980018, 4.992421, 3.803453, 4.281067, 3.148247, 4.413972, 4.697008, 4.530299, 4.716468, 4.375002, 3.575416, 2.70245, 2.98154, 4.981722, 4.983587, 4.899981, 4.495175, 4.938983, 4.801659, 4.046981, 4.874087, 4.38755, 4.656623, 4.513672, 2.823136, 4.021721, 2.64082, 3.623757, 4.622375, 3.816686, 4.49581, 4.925934, 4.887641, 2.756197, 4.521194, 3.775657, 4.852364, 4.938266, 3.42764, 3.177558, 4.998144, 4.792702, 4.533395, 4.478369, 4.884906, 4.597737, 3.50537, 4.991661, 2.863201, 2.850112, 2.669795, 4.99907, 4.947198, 4.782031, 4.740693, 4.648526, 2.45681, 3.7125, 4.300355, 4.975381, 4.650212, 3.484646, 4.988333, 1.661257, 0.687847, 4.580777, 4.89035, 4.629447, 3.778016, None, None, 4.980389, None, 2.441916, 4.631421, None, 2.808291, 3.645435, 4.399193, 3.066279, 4.937214, None, 4.692901, 4.884306, 4.966058, 4.614461, 4.905725, 4.643892, 4.962197, 4.722226, 2.39121, 2.432376, 1.574955, 4.876667, 4.818952, 2.641082, 1.923024, 3.013687, 3.085793, 4.175422, 4.868235, 4.725307, 4.964007, 4.801123, 4.582137, 4.734982, 4.215126, 4.952613, 2.797699, 4.600983, 4.96437, 4.976585, 4.788173, 3.165763, 4.979065, 4.975433, 4.785176, 4.724814, 4.056426, 4.802078, 4.3642, 4.733939, 4.862257, 3.380774, 3.701783, 3.921136, 4.491349, 4.963746, 3.257048, 3.612404, 4.754161, 4.966802, 4.888248, 4.989223, 3.601849, 3.283375, 4.951708, 4.576832, 4.903881, 4.961268, 4.7038, 4.473028, 2.844198, 2.179231, 4.456374, 4.900182, 4.788768, 1.621513, 2.613452, 2.491041, 3.012021, 4.646488, 4.461621, 4.805707, 2.907294, 4.486879, 4.97989, 3.000564, 4.980631, 3.95426, 0.865306, 3.744158, 4.99352, 3.450809, 4.709206, 4.997499, 4.017187, 4.803621, 4.999216, 4.826843, 1.89444, 2.279306, 4.886109, 3.887435, 4.613445, 4.835057, 3.678007, 4.413101, 4.716844, 4.934076, 4.822547, 4.579147, 2.797135, 4.983517, 4.456467, 1.526494, 2.491076, 4.524547, 4.548954, 4.71843, 4.686955, 4.810517, 4.856973, 4.910514, 4.401951, 4.67892, 2.829055, 3.945973, 4.697184, 4.822693, 3.884996, 4.724948, 4.426051, 2.600703, 1.059437, 4.657659, 4.968673, 4.886429, 4.951294, 4.83121, 2.534157, 4.265176, 4.956409, 3.588064, 4.901, 4.814763, 4.952948, 4.888794, 4.597773, 4.866274, 3.85721, 3.735889, 4.975887, 4.598505, 2.590973, 3.281434, 2.873759, 4.97511, 4.684451, 4.956015, 3.557313, 3.168622, 4.833946, 4.512902, 4.806384, 4.278783, 4.780598, 4.197443, 4.897991, 2.746977, 4.850065, 2.648152, 2.545467, 4.973712, 4.970382, 3.727268, 4.633918, 4.993492, 4.964379, 4.766525, 2.456982, 2.114749, None, 3.182719, 4.899064, 4.425914, 4.829541, 4.918874, 2.869786, 4.999526, 4.961401, 1.849813, 4.622001, 4.672109, 4.707443, 4.862798, 4.945264, 4.805614, 4.892009, 4.876464, 4.824751, 4.669131, 4.973441, 4.782616, 4.981763, 4.356, 4.644566, 4.940287, 4.899606, 1.927133, 2.97105, 4.877633, 4.817446, 4.987622, 4.984421, 4.538691, 4.761483, 4.487646, 4.654214, 4.840225, 4.734365, 4.989548, 2.422161, 4.880349, 4.580863, 4.520659, 4.557159, 2.110799, 3.363761, 1.998074, 4.881779, 3.461561, 4.998, 3.142521, 4.961381, 2.742693, 4.69755, 3.638866, 4.821988, 4.609463, 2.470072, 2.066123, 2.726644, 4.996959, 4.617884, 4.92891, 4.960884, 4.697998, 4.054139, 4.828368, 5.0, 3.54734, 4.955908, 2.896956, 4.884257, 4.839419, 4.810521, 4.729211, 4.238483, 4.957647, 3.232112, 3.30578, 4.578788, 4.97122, 4.994656, 4.446863, 2.224157, 4.750104, 4.708158, 4.995113, 3.380791, 4.814743, 3.583783, 3.947802, 4.689706, 4.806663, 4.593973, 4.572898, 2.296208, 4.968032, 4.523348, 4.709663, 2.794933, 2.452779, 4.967475, 4.640846, 4.821465, 4.933969, 4.929591, 2.709409, 4.971266, 4.88324, 2.378856, 4.99754, 4.782954, 3.457534, 2.65992, 4.944377, 4.865756, 3.794457, 3.796112, 4.162201, 4.568697, 4.862193, 4.828789, 2.544858, 4.852639, 4.960788, 3.526038, 4.951104, 4.889222, 1.817109, 2.229146, 1.972994, 4.924192, 3.181604, 4.542535, 4.904114, 3.029349, 4.990368, 3.056842, 4.950004, 4.983323, 4.955508, 2.476171, 4.540466, 4.942013, 4.98637, 4.886356, 4.950133, 1.928762, 2.83569, 4.71082, 2.829953, 4.614326, 2.963412, 2.59084, 3.4097, 4.912989, 4.97806, 3.290585, 4.266074, 2.18612, 4.075506, 3.007003, 3.953808, 4.998402, 4.999272, 4.427922, 4.636706, 4.978987, 4.870095, 4.013238, 4.965258, 4.514631, 4.418227, 4.589822, 4.696658, 4.969392, 4.514986, 4.088866, 4.69173, 4.864846, 4.649597, 4.548482, 4.93846, 4.419342, 4.992473, 2.576093, 4.993502, 4.660406, 4.475166, 4.821662, 3.082048, 3.015828, 4.857829, 2.930411, 2.687822, 4.705654, 4.811501, 4.955529, 3.093169, 0.6, 3.21702, 4.273238, 4.990461, 4.821666, 3.550228, 4.504463, 2.215531, 4.93305, 3.679397, 2.469006, 4.614936, 4.984952, 0.566667, 4.977786, 4.762815, 4.965017, 4.851885, 2.874709, 4.675361, 4.852212, 4.663739, 4.740708, 4.669116, 4.815195, 2.589924, 3.48041, 4.599632, 4.515647, 4.760643, 1.721071, 3.963521, 4.84467, 4.977287, None, 4.820677, 4.286656, 4.743306, 4.982741, 4.810375, 3.94193, 4.933875, 3.773064, 4.714552, 2.787683, 4.895619, 4.994635, 4.684206, 4.557415, 4.832093, 3.617359, 4.646345, 4.882764, 2.970061, None, 4.871098, 4.86577, 4.458695, 4.687007, 2.725503, 4.576811, 4.699613, 4.985593, 4.706317, 4.937065, 2.44703, 4.244619, 4.901921, 5.0, 3.854955, 4.471868, 4.970951, 4.866611, 3.13452, 4.47164, 4.977641, 4.570915, 2.786624, 2.817715, 4.924551, 2.593201, 4.629446, 4.786464, 4.968916, 4.404429, 3.949076, 4.807316, 4.421383, 4.984176, 4.797042, 4.741369, 4.669282, 4.95982, 4.691673, 4.384805, 4.807606, 3.940827, 4.549748, 4.507107, 3.640971, 4.390132, 3.884626, 3.773996, 4.987839, 4.736255, 3.388333, 3.842287, 2.770184, 4.842239, 4.514535, 5.0, 2.267617, 4.466226, 3.808118, 4.959143, 4.989202, 4.664638, 2.751556, 4.947862, 4.649531, 4.755417, 4.968561, 4.93518, 4.993406, 3.695181, 4.635223, 4.998813, 4.986549, 3.957979, 3.243426, 2.352663, 4.204061, 4.693984, 4.598252, 4.080262, 3.850636, 4.793643, 4.769502, 4.945607, 4.673683, 4.907717, 4.97781, 4.560017, 4.907428, 4.970791, 3.046042, 4.712141, 4.784077, 3.436297, 4.994638, 4.763798, 2.451584, 2.112487, 2.740139, 2.768153, 4.817475, 4.984168, 2.546848, 4.873854, 4.940466, 3.34027, 4.928067, 4.174465, 4.729868, 4.309695, 3.981483, 4.782324, 4.648444, 4.923622, 4.972597, 4.755866, 4.952921, 1.237348, 4.79827, 4.365989, 4.633699, 4.915584, 4.304062, 4.763429, 2.5586, 2.840457, 4.150222, 4.990637, 4.926031, 5.0, 3.204424, 4.101528, 4.855441, 4.988841, 4.996302, 4.967536, 2.964202, 4.661837, 4.622473, 4.962198, 3.648618, 4.372242, 4.828959, 4.985767, 4.796285, 3.29399, 4.865337, 4.882918, 4.987637, 4.999101, 4.86367, 4.396635, 3.112141, 4.971559, 0.545455, 4.814937, 4.763565, 4.564227, 4.551017, 4.835958, 4.454756, 3.793792, 4.890968, 4.266937, 3.57441, 4.680366, 3.802121, 4.975106, 4.865573, 3.526745, 4.397311, 2.488501, 3.604774, 4.05811, 4.973124, 4.183648, 4.908066, 4.876722, 4.960151, 2.063176, 3.995882, 4.848433, 4.855088, 4.679911, 4.98997, 4.931054, 2.845818, 1.528974, 4.977928, 2.663216, 4.723362, 4.257447, 4.996203, 4.989961, 4.969611, 2.491624, 4.791693, 3.198439, 4.727177, 3.131437, 2.111195, 4.864454, 4.571451, 4.838032, 3.976819, 1.831388, 4.806628, 3.109588, 4.480183, 4.521315, 4.993344, 4.709976, 4.687274, 4.832959, 3.745601, 4.539979, 3.285395, 0.820305, 2.505517, 4.837174, 4.696421, 4.502255, 4.41859, 4.607761, 4.762689, 4.908295, 4.9288, 4.742382, 4.212592, 4.683017, 4.623775, 3.527281, 1.990167, 4.508365, 4.802226, 4.85174, 4.190274, 4.617102, 3.111731, 4.766296, 4.781443, 4.666268, 4.534592, 4.413678, 4.653656, 4.349244, 2.89886, 4.987681, 3.22192, 3.191394, 4.749482, 3.725568, 4.836546, 4.692169, 2.976831, 2.808995, 4.759244, 4.962816, 4.960374, 4.821429, 4.131611, 4.637383, 4.644538, 3.409676, 1.396317, 2.855937, 4.976106, 4.958293, 4.616319, 4.596894, 3.235997, 4.034439, 4.992177, 1.987052, 3.032812, 4.975928, 2.587731, 4.647829, 4.888963, 4.8853, 4.79868, 4.998379, 3.735346, 4.934473, 4.971473, 4.360521, 3.890529, 4.850464, 4.99124, 4.927226, 3.985741, 4.923832, 4.669645, 3.464689, 2.455352, 4.680808, 4.840814, 4.960087, 4.30989, 4.832644, 5.0, 4.977371, 4.9625, 4.883176, 4.212999, 4.770044, 4.601491, 3.362068, 4.98091, 4.842837, 4.991251, 4.944906, 4.658297, 4.763964, 4.926114, 3.087354, 4.582787, 1.954129, 1.745095, 4.965198, 4.788836, 4.978756, 4.749852, 3.951952, 4.651524, None, 4.978131, 2.903905, 4.993961, 5.0, 4.514626, 2.848099, 3.031561, 4.986737, 4.912598, 4.241515, 4.490694, 4.832568, 4.161935, 4.46431, 4.40618, 2.665589, 2.195481, 4.106667, 4.997118, 2.99063, 4.935733, 4.297096, 4.925208, 3.028728, 4.767746, 3.970661, 4.868551, 4.921912, 4.932146, 4.953384, 3.141922, 2.691634, 4.716542, 4.810635, 4.18456, 4.957933, 4.855056, 4.405991, 3.843724, 3.096087, 2.92554, 4.986489, 2.521979, 4.803268, 4.854788, 4.994683, 4.459649, 4.885724, 4.949452, 4.962297, 4.931821, 4.541557, 3.42471, 4.509931, 3.295974, 4.698983, 4.983381, 2.951507, 3.993286, 1.83997, 4.421889, 4.999986, 2.647301, 4.744058, 4.999963, 4.740557, 1.905448, 4.857027, 4.965523, 4.879602, 4.925624, 1.301078, 4.508262, 4.323138, 3.954754, 4.573715, 4.997065, 4.387541, 3.297297, 4.58269, 3.598506, 4.830477, 4.806701, 4.442589, 4.897018, 4.980611, 4.737369, 1.736961, 4.535612, 4.837028, 2.653018, 2.976183, 4.91719, 3.030494, 4.755814, 1.834267, 3.462852, 4.999859, 4.508752, 4.506606, 4.691985, None, 4.886168, 4.74512, 4.947172, 4.918227, 2.674182, 4.992045, 4.947858, 4.862316, 4.8267, 4.625192, 2.415989, 2.36418, 3.131758, 4.798678, 4.92533, 2.627573, 2.906939, 4.936398, 4.708622, 4.782976, 3.558059, 4.891155, 4.921211, 4.726833, 3.061722, 4.775398, 4.873392, 4.474274, 4.78389, 4.50665, 3.723731, 4.510224, 2.520013, 1.527128, 3.785356, 4.671356, 1.848409, 4.801415, 2.663565, 2.959601, 4.777393, 4.852137, 4.492201, 3.688312, 3.162319, 4.580821, 4.790616, 4.988086, 4.411192, 4.583817, 4.798874, 4.993771, 4.617979, 2.710628, 4.369324, 4.80901, 3.123492, 4.88342, 3.888184, 4.962161, 4.983807, 4.413451, 3.766149, 3.109864, 4.556631, 4.818466, 4.906669, 0.97252, 3.553932, 4.858536, 4.978435, 4.205318, 4.989765, 3.945952, 4.824896, 4.85053, 3.123302, 4.998454, 4.66149, 4.570213, 3.894247, 4.975706, 3.542189, 4.941436, 4.785667, 2.473142, 4.845009, 2.720893, 1.825713, 4.677397, 4.854214, 4.804279, 4.998541, 4.971373, 4.977055, 3.956302, 4.277278, 4.9205, 4.873791, 2.382081, 4.961064, 4.512388, 2.726714, 3.047535, 3.159951, 4.878567, 4.987394, 4.859731, 4.671828, 4.119681, 2.939999, 4.987087, 2.370196, 4.253909, 4.855772, 3.097323, 3.329647, 4.670956, 4.958817, 4.96028, 2.461239, 3.88772, 3.789749, 4.957493, 4.999202, 4.943466, 3.251618, 1.631487, 4.536644, 4.987799, 4.560454, 4.819861, 4.807328, 4.806542, 4.822582, 4.268573, 4.423667, 4.895697, 4.564937, 4.888658, 4.773281, 4.848921, 2.544191, 3.408963, 4.719439, 4.970367, 4.673831, 4.705106, 4.992884, 4.987285, 4.899333, 4.589139, 4.488334, 4.97466, 4.98888, 4.704588, 4.953719, 4.5568, 4.98618, 4.817464, 3.377393, 4.905795, 4.942892, 4.487609, 4.587082, 4.63765, 4.763366, 3.812395, 1.76337, 5.0, 4.349901, 4.97626, 4.613788, 4.865395, 4.953575, 4.944085, 4.536338, 5.0, 4.872394, 3.234985, 4.818262, 4.453254, 4.881271, 4.196481, 4.681833, 2.676641, 4.754441, 4.696041, 4.573836, 2.806382, 4.993982, 4.166528, 3.170146, 4.509997, 4.963204, 4.668736, 4.830489, 4.976341, 4.847918, 4.868939, 4.767678, 4.638908, 4.988353, 3.471613, 3.9116, 4.949468, 4.932663, 4.66083, 4.808183, 4.770857, 4.897671, 4.943606, 3.88614, 4.926555, 4.996166, 4.838628, 3.227201, 4.619801, 4.369165, 4.672931, 4.85379, 4.959771, 3.560736, 4.976155, 4.48996, 4.871667, 4.976136, 4.666145, 4.920897, 4.687926, 4.726487, 4.814551, 4.857086, 4.663587, 4.990044, 4.923834, 3.350729, 4.899373, 4.986606, 4.929812, 4.870231, 4.451645, 1.559714, 4.648961, 4.908025, 4.764342, 4.827381, 2.728354, 4.483904, 4.450172, 4.798682, 3.307079, 3.895546, 4.933062, 2.435777, 4.888129, 4.652363, 4.855198, 3.60474, 4.703451, 4.787457, 4.997336, 2.393469, 4.439329, 4.991329, 4.999598, 4.795512, 4.980359, 4.88411, 4.787272, 4.80474, 4.819664, 4.536367, 4.942532, 4.678294, 4.728968, 4.859304, 4.984845, 4.598528, 4.869095, 3.541157, 4.778149, 4.952151, 4.667186, 3.972545, 3.003439, 4.807667, 4.605402, 4.965473, 4.706664, 4.484682, 3.934178, 4.674279, 4.47043, 3.699461, 4.908916, 4.927717, 4.917709, 4.971609, 4.769465, 4.841777, 4.754716, 4.95604, 4.655151, 4.868098, 4.97908, 4.798601, 3.066359, 4.205609, 4.966246, 4.952305, 4.73123, 4.864636, 4.986442, 4.696828, 3.353499, 3.106523, 4.85289, 4.800687, 4.956221, 4.334891, 4.947035, 4.759006, 3.1948, 4.713632, 3.132276, 3.089416, 4.990437, 4.772061, 4.901759, 4.794144, 3.043401, 3.097136, 3.832658, 1.847993, 3.07797, 4.611139, 4.452099, 4.47183, 4.819068, 4.704522, 4.205238, 4.997465, 3.752501, 4.589585, 4.932436, 1.587161, 4.097105, 4.92214, 4.94497, 1.8186, 3.604459, 4.763106, 4.860691, 3.015831, 4.613831, 4.340674, 2.542522, 5.0, 2.727146, 4.85584, 4.745787, 4.620365, 4.894564, 4.8745, 4.822415, 4.615278, 4.730684, 4.872857, 4.833333, 4.883215, 4.637833, 4.66375, 3.862591, 4.934196, 2.711564, 4.99926, 4.511671, 3.715857, 4.983452, 3.082055, 4.71979, 4.710722, 4.823875, 3.590632, 4.80589, 4.691973, 3.357425, 4.542052, 4.971696, 4.625185, 4.971993, 4.958958, 4.955847, 4.845278, 2.48701, 0.99372, 4.794369, 4.858365, 4.920189, 4.676892, 2.006919, 4.520056, 4.727133, 4.646622, 4.794831, 4.50392, 4.983395, 4.96138, 4.924085, 4.509954, 4.986871, 3.647178, 4.530024, 2.268604, 3.950795, 4.945131, 4.996127, 3.435163, 4.147632, 3.69367, 4.092943, 4.917678, 4.963915, 4.96085, 4.725182, 4.896673, 4.709719, 4.973901, 4.842159, 4.667558, 4.846715, 4.873069, 4.591849, 4.513567, 4.835817, 4.649873, 4.995222, 4.801535, 4.788045, 4.715194, 1.628212, 4.869471, 2.822857, 4.982998, 4.661518, 4.9235, 3.512536, 4.913349, 4.947769, 4.407715, 4.298819, 2.38994, 3.896978, 3.699898, 3.787128, 4.948368, 4.964966, 3.727847, 4.924697, 4.784425, 2.807452, 4.567233, 4.680549, 3.823319, 1.642534, 4.808777, 4.769223, 4.945237, 4.833665, 4.731192, 0.987942, 4.722994, 3.692655, 4.572918, 4.712239, 4.874696, 4.876261, 2.681259, 4.689076, 4.829399, 4.166899, 4.891508, 4.885145, 3.116059, 3.263404, 4.887875, 4.553407, 2.616093, 4.989136, 4.50048, 4.965889, 4.856986, 4.635959, 4.867855, 4.914096, 4.384905, 2.864182, 4.619175, 4.710008, 4.520794]}
2024-06-20 16:52:46,126 [DEBUG] py4...: ǀReturning 'get_table_columns':         tissue::nervous system
348165                4.946901
344068                4.921225
344071                4.868777
344065                4.859584
348162                4.856863
...                        ...
348159                4.384905
344062                2.864182
348153                4.619175
344056                4.710008
344059                4.520794

[2780 rows x 1 columns]
2024-06-20 16:52:46,127 [DEBUG] py4...: Returning 'gen_node_color_map': {'table_column': 'tissue::nervous system', 'table_column_values': [0.545455, 2.7727275, 5.0], 'colors': ['#FFF7BC', '#FEC44F', '#D95F0E'], 'mapping_type': 'c', 'default_color': None, 'style_name': 'ADCN style', 'network': None, 'base_url': 'http://127.0.0.1:1234/v1'}
2024-06-20 16:52:46,127 [DEBUG] py4...: --------------------
2024-06-20 16:52:46,127 [DEBUG] py4...: Calling set_node_color_mapping(table_column='tissue::nervous system', table_column_values=[0.545455, 2.7727275, 5.0], colors=['#FFF7BC', '#FEC44F', '#D95F0E'], mapping_type='c', default_color=None, style_name='ADCN style', network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,127 [DEBUG] py4...: ǀCalling get_table_column_names('node', network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,127 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,127 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,128 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:52:46,135 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 216957
}
],
 "errors":[]
}
2024-06-20 16:52:46,136 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 216957}]
2024-06-20 16:52:46,136 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 216957
2024-06-20 16:52:46,137 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/216957/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,137 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/216957/tables/defaultnode/columns)
2024-06-20 16:52:46,143 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"database","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::interactor score","type":"Double","immutable":false,"primaryKey":false}]
2024-06-20 16:52:46,144 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'database', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::interactor score', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:52:46,144 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', '@id', 'compartment::cytoskeleton', 'compartment::cytosol', 'compartment::endoplasmic reticulum', 'compartment::endosome', 'compartment::extracellular', 'compartment::golgi apparatus', 'compartment::lysosome', 'compartment::mitochondrion', 'compartment::nucleus', 'compartment::peroxisome', 'compartment::plasma membrane', 'display name', 'kegg_db', 'label', 'link', 'name.copy', 'query term', 'stringdb::STRING style', 'stringdb::canonical name', 'stringdb::database identifier', 'stringdb::description', 'stringdb::enhancedLabel Passthrough', 'stringdb::full name', 'stringdb::imageurl', 'stringdb::namespace', 'stringdb::node type', 'stringdb::sequence', 'stringdb::species', 'stringdb::structures', 'target::development level', 'target::family', 'tissue::adrenal gland', 'tissue::blood', 'tissue::bone', 'tissue::bone marrow', 'tissue::eye', 'tissue::gall bladder', 'tissue::heart', 'tissue::intestine', 'tissue::kidney', 'tissue::liver', 'tissue::lung', 'tissue::muscle', 'tissue::nervous system', 'tissue::pancreas', 'tissue::saliva', 'tissue::skin', 'tissue::spleen', 'tissue::stomach', 'tissue::thyroid gland', 'tissue::urine', 'type', 'uniprot', 'string_db', 'stringdb::disease score', 'Border Width', 'ChEBI', 'Color', 'Ensembl', 'GraphID', 'Label Font Size', 'Node Size', 'XrefDatasource', 'XrefId', 'wiki_db', 'database', 'stringdb::interactor score']
2024-06-20 16:52:46,145 [DEBUG] py4...: ǀCalling map_visual_property('NODE_FILL_COLOR', 'tissue::nervous system', 'c', [0.545455, 2.7727275, 5.0], ['#FFF7BC', '#FEC44F', '#D95F0E'], network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,145 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,145 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,145 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:52:46,152 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 216957
}
],
 "errors":[]
}
2024-06-20 16:52:46,153 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 216957}]
2024-06-20 16:52:46,153 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 216957
2024-06-20 16:52:46,153 [DEBUG] py4...: ǀǀCalling get_visual_property_names(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,154 [DEBUG] py4...: ǀǀǀCalling cyrest_get('styles/default/defaults', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,154 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/styles/default/defaults)
2024-06-20 16:52:46,171 [DEBUG] py4...: ǀǀǀOK[200], content: {
  "defaults" : [ {
    "visualProperty" : "COMPOUND_NODE_PADDING",
    "value" : 10.0
  }, {
    "visualProperty" : "COMPOUND_NODE_SHAPE",
    "value" : "ROUND_RECTANGLE"
  }, {
    "visualProperty" : "DING_RENDERING_ENGINE_ROOT",
    "value" : "org.cytoscape.view.presentation.property.NullVisualProperty$NullDataTypeImpl@3cddd050"
  }, {
    "visualProperty" : "EDGE",
    "value" : "DefaultVisualizableVisualProperty(id=EDGE, name=Edge Visual Property)"
  }, {
    "visualProperty" : "EDGE_BEND",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_CURVED",
    "value" : true
  }, {
    "visualProperty" : "EDGE_LABEL",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_LABEL_AUTOROTATE",
    "value" : false
  }, {
    "visualProperty" : "EDGE_LABEL_BACKGROUND_COLOR",
    "value" : "#B6B6B6"
  }, {
    "visualProperty" : "EDGE_LABEL_BACKGROUND_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "EDGE_LABEL_BACKGROUND_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "EDGE_LABEL_COLOR",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_LABEL_FONT_FACE",
    "value" : "Dialog.plain,plain,10"
  }, {
    "visualProperty" : "EDGE_LABEL_FONT_SIZE",
    "value" : 10
  }, {
    "visualProperty" : "EDGE_LABEL_POSITION",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "EDGE_LABEL_ROTATION",
    "value" : 0.0
  }, {
    "visualProperty" : "EDGE_LABEL_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "EDGE_LABEL_WIDTH",
    "value" : 200.0
  }, {
    "visualProperty" : "EDGE_LINE_TYPE",
    "value" : "SOLID"
  }, {
    "visualProperty" : "EDGE_PAINT",
    "value" : "#323232"
  }, {
    "visualProperty" : "EDGE_SELECTED",
    "value" : false
  }, {
    "visualProperty" : "EDGE_SELECTED_PAINT",
    "value" : "#FF0000"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SIZE",
    "value" : 6.0
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_UNSELECTED_PAINT",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_STACKING",
    "value" : "AUTO_BEND"
  }, {
    "visualProperty" : "EDGE_STACKING_DENSITY",
    "value" : 0.5
  }, {
    "visualProperty" : "EDGE_STROKE_SELECTED_PAINT",
    "value" : "#FF0000"
  }, {
    "visualProperty" : "EDGE_STROKE_UNSELECTED_PAINT",
    "value" : "#848484"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SIZE",
    "value" : 6.0
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_UNSELECTED_PAINT",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_TOOLTIP",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "EDGE_UNSELECTED_PAINT",
    "value" : "#404040"
  }, {
    "visualProperty" : "EDGE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "EDGE_WIDTH",
    "value" : 2.0
  }, {
    "visualProperty" : "EDGE_Z_ORDER",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK",
    "value" : "DefaultVisualizableVisualProperty(id=NETWORK, name=Network Visual Property)"
  }, {
    "visualProperty" : "NETWORK_ANNOTATION_SELECTION",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_BACKGROUND_PAINT",
    "value" : "#FFFFFF"
  }, {
    "visualProperty" : "NETWORK_CENTER_X_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_CENTER_Y_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_CENTER_Z_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_DEPTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_EDGE_SELECTION",
    "value" : true
  }, {
    "visualProperty" : "NETWORK_FORCE_HIGH_DETAIL",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_HEIGHT",
    "value" : 400.0
  }, {
    "visualProperty" : "NETWORK_NODE_LABEL_SELECTION",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_NODE_SELECTION",
    "value" : true
  }, {
    "visualProperty" : "NETWORK_SCALE_FACTOR",
    "value" : 1.0
  }, {
    "visualProperty" : "NETWORK_SIZE",
    "value" : 550.0
  }, {
    "visualProperty" : "NETWORK_TITLE",
    "value" : ""
  }, {
    "visualProperty" : "NETWORK_WIDTH",
    "value" : 550.0
  }, {
    "visualProperty" : "NODE",
    "value" : "DefaultVisualizableVisualProperty(id=NODE, name=Node Visual Property)"
  }, {
    "visualProperty" : "NODE_BORDER_PAINT",
    "value" : "#CCCCCC"
  }, {
    "visualProperty" : "NODE_BORDER_STROKE",
    "value" : "SOLID"
  }, {
    "visualProperty" : "NODE_BORDER_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_BORDER_WIDTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_1",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_2",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_3",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_4",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_5",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_6",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_7",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_8",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_9",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_1",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_2",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_3",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_4",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_5",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_6",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_7",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_8",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_9",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_1",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_2",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_3",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_4",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_5",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_6",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_7",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_8",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_9",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_1",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_1, name=Node Custom Paint 1)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_2",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_2, name=Node Custom Paint 2)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_3",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_3, name=Node Custom Paint 3)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_4",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_4, name=Node Custom Paint 4)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_5",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_5, name=Node Custom Paint 5)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_6",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_6, name=Node Custom Paint 6)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_7",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_7, name=Node Custom Paint 7)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_8",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_8, name=Node Custom Paint 8)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_9",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_9, name=Node Custom Paint 9)"
  }, {
    "visualProperty" : "NODE_DEPTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_FILL_COLOR",
    "value" : "#89D0F5"
  }, {
    "visualProperty" : "NODE_HEIGHT",
    "value" : 35.0
  }, {
    "visualProperty" : "NODE_LABEL",
    "value" : ""
  }, {
    "visualProperty" : "NODE_LABEL_BACKGROUND_COLOR",
    "value" : "#B6B6B6"
  }, {
    "visualProperty" : "NODE_LABEL_BACKGROUND_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "NODE_LABEL_BACKGROUND_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_LABEL_COLOR",
    "value" : "#000000"
  }, {
    "visualProperty" : "NODE_LABEL_FONT_FACE",
    "value" : "SansSerif.plain,plain,12"
  }, {
    "visualProperty" : "NODE_LABEL_FONT_SIZE",
    "value" : 12
  }, {
    "visualProperty" : "NODE_LABEL_POSITION",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_LABEL_ROTATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_LABEL_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_LABEL_WIDTH",
    "value" : 200.0
  }, {
    "visualProperty" : "NODE_NESTED_NETWORK_IMAGE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "NODE_PAINT",
    "value" : "#1E90FF"
  }, {
    "visualProperty" : "NODE_SELECTED",
    "value" : false
  }, {
    "visualProperty" : "NODE_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "NODE_SHAPE",
    "value" : "ROUND_RECTANGLE"
  }, {
    "visualProperty" : "NODE_SIZE",
    "value" : 35.0
  }, {
    "visualProperty" : "NODE_TOOLTIP",
    "value" : ""
  }, {
    "visualProperty" : "NODE_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "NODE_WIDTH",
    "value" : 75.0
  }, {
    "visualProperty" : "NODE_X_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_Y_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_Z_LOCATION",
    "value" : 0.0
  } ]
}
2024-06-20 16:52:46,173 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'defaults': [{'visualProperty': 'COMPOUND_NODE_PADDING', 'value': 10.0}, {'visualProperty': 'COMPOUND_NODE_SHAPE', 'value': 'ROUND_RECTANGLE'}, {'visualProperty': 'DING_RENDERING_ENGINE_ROOT', 'value': 'org.cytoscape.view.presentation.property.NullVisualProperty$NullDataTypeImpl@3cddd050'}, {'visualProperty': 'EDGE', 'value': 'DefaultVisualizableVisualProperty(id=EDGE, name=Edge Visual Property)'}, {'visualProperty': 'EDGE_BEND', 'value': ''}, {'visualProperty': 'EDGE_CURVED', 'value': True}, {'visualProperty': 'EDGE_LABEL', 'value': ''}, {'visualProperty': 'EDGE_LABEL_AUTOROTATE', 'value': False}, {'visualProperty': 'EDGE_LABEL_BACKGROUND_COLOR', 'value': '#B6B6B6'}, {'visualProperty': 'EDGE_LABEL_BACKGROUND_SHAPE', 'value': 'NONE'}, {'visualProperty': 'EDGE_LABEL_BACKGROUND_TRANSPARENCY', 'value': 255}, {'visualProperty': 'EDGE_LABEL_COLOR', 'value': '#000000'}, {'visualProperty': 'EDGE_LABEL_FONT_FACE', 'value': 'Dialog.plain,plain,10'}, {'visualProperty': 'EDGE_LABEL_FONT_SIZE', 'value': 10}, {'visualProperty': 'EDGE_LABEL_POSITION', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'EDGE_LABEL_ROTATION', 'value': 0.0}, {'visualProperty': 'EDGE_LABEL_TRANSPARENCY', 'value': 255}, {'visualProperty': 'EDGE_LABEL_WIDTH', 'value': 200.0}, {'visualProperty': 'EDGE_LINE_TYPE', 'value': 'SOLID'}, {'visualProperty': 'EDGE_PAINT', 'value': '#323232'}, {'visualProperty': 'EDGE_SELECTED', 'value': False}, {'visualProperty': 'EDGE_SELECTED_PAINT', 'value': '#FF0000'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SHAPE', 'value': 'NONE'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SIZE', 'value': 6.0}, {'visualProperty': 'EDGE_SOURCE_ARROW_UNSELECTED_PAINT', 'value': '#000000'}, {'visualProperty': 'EDGE_STACKING', 'value': 'AUTO_BEND'}, {'visualProperty': 'EDGE_STACKING_DENSITY', 'value': 0.5}, {'visualProperty': 'EDGE_STROKE_SELECTED_PAINT', 'value': '#FF0000'}, {'visualProperty': 'EDGE_STROKE_UNSELECTED_PAINT', 'value': '#848484'}, {'visualProperty': 'EDGE_TARGET_ARROW_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'EDGE_TARGET_ARROW_SHAPE', 'value': 'NONE'}, {'visualProperty': 'EDGE_TARGET_ARROW_SIZE', 'value': 6.0}, {'visualProperty': 'EDGE_TARGET_ARROW_UNSELECTED_PAINT', 'value': '#000000'}, {'visualProperty': 'EDGE_TOOLTIP', 'value': ''}, {'visualProperty': 'EDGE_TRANSPARENCY', 'value': 255}, {'visualProperty': 'EDGE_UNSELECTED_PAINT', 'value': '#404040'}, {'visualProperty': 'EDGE_VISIBLE', 'value': True}, {'visualProperty': 'EDGE_WIDTH', 'value': 2.0}, {'visualProperty': 'EDGE_Z_ORDER', 'value': 0.0}, {'visualProperty': 'NETWORK', 'value': 'DefaultVisualizableVisualProperty(id=NETWORK, name=Network Visual Property)'}, {'visualProperty': 'NETWORK_ANNOTATION_SELECTION', 'value': False}, {'visualProperty': 'NETWORK_BACKGROUND_PAINT', 'value': '#FFFFFF'}, {'visualProperty': 'NETWORK_CENTER_X_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_CENTER_Y_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_CENTER_Z_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_DEPTH', 'value': 0.0}, {'visualProperty': 'NETWORK_EDGE_SELECTION', 'value': True}, {'visualProperty': 'NETWORK_FORCE_HIGH_DETAIL', 'value': False}, {'visualProperty': 'NETWORK_HEIGHT', 'value': 400.0}, {'visualProperty': 'NETWORK_NODE_LABEL_SELECTION', 'value': False}, {'visualProperty': 'NETWORK_NODE_SELECTION', 'value': True}, {'visualProperty': 'NETWORK_SCALE_FACTOR', 'value': 1.0}, {'visualProperty': 'NETWORK_SIZE', 'value': 550.0}, {'visualProperty': 'NETWORK_TITLE', 'value': ''}, {'visualProperty': 'NETWORK_WIDTH', 'value': 550.0}, {'visualProperty': 'NODE', 'value': 'DefaultVisualizableVisualProperty(id=NODE, name=Node Visual Property)'}, {'visualProperty': 'NODE_BORDER_PAINT', 'value': '#CCCCCC'}, {'visualProperty': 'NODE_BORDER_STROKE', 'value': 'SOLID'}, {'visualProperty': 'NODE_BORDER_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_BORDER_WIDTH', 'value': 0.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_1', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_2', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_3', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_4', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_5', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_6', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_7', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_8', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_9', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_1', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_2', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_3', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_4', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_5', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_6', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_7', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_8', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_9', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_1', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_2', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_3', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_4', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_5', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_6', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_7', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_8', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_9', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMPAINT_1', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_1, name=Node Custom Paint 1)'}, {'visualProperty': 'NODE_CUSTOMPAINT_2', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_2, name=Node Custom Paint 2)'}, {'visualProperty': 'NODE_CUSTOMPAINT_3', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_3, name=Node Custom Paint 3)'}, {'visualProperty': 'NODE_CUSTOMPAINT_4', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_4, name=Node Custom Paint 4)'}, {'visualProperty': 'NODE_CUSTOMPAINT_5', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_5, name=Node Custom Paint 5)'}, {'visualProperty': 'NODE_CUSTOMPAINT_6', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_6, name=Node Custom Paint 6)'}, {'visualProperty': 'NODE_CUSTOMPAINT_7', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_7, name=Node Custom Paint 7)'}, {'visualProperty': 'NODE_CUSTOMPAINT_8', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_8, name=Node Custom Paint 8)'}, {'visualProperty': 'NODE_CUSTOMPAINT_9', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_9, name=Node Custom Paint 9)'}, {'visualProperty': 'NODE_DEPTH', 'value': 0.0}, {'visualProperty': 'NODE_FILL_COLOR', 'value': '#89D0F5'}, {'visualProperty': 'NODE_HEIGHT', 'value': 35.0}, {'visualProperty': 'NODE_LABEL', 'value': ''}, {'visualProperty': 'NODE_LABEL_BACKGROUND_COLOR', 'value': '#B6B6B6'}, {'visualProperty': 'NODE_LABEL_BACKGROUND_SHAPE', 'value': 'NONE'}, {'visualProperty': 'NODE_LABEL_BACKGROUND_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_LABEL_COLOR', 'value': '#000000'}, {'visualProperty': 'NODE_LABEL_FONT_FACE', 'value': 'SansSerif.plain,plain,12'}, {'visualProperty': 'NODE_LABEL_FONT_SIZE', 'value': 12}, {'visualProperty': 'NODE_LABEL_POSITION', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_LABEL_ROTATION', 'value': 0.0}, {'visualProperty': 'NODE_LABEL_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_LABEL_WIDTH', 'value': 200.0}, {'visualProperty': 'NODE_NESTED_NETWORK_IMAGE_VISIBLE', 'value': True}, {'visualProperty': 'NODE_PAINT', 'value': '#1E90FF'}, {'visualProperty': 'NODE_SELECTED', 'value': False}, {'visualProperty': 'NODE_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'NODE_SHAPE', 'value': 'ROUND_RECTANGLE'}, {'visualProperty': 'NODE_SIZE', 'value': 35.0}, {'visualProperty': 'NODE_TOOLTIP', 'value': ''}, {'visualProperty': 'NODE_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_VISIBLE', 'value': True}, {'visualProperty': 'NODE_WIDTH', 'value': 75.0}, {'visualProperty': 'NODE_X_LOCATION', 'value': 0.0}, {'visualProperty': 'NODE_Y_LOCATION', 'value': 0.0}, {'visualProperty': 'NODE_Z_LOCATION', 'value': 0.0}]}
2024-06-20 16:52:46,173 [DEBUG] py4...: ǀǀReturning 'get_visual_property_names': ['COMPOUND_NODE_PADDING', 'COMPOUND_NODE_SHAPE', 'DING_RENDERING_ENGINE_ROOT', 'EDGE', 'EDGE_BEND', 'EDGE_CURVED', 'EDGE_LABEL', 'EDGE_LABEL_AUTOROTATE', 'EDGE_LABEL_BACKGROUND_COLOR', 'EDGE_LABEL_BACKGROUND_SHAPE', 'EDGE_LABEL_BACKGROUND_TRANSPARENCY', 'EDGE_LABEL_COLOR', 'EDGE_LABEL_FONT_FACE', 'EDGE_LABEL_FONT_SIZE', 'EDGE_LABEL_POSITION', 'EDGE_LABEL_ROTATION', 'EDGE_LABEL_TRANSPARENCY', 'EDGE_LABEL_WIDTH', 'EDGE_LINE_TYPE', 'EDGE_PAINT', 'EDGE_SELECTED', 'EDGE_SELECTED_PAINT', 'EDGE_SOURCE_ARROW_SELECTED_PAINT', 'EDGE_SOURCE_ARROW_SHAPE', 'EDGE_SOURCE_ARROW_SIZE', 'EDGE_SOURCE_ARROW_UNSELECTED_PAINT', 'EDGE_STACKING', 'EDGE_STACKING_DENSITY', 'EDGE_STROKE_SELECTED_PAINT', 'EDGE_STROKE_UNSELECTED_PAINT', 'EDGE_TARGET_ARROW_SELECTED_PAINT', 'EDGE_TARGET_ARROW_SHAPE', 'EDGE_TARGET_ARROW_SIZE', 'EDGE_TARGET_ARROW_UNSELECTED_PAINT', 'EDGE_TOOLTIP', 'EDGE_TRANSPARENCY', 'EDGE_UNSELECTED_PAINT', 'EDGE_VISIBLE', 'EDGE_WIDTH', 'EDGE_Z_ORDER', 'NETWORK', 'NETWORK_ANNOTATION_SELECTION', 'NETWORK_BACKGROUND_PAINT', 'NETWORK_CENTER_X_LOCATION', 'NETWORK_CENTER_Y_LOCATION', 'NETWORK_CENTER_Z_LOCATION', 'NETWORK_DEPTH', 'NETWORK_EDGE_SELECTION', 'NETWORK_FORCE_HIGH_DETAIL', 'NETWORK_HEIGHT', 'NETWORK_NODE_LABEL_SELECTION', 'NETWORK_NODE_SELECTION', 'NETWORK_SCALE_FACTOR', 'NETWORK_SIZE', 'NETWORK_TITLE', 'NETWORK_WIDTH', 'NODE', 'NODE_BORDER_PAINT', 'NODE_BORDER_STROKE', 'NODE_BORDER_TRANSPARENCY', 'NODE_BORDER_WIDTH', 'NODE_CUSTOMGRAPHICS_1', 'NODE_CUSTOMGRAPHICS_2', 'NODE_CUSTOMGRAPHICS_3', 'NODE_CUSTOMGRAPHICS_4', 'NODE_CUSTOMGRAPHICS_5', 'NODE_CUSTOMGRAPHICS_6', 'NODE_CUSTOMGRAPHICS_7', 'NODE_CUSTOMGRAPHICS_8', 'NODE_CUSTOMGRAPHICS_9', 'NODE_CUSTOMGRAPHICS_POSITION_1', 'NODE_CUSTOMGRAPHICS_POSITION_2', 'NODE_CUSTOMGRAPHICS_POSITION_3', 'NODE_CUSTOMGRAPHICS_POSITION_4', 'NODE_CUSTOMGRAPHICS_POSITION_5', 'NODE_CUSTOMGRAPHICS_POSITION_6', 'NODE_CUSTOMGRAPHICS_POSITION_7', 'NODE_CUSTOMGRAPHICS_POSITION_8', 'NODE_CUSTOMGRAPHICS_POSITION_9', 'NODE_CUSTOMGRAPHICS_SIZE_1', 'NODE_CUSTOMGRAPHICS_SIZE_2', 'NODE_CUSTOMGRAPHICS_SIZE_3', 'NODE_CUSTOMGRAPHICS_SIZE_4', 'NODE_CUSTOMGRAPHICS_SIZE_5', 'NODE_CUSTOMGRAPHICS_SIZE_6', 'NODE_CUSTOMGRAPHICS_SIZE_7', 'NODE_CUSTOMGRAPHICS_SIZE_8', 'NODE_CUSTOMGRAPHICS_SIZE_9', 'NODE_CUSTOMPAINT_1', 'NODE_CUSTOMPAINT_2', 'NODE_CUSTOMPAINT_3', 'NODE_CUSTOMPAINT_4', 'NODE_CUSTOMPAINT_5', 'NODE_CUSTOMPAINT_6', 'NODE_CUSTOMPAINT_7', 'NODE_CUSTOMPAINT_8', 'NODE_CUSTOMPAINT_9', 'NODE_DEPTH', 'NODE_FILL_COLOR', 'NODE_HEIGHT', 'NODE_LABEL', 'NODE_LABEL_BACKGROUND_COLOR', 'NODE_LABEL_BACKGROUND_SHAPE', 'NODE_LABEL_BACKGROUND_TRANSPARENCY', 'NODE_LABEL_COLOR', 'NODE_LABEL_FONT_FACE', 'NODE_LABEL_FONT_SIZE', 'NODE_LABEL_POSITION', 'NODE_LABEL_ROTATION', 'NODE_LABEL_TRANSPARENCY', 'NODE_LABEL_WIDTH', 'NODE_NESTED_NETWORK_IMAGE_VISIBLE', 'NODE_PAINT', 'NODE_SELECTED', 'NODE_SELECTED_PAINT', 'NODE_SHAPE', 'NODE_SIZE', 'NODE_TOOLTIP', 'NODE_TRANSPARENCY', 'NODE_VISIBLE', 'NODE_WIDTH', 'NODE_X_LOCATION', 'NODE_Y_LOCATION', 'NODE_Z_LOCATION']
2024-06-20 16:52:46,173 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/216957/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,174 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/216957/tables/defaultnode/columns)
2024-06-20 16:52:46,179 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"database","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::interactor score","type":"Double","immutable":false,"primaryKey":false}]
2024-06-20 16:52:46,180 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'database', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::interactor score', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:52:46,181 [DEBUG] py4...: ǀReturning 'map_visual_property': {'mappingType': 'continuous', 'mappingColumn': 'tissue::nervous system', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': 0.545455, 'lesser': '#FFF7BC', 'equal': '#FFF7BC', 'greater': '#FFF7BC'}, {'value': 2.7727275, 'lesser': '#FEC44F', 'equal': '#FEC44F', 'greater': '#FEC44F'}, {'value': 5.0, 'lesser': '#D95F0E', 'equal': '#D95F0E', 'greater': '#D95F0E'}]}
2024-06-20 16:52:46,182 [DEBUG] py4...: ǀCalling update_style_mapping('ADCN style', {'mappingType': 'continuous', 'mappingColumn': 'tissue::nervous system', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': 0.545455, 'lesser': '#FFF7BC', 'equal': '#FFF7BC', 'greater': '#FFF7BC'}, {'value': 2.7727275, 'lesser': '#FEC44F', 'equal': '#FEC44F', 'greater': '#FEC44F'}, {'value': 5.0, 'lesser': '#D95F0E', 'equal': '#D95F0E', 'greater': '#D95F0E'}]}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,182 [DEBUG] py4...: ǀǀCalling cyrest_get('styles/ADCN style/mappings', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:46,182 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/styles/ADCN%20style/mappings)
2024-06-20 16:52:46,189 [DEBUG] py4...: ǀǀOK[200], content: []
2024-06-20 16:52:46,190 [DEBUG] py4...: ǀǀReturning 'cyrest_get': []
2024-06-20 16:52:46,190 [DEBUG] py4...: ǀǀCalling cyrest_post('styles/ADCN style/mappings', body=[{'mappingType': 'continuous', 'mappingColumn': 'tissue::nervous system', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': 0.545455, 'lesser': '#FFF7BC', 'equal': '#FFF7BC', 'greater': '#FFF7BC'}, {'value': 2.7727275, 'lesser': '#FEC44F', 'equal': '#FEC44F', 'greater': '#FEC44F'}, {'value': 5.0, 'lesser': '#D95F0E', 'equal': '#D95F0E', 'greater': '#D95F0E'}]}], base_url='http://127.0.0.1:1234/v1', require_json=False)
2024-06-20 16:52:46,191 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/styles/ADCN%20style/mappings), json: [{'mappingType': 'continuous', 'mappingColumn': 'tissue::nervous system', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': 0.545455, 'lesser': '#FFF7BC', 'equal': '#FFF7BC', 'greater': '#FFF7BC'}, {'value': 2.7727275, 'lesser': '#FEC44F', 'equal': '#FEC44F', 'greater': '#FEC44F'}, {'value': 5.0, 'lesser': '#D95F0E', 'equal': '#D95F0E', 'greater': '#D95F0E'}]}]
2024-06-20 16:52:46,203 [DEBUG] py4...: ǀǀCreated[201], content: 
2024-06-20 16:52:46,204 [DEBUG] py4...: ǀǀReturning 'cyrest_post': ''
2024-06-20 16:52:48,205 [DEBUG] py4...: ǀReturning 'update_style_mapping': ''
2024-06-20 16:52:48,206 [DEBUG] py4...: Returning 'set_node_color_mapping': ''
2024-06-20 16:52:48,207 [DEBUG] py4...: --------------------
2024-06-20 16:52:51,787 [DEBUG] py4...: Calling set_node_shape_mapping(table_column='database', table_column_values=['kegg', 'string', 'wiki', 'kegg;string', 'kegg;wiki', 'wiki;string', 'kegg;wiki;string'], shapes=['HEXAGON', 'ROUND_RECTANGLE', 'VEE', 'PARALLELOGRAM', 'DIAMOND', 'ELLIPSE', 'TRIANGLE'], default_shape='RECTANGLE', style_name='ADCN style')
2024-06-20 16:52:51,788 [DEBUG] py4...: ǀCalling set_node_shape_default('RECTANGLE', 'ADCN style', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:51,788 [DEBUG] py4...: ǀǀCalling set_visual_property_default({'visualProperty': 'NODE_SHAPE', 'value': 'RECTANGLE'}, 'ADCN style', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:51,789 [DEBUG] py4...: ǀǀǀCalling get_node_shapes(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:51,789 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('styles/visualproperties/NODE_SHAPE/values', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:51,789 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/styles/visualproperties/NODE_SHAPE/values)
2024-06-20 16:52:51,795 [DEBUG] py4...: ǀǀǀǀOK[200], content: {
  "visualProperty" : "NODE_SHAPE",
  "values" : [ "RECTANGLE", "ROUND_RECTANGLE", "PARALLELOGRAM", "TRIANGLE", "ELLIPSE", "OCTAGON", "HEXAGON", "VEE", "DIAMOND" ]
}
2024-06-20 16:52:51,796 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': {'visualProperty': 'NODE_SHAPE', 'values': ['RECTANGLE', 'ROUND_RECTANGLE', 'PARALLELOGRAM', 'TRIANGLE', 'ELLIPSE', 'OCTAGON', 'HEXAGON', 'VEE', 'DIAMOND']}
2024-06-20 16:52:51,796 [DEBUG] py4...: ǀǀǀReturning 'get_node_shapes': ['RECTANGLE', 'ROUND_RECTANGLE', 'PARALLELOGRAM', 'TRIANGLE', 'ELLIPSE', 'OCTAGON', 'HEXAGON', 'VEE', 'DIAMOND']
2024-06-20 16:52:51,796 [DEBUG] py4...: ǀǀǀCalling cyrest_put('styles/ADCN style/defaults', body=[{'visualProperty': 'NODE_SHAPE', 'value': 'RECTANGLE'}], base_url='http://127.0.0.1:1234/v1', require_json=False)
2024-06-20 16:52:51,796 [DEBUG] py4...: ǀǀǀHTTP PUT(http://127.0.0.1:1234/v1/styles/ADCN%20style/defaults), json: [{'visualProperty': 'NODE_SHAPE', 'value': 'RECTANGLE'}]
2024-06-20 16:52:51,813 [DEBUG] py4...: ǀǀǀOK[200], content: 
2024-06-20 16:52:51,814 [DEBUG] py4...: ǀǀǀReturning 'cyrest_put': ''
2024-06-20 16:52:53,815 [DEBUG] py4...: ǀǀReturning 'set_visual_property_default': ''
2024-06-20 16:52:53,816 [DEBUG] py4...: ǀReturning 'set_node_shape_default': ''
2024-06-20 16:52:53,817 [DEBUG] py4...: ǀCalling get_table_column_names('node', network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,817 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,818 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,819 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:52:53,831 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 216957
}
],
 "errors":[]
}
2024-06-20 16:52:53,832 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 216957}]
2024-06-20 16:52:53,832 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 216957
2024-06-20 16:52:53,833 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/216957/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,833 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/216957/tables/defaultnode/columns)
2024-06-20 16:52:53,839 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"database","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::interactor score","type":"Double","immutable":false,"primaryKey":false}]
2024-06-20 16:52:53,840 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'database', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::interactor score', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:52:53,840 [DEBUG] py4...: ǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', '@id', 'compartment::cytoskeleton', 'compartment::cytosol', 'compartment::endoplasmic reticulum', 'compartment::endosome', 'compartment::extracellular', 'compartment::golgi apparatus', 'compartment::lysosome', 'compartment::mitochondrion', 'compartment::nucleus', 'compartment::peroxisome', 'compartment::plasma membrane', 'display name', 'kegg_db', 'label', 'link', 'name.copy', 'query term', 'stringdb::STRING style', 'stringdb::canonical name', 'stringdb::database identifier', 'stringdb::description', 'stringdb::enhancedLabel Passthrough', 'stringdb::full name', 'stringdb::imageurl', 'stringdb::namespace', 'stringdb::node type', 'stringdb::sequence', 'stringdb::species', 'stringdb::structures', 'target::development level', 'target::family', 'tissue::adrenal gland', 'tissue::blood', 'tissue::bone', 'tissue::bone marrow', 'tissue::eye', 'tissue::gall bladder', 'tissue::heart', 'tissue::intestine', 'tissue::kidney', 'tissue::liver', 'tissue::lung', 'tissue::muscle', 'tissue::nervous system', 'tissue::pancreas', 'tissue::saliva', 'tissue::skin', 'tissue::spleen', 'tissue::stomach', 'tissue::thyroid gland', 'tissue::urine', 'type', 'uniprot', 'string_db', 'stringdb::disease score', 'Border Width', 'ChEBI', 'Color', 'Ensembl', 'GraphID', 'Label Font Size', 'Node Size', 'XrefDatasource', 'XrefId', 'wiki_db', 'database', 'stringdb::interactor score']
2024-06-20 16:52:53,840 [DEBUG] py4...: ǀCalling map_visual_property('NODE_SHAPE', 'database', 'd', ['kegg', 'string', 'wiki', 'kegg;string', 'kegg;wiki', 'wiki;string', 'kegg;wiki;string'], ['HEXAGON', 'ROUND_RECTANGLE', 'VEE', 'PARALLELOGRAM', 'DIAMOND', 'ELLIPSE', 'TRIANGLE'], network=None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,840 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,842 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,842 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-06-20 16:52:53,848 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 216957
}
],
 "errors":[]
}
2024-06-20 16:52:53,849 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 216957}]
2024-06-20 16:52:53,849 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 216957
2024-06-20 16:52:53,849 [DEBUG] py4...: ǀǀCalling get_visual_property_names(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,849 [DEBUG] py4...: ǀǀǀCalling cyrest_get('styles/default/defaults', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,849 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/styles/default/defaults)
2024-06-20 16:52:53,855 [DEBUG] py4...: ǀǀǀOK[200], content: {
  "defaults" : [ {
    "visualProperty" : "COMPOUND_NODE_PADDING",
    "value" : 10.0
  }, {
    "visualProperty" : "COMPOUND_NODE_SHAPE",
    "value" : "ROUND_RECTANGLE"
  }, {
    "visualProperty" : "DING_RENDERING_ENGINE_ROOT",
    "value" : "org.cytoscape.view.presentation.property.NullVisualProperty$NullDataTypeImpl@3cddd050"
  }, {
    "visualProperty" : "EDGE",
    "value" : "DefaultVisualizableVisualProperty(id=EDGE, name=Edge Visual Property)"
  }, {
    "visualProperty" : "EDGE_BEND",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_CURVED",
    "value" : true
  }, {
    "visualProperty" : "EDGE_LABEL",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_LABEL_AUTOROTATE",
    "value" : false
  }, {
    "visualProperty" : "EDGE_LABEL_BACKGROUND_COLOR",
    "value" : "#B6B6B6"
  }, {
    "visualProperty" : "EDGE_LABEL_BACKGROUND_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "EDGE_LABEL_BACKGROUND_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "EDGE_LABEL_COLOR",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_LABEL_FONT_FACE",
    "value" : "Dialog.plain,plain,10"
  }, {
    "visualProperty" : "EDGE_LABEL_FONT_SIZE",
    "value" : 10
  }, {
    "visualProperty" : "EDGE_LABEL_POSITION",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "EDGE_LABEL_ROTATION",
    "value" : 0.0
  }, {
    "visualProperty" : "EDGE_LABEL_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "EDGE_LABEL_WIDTH",
    "value" : 200.0
  }, {
    "visualProperty" : "EDGE_LINE_TYPE",
    "value" : "SOLID"
  }, {
    "visualProperty" : "EDGE_PAINT",
    "value" : "#323232"
  }, {
    "visualProperty" : "EDGE_SELECTED",
    "value" : false
  }, {
    "visualProperty" : "EDGE_SELECTED_PAINT",
    "value" : "#FF0000"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SIZE",
    "value" : 6.0
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_UNSELECTED_PAINT",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_STACKING",
    "value" : "AUTO_BEND"
  }, {
    "visualProperty" : "EDGE_STACKING_DENSITY",
    "value" : 0.5
  }, {
    "visualProperty" : "EDGE_STROKE_SELECTED_PAINT",
    "value" : "#FF0000"
  }, {
    "visualProperty" : "EDGE_STROKE_UNSELECTED_PAINT",
    "value" : "#848484"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SIZE",
    "value" : 6.0
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_UNSELECTED_PAINT",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_TOOLTIP",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "EDGE_UNSELECTED_PAINT",
    "value" : "#404040"
  }, {
    "visualProperty" : "EDGE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "EDGE_WIDTH",
    "value" : 2.0
  }, {
    "visualProperty" : "EDGE_Z_ORDER",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK",
    "value" : "DefaultVisualizableVisualProperty(id=NETWORK, name=Network Visual Property)"
  }, {
    "visualProperty" : "NETWORK_ANNOTATION_SELECTION",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_BACKGROUND_PAINT",
    "value" : "#FFFFFF"
  }, {
    "visualProperty" : "NETWORK_CENTER_X_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_CENTER_Y_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_CENTER_Z_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_DEPTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_EDGE_SELECTION",
    "value" : true
  }, {
    "visualProperty" : "NETWORK_FORCE_HIGH_DETAIL",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_HEIGHT",
    "value" : 400.0
  }, {
    "visualProperty" : "NETWORK_NODE_LABEL_SELECTION",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_NODE_SELECTION",
    "value" : true
  }, {
    "visualProperty" : "NETWORK_SCALE_FACTOR",
    "value" : 1.0
  }, {
    "visualProperty" : "NETWORK_SIZE",
    "value" : 550.0
  }, {
    "visualProperty" : "NETWORK_TITLE",
    "value" : ""
  }, {
    "visualProperty" : "NETWORK_WIDTH",
    "value" : 550.0
  }, {
    "visualProperty" : "NODE",
    "value" : "DefaultVisualizableVisualProperty(id=NODE, name=Node Visual Property)"
  }, {
    "visualProperty" : "NODE_BORDER_PAINT",
    "value" : "#CCCCCC"
  }, {
    "visualProperty" : "NODE_BORDER_STROKE",
    "value" : "SOLID"
  }, {
    "visualProperty" : "NODE_BORDER_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_BORDER_WIDTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_1",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_2",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_3",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_4",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_5",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_6",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_7",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_8",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_9",
    "value" : "org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_1",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_2",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_3",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_4",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_5",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_6",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_7",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_8",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_9",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_1",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_2",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_3",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_4",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_5",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_6",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_7",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_8",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_9",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_1",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_1, name=Node Custom Paint 1)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_2",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_2, name=Node Custom Paint 2)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_3",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_3, name=Node Custom Paint 3)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_4",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_4, name=Node Custom Paint 4)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_5",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_5, name=Node Custom Paint 5)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_6",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_6, name=Node Custom Paint 6)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_7",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_7, name=Node Custom Paint 7)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_8",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_8, name=Node Custom Paint 8)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_9",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_9, name=Node Custom Paint 9)"
  }, {
    "visualProperty" : "NODE_DEPTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_FILL_COLOR",
    "value" : "#89D0F5"
  }, {
    "visualProperty" : "NODE_HEIGHT",
    "value" : 35.0
  }, {
    "visualProperty" : "NODE_LABEL",
    "value" : ""
  }, {
    "visualProperty" : "NODE_LABEL_BACKGROUND_COLOR",
    "value" : "#B6B6B6"
  }, {
    "visualProperty" : "NODE_LABEL_BACKGROUND_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "NODE_LABEL_BACKGROUND_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_LABEL_COLOR",
    "value" : "#000000"
  }, {
    "visualProperty" : "NODE_LABEL_FONT_FACE",
    "value" : "SansSerif.plain,plain,12"
  }, {
    "visualProperty" : "NODE_LABEL_FONT_SIZE",
    "value" : 12
  }, {
    "visualProperty" : "NODE_LABEL_POSITION",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_LABEL_ROTATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_LABEL_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_LABEL_WIDTH",
    "value" : 200.0
  }, {
    "visualProperty" : "NODE_NESTED_NETWORK_IMAGE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "NODE_PAINT",
    "value" : "#1E90FF"
  }, {
    "visualProperty" : "NODE_SELECTED",
    "value" : false
  }, {
    "visualProperty" : "NODE_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "NODE_SHAPE",
    "value" : "ROUND_RECTANGLE"
  }, {
    "visualProperty" : "NODE_SIZE",
    "value" : 35.0
  }, {
    "visualProperty" : "NODE_TOOLTIP",
    "value" : ""
  }, {
    "visualProperty" : "NODE_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "NODE_WIDTH",
    "value" : 75.0
  }, {
    "visualProperty" : "NODE_X_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_Y_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_Z_LOCATION",
    "value" : 0.0
  } ]
}
2024-06-20 16:52:53,855 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'defaults': [{'visualProperty': 'COMPOUND_NODE_PADDING', 'value': 10.0}, {'visualProperty': 'COMPOUND_NODE_SHAPE', 'value': 'ROUND_RECTANGLE'}, {'visualProperty': 'DING_RENDERING_ENGINE_ROOT', 'value': 'org.cytoscape.view.presentation.property.NullVisualProperty$NullDataTypeImpl@3cddd050'}, {'visualProperty': 'EDGE', 'value': 'DefaultVisualizableVisualProperty(id=EDGE, name=Edge Visual Property)'}, {'visualProperty': 'EDGE_BEND', 'value': ''}, {'visualProperty': 'EDGE_CURVED', 'value': True}, {'visualProperty': 'EDGE_LABEL', 'value': ''}, {'visualProperty': 'EDGE_LABEL_AUTOROTATE', 'value': False}, {'visualProperty': 'EDGE_LABEL_BACKGROUND_COLOR', 'value': '#B6B6B6'}, {'visualProperty': 'EDGE_LABEL_BACKGROUND_SHAPE', 'value': 'NONE'}, {'visualProperty': 'EDGE_LABEL_BACKGROUND_TRANSPARENCY', 'value': 255}, {'visualProperty': 'EDGE_LABEL_COLOR', 'value': '#000000'}, {'visualProperty': 'EDGE_LABEL_FONT_FACE', 'value': 'Dialog.plain,plain,10'}, {'visualProperty': 'EDGE_LABEL_FONT_SIZE', 'value': 10}, {'visualProperty': 'EDGE_LABEL_POSITION', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'EDGE_LABEL_ROTATION', 'value': 0.0}, {'visualProperty': 'EDGE_LABEL_TRANSPARENCY', 'value': 255}, {'visualProperty': 'EDGE_LABEL_WIDTH', 'value': 200.0}, {'visualProperty': 'EDGE_LINE_TYPE', 'value': 'SOLID'}, {'visualProperty': 'EDGE_PAINT', 'value': '#323232'}, {'visualProperty': 'EDGE_SELECTED', 'value': False}, {'visualProperty': 'EDGE_SELECTED_PAINT', 'value': '#FF0000'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SHAPE', 'value': 'NONE'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SIZE', 'value': 6.0}, {'visualProperty': 'EDGE_SOURCE_ARROW_UNSELECTED_PAINT', 'value': '#000000'}, {'visualProperty': 'EDGE_STACKING', 'value': 'AUTO_BEND'}, {'visualProperty': 'EDGE_STACKING_DENSITY', 'value': 0.5}, {'visualProperty': 'EDGE_STROKE_SELECTED_PAINT', 'value': '#FF0000'}, {'visualProperty': 'EDGE_STROKE_UNSELECTED_PAINT', 'value': '#848484'}, {'visualProperty': 'EDGE_TARGET_ARROW_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'EDGE_TARGET_ARROW_SHAPE', 'value': 'NONE'}, {'visualProperty': 'EDGE_TARGET_ARROW_SIZE', 'value': 6.0}, {'visualProperty': 'EDGE_TARGET_ARROW_UNSELECTED_PAINT', 'value': '#000000'}, {'visualProperty': 'EDGE_TOOLTIP', 'value': ''}, {'visualProperty': 'EDGE_TRANSPARENCY', 'value': 255}, {'visualProperty': 'EDGE_UNSELECTED_PAINT', 'value': '#404040'}, {'visualProperty': 'EDGE_VISIBLE', 'value': True}, {'visualProperty': 'EDGE_WIDTH', 'value': 2.0}, {'visualProperty': 'EDGE_Z_ORDER', 'value': 0.0}, {'visualProperty': 'NETWORK', 'value': 'DefaultVisualizableVisualProperty(id=NETWORK, name=Network Visual Property)'}, {'visualProperty': 'NETWORK_ANNOTATION_SELECTION', 'value': False}, {'visualProperty': 'NETWORK_BACKGROUND_PAINT', 'value': '#FFFFFF'}, {'visualProperty': 'NETWORK_CENTER_X_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_CENTER_Y_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_CENTER_Z_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_DEPTH', 'value': 0.0}, {'visualProperty': 'NETWORK_EDGE_SELECTION', 'value': True}, {'visualProperty': 'NETWORK_FORCE_HIGH_DETAIL', 'value': False}, {'visualProperty': 'NETWORK_HEIGHT', 'value': 400.0}, {'visualProperty': 'NETWORK_NODE_LABEL_SELECTION', 'value': False}, {'visualProperty': 'NETWORK_NODE_SELECTION', 'value': True}, {'visualProperty': 'NETWORK_SCALE_FACTOR', 'value': 1.0}, {'visualProperty': 'NETWORK_SIZE', 'value': 550.0}, {'visualProperty': 'NETWORK_TITLE', 'value': ''}, {'visualProperty': 'NETWORK_WIDTH', 'value': 550.0}, {'visualProperty': 'NODE', 'value': 'DefaultVisualizableVisualProperty(id=NODE, name=Node Visual Property)'}, {'visualProperty': 'NODE_BORDER_PAINT', 'value': '#CCCCCC'}, {'visualProperty': 'NODE_BORDER_STROKE', 'value': 'SOLID'}, {'visualProperty': 'NODE_BORDER_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_BORDER_WIDTH', 'value': 0.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_1', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_2', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_3', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_4', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_5', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_6', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_7', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_8', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_9', 'value': 'org.cytoscape.cg.model.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_1', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_2', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_3', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_4', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_5', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_6', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_7', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_8', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_9', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_1', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_2', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_3', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_4', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_5', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_6', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_7', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_8', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_9', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMPAINT_1', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_1, name=Node Custom Paint 1)'}, {'visualProperty': 'NODE_CUSTOMPAINT_2', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_2, name=Node Custom Paint 2)'}, {'visualProperty': 'NODE_CUSTOMPAINT_3', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_3, name=Node Custom Paint 3)'}, {'visualProperty': 'NODE_CUSTOMPAINT_4', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_4, name=Node Custom Paint 4)'}, {'visualProperty': 'NODE_CUSTOMPAINT_5', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_5, name=Node Custom Paint 5)'}, {'visualProperty': 'NODE_CUSTOMPAINT_6', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_6, name=Node Custom Paint 6)'}, {'visualProperty': 'NODE_CUSTOMPAINT_7', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_7, name=Node Custom Paint 7)'}, {'visualProperty': 'NODE_CUSTOMPAINT_8', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_8, name=Node Custom Paint 8)'}, {'visualProperty': 'NODE_CUSTOMPAINT_9', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_9, name=Node Custom Paint 9)'}, {'visualProperty': 'NODE_DEPTH', 'value': 0.0}, {'visualProperty': 'NODE_FILL_COLOR', 'value': '#89D0F5'}, {'visualProperty': 'NODE_HEIGHT', 'value': 35.0}, {'visualProperty': 'NODE_LABEL', 'value': ''}, {'visualProperty': 'NODE_LABEL_BACKGROUND_COLOR', 'value': '#B6B6B6'}, {'visualProperty': 'NODE_LABEL_BACKGROUND_SHAPE', 'value': 'NONE'}, {'visualProperty': 'NODE_LABEL_BACKGROUND_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_LABEL_COLOR', 'value': '#000000'}, {'visualProperty': 'NODE_LABEL_FONT_FACE', 'value': 'SansSerif.plain,plain,12'}, {'visualProperty': 'NODE_LABEL_FONT_SIZE', 'value': 12}, {'visualProperty': 'NODE_LABEL_POSITION', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_LABEL_ROTATION', 'value': 0.0}, {'visualProperty': 'NODE_LABEL_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_LABEL_WIDTH', 'value': 200.0}, {'visualProperty': 'NODE_NESTED_NETWORK_IMAGE_VISIBLE', 'value': True}, {'visualProperty': 'NODE_PAINT', 'value': '#1E90FF'}, {'visualProperty': 'NODE_SELECTED', 'value': False}, {'visualProperty': 'NODE_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'NODE_SHAPE', 'value': 'ROUND_RECTANGLE'}, {'visualProperty': 'NODE_SIZE', 'value': 35.0}, {'visualProperty': 'NODE_TOOLTIP', 'value': ''}, {'visualProperty': 'NODE_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_VISIBLE', 'value': True}, {'visualProperty': 'NODE_WIDTH', 'value': 75.0}, {'visualProperty': 'NODE_X_LOCATION', 'value': 0.0}, {'visualProperty': 'NODE_Y_LOCATION', 'value': 0.0}, {'visualProperty': 'NODE_Z_LOCATION', 'value': 0.0}]}
2024-06-20 16:52:53,855 [DEBUG] py4...: ǀǀReturning 'get_visual_property_names': ['COMPOUND_NODE_PADDING', 'COMPOUND_NODE_SHAPE', 'DING_RENDERING_ENGINE_ROOT', 'EDGE', 'EDGE_BEND', 'EDGE_CURVED', 'EDGE_LABEL', 'EDGE_LABEL_AUTOROTATE', 'EDGE_LABEL_BACKGROUND_COLOR', 'EDGE_LABEL_BACKGROUND_SHAPE', 'EDGE_LABEL_BACKGROUND_TRANSPARENCY', 'EDGE_LABEL_COLOR', 'EDGE_LABEL_FONT_FACE', 'EDGE_LABEL_FONT_SIZE', 'EDGE_LABEL_POSITION', 'EDGE_LABEL_ROTATION', 'EDGE_LABEL_TRANSPARENCY', 'EDGE_LABEL_WIDTH', 'EDGE_LINE_TYPE', 'EDGE_PAINT', 'EDGE_SELECTED', 'EDGE_SELECTED_PAINT', 'EDGE_SOURCE_ARROW_SELECTED_PAINT', 'EDGE_SOURCE_ARROW_SHAPE', 'EDGE_SOURCE_ARROW_SIZE', 'EDGE_SOURCE_ARROW_UNSELECTED_PAINT', 'EDGE_STACKING', 'EDGE_STACKING_DENSITY', 'EDGE_STROKE_SELECTED_PAINT', 'EDGE_STROKE_UNSELECTED_PAINT', 'EDGE_TARGET_ARROW_SELECTED_PAINT', 'EDGE_TARGET_ARROW_SHAPE', 'EDGE_TARGET_ARROW_SIZE', 'EDGE_TARGET_ARROW_UNSELECTED_PAINT', 'EDGE_TOOLTIP', 'EDGE_TRANSPARENCY', 'EDGE_UNSELECTED_PAINT', 'EDGE_VISIBLE', 'EDGE_WIDTH', 'EDGE_Z_ORDER', 'NETWORK', 'NETWORK_ANNOTATION_SELECTION', 'NETWORK_BACKGROUND_PAINT', 'NETWORK_CENTER_X_LOCATION', 'NETWORK_CENTER_Y_LOCATION', 'NETWORK_CENTER_Z_LOCATION', 'NETWORK_DEPTH', 'NETWORK_EDGE_SELECTION', 'NETWORK_FORCE_HIGH_DETAIL', 'NETWORK_HEIGHT', 'NETWORK_NODE_LABEL_SELECTION', 'NETWORK_NODE_SELECTION', 'NETWORK_SCALE_FACTOR', 'NETWORK_SIZE', 'NETWORK_TITLE', 'NETWORK_WIDTH', 'NODE', 'NODE_BORDER_PAINT', 'NODE_BORDER_STROKE', 'NODE_BORDER_TRANSPARENCY', 'NODE_BORDER_WIDTH', 'NODE_CUSTOMGRAPHICS_1', 'NODE_CUSTOMGRAPHICS_2', 'NODE_CUSTOMGRAPHICS_3', 'NODE_CUSTOMGRAPHICS_4', 'NODE_CUSTOMGRAPHICS_5', 'NODE_CUSTOMGRAPHICS_6', 'NODE_CUSTOMGRAPHICS_7', 'NODE_CUSTOMGRAPHICS_8', 'NODE_CUSTOMGRAPHICS_9', 'NODE_CUSTOMGRAPHICS_POSITION_1', 'NODE_CUSTOMGRAPHICS_POSITION_2', 'NODE_CUSTOMGRAPHICS_POSITION_3', 'NODE_CUSTOMGRAPHICS_POSITION_4', 'NODE_CUSTOMGRAPHICS_POSITION_5', 'NODE_CUSTOMGRAPHICS_POSITION_6', 'NODE_CUSTOMGRAPHICS_POSITION_7', 'NODE_CUSTOMGRAPHICS_POSITION_8', 'NODE_CUSTOMGRAPHICS_POSITION_9', 'NODE_CUSTOMGRAPHICS_SIZE_1', 'NODE_CUSTOMGRAPHICS_SIZE_2', 'NODE_CUSTOMGRAPHICS_SIZE_3', 'NODE_CUSTOMGRAPHICS_SIZE_4', 'NODE_CUSTOMGRAPHICS_SIZE_5', 'NODE_CUSTOMGRAPHICS_SIZE_6', 'NODE_CUSTOMGRAPHICS_SIZE_7', 'NODE_CUSTOMGRAPHICS_SIZE_8', 'NODE_CUSTOMGRAPHICS_SIZE_9', 'NODE_CUSTOMPAINT_1', 'NODE_CUSTOMPAINT_2', 'NODE_CUSTOMPAINT_3', 'NODE_CUSTOMPAINT_4', 'NODE_CUSTOMPAINT_5', 'NODE_CUSTOMPAINT_6', 'NODE_CUSTOMPAINT_7', 'NODE_CUSTOMPAINT_8', 'NODE_CUSTOMPAINT_9', 'NODE_DEPTH', 'NODE_FILL_COLOR', 'NODE_HEIGHT', 'NODE_LABEL', 'NODE_LABEL_BACKGROUND_COLOR', 'NODE_LABEL_BACKGROUND_SHAPE', 'NODE_LABEL_BACKGROUND_TRANSPARENCY', 'NODE_LABEL_COLOR', 'NODE_LABEL_FONT_FACE', 'NODE_LABEL_FONT_SIZE', 'NODE_LABEL_POSITION', 'NODE_LABEL_ROTATION', 'NODE_LABEL_TRANSPARENCY', 'NODE_LABEL_WIDTH', 'NODE_NESTED_NETWORK_IMAGE_VISIBLE', 'NODE_PAINT', 'NODE_SELECTED', 'NODE_SELECTED_PAINT', 'NODE_SHAPE', 'NODE_SIZE', 'NODE_TOOLTIP', 'NODE_TRANSPARENCY', 'NODE_VISIBLE', 'NODE_WIDTH', 'NODE_X_LOCATION', 'NODE_Y_LOCATION', 'NODE_Z_LOCATION']
2024-06-20 16:52:53,856 [DEBUG] py4...: ǀǀCalling get_node_shapes(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,856 [DEBUG] py4...: ǀǀǀCalling cyrest_get('styles/visualproperties/NODE_SHAPE/values', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,856 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/styles/visualproperties/NODE_SHAPE/values)
2024-06-20 16:52:53,860 [DEBUG] py4...: ǀǀǀOK[200], content: {
  "visualProperty" : "NODE_SHAPE",
  "values" : [ "RECTANGLE", "ROUND_RECTANGLE", "PARALLELOGRAM", "TRIANGLE", "ELLIPSE", "OCTAGON", "HEXAGON", "VEE", "DIAMOND" ]
}
2024-06-20 16:52:53,861 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'visualProperty': 'NODE_SHAPE', 'values': ['RECTANGLE', 'ROUND_RECTANGLE', 'PARALLELOGRAM', 'TRIANGLE', 'ELLIPSE', 'OCTAGON', 'HEXAGON', 'VEE', 'DIAMOND']}
2024-06-20 16:52:53,861 [DEBUG] py4...: ǀǀReturning 'get_node_shapes': ['RECTANGLE', 'ROUND_RECTANGLE', 'PARALLELOGRAM', 'TRIANGLE', 'ELLIPSE', 'OCTAGON', 'HEXAGON', 'VEE', 'DIAMOND']
2024-06-20 16:52:53,861 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/216957/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,862 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/216957/tables/defaultnode/columns)
2024-06-20 16:52:53,866 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"@id","type":"String","immutable":false,"primaryKey":false},{"name":"compartment::cytoskeleton","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::cytosol","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endoplasmic reticulum","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::endosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::extracellular","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::golgi apparatus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::lysosome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::mitochondrion","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::nucleus","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::peroxisome","type":"Double","immutable":false,"primaryKey":false},{"name":"compartment::plasma membrane","type":"Double","immutable":false,"primaryKey":false},{"name":"display name","type":"String","immutable":false,"primaryKey":false},{"name":"kegg_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"label","type":"String","immutable":false,"primaryKey":false},{"name":"link","type":"String","immutable":false,"primaryKey":false},{"name":"name.copy","type":"String","immutable":true,"primaryKey":false},{"name":"query term","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::STRING style","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::canonical name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::database identifier","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::description","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::enhancedLabel Passthrough","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::full name","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::imageurl","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::namespace","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::node type","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::sequence","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::species","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::structures","type":"List","listType":"String","immutable":false,"primaryKey":false},{"name":"target::development level","type":"String","immutable":false,"primaryKey":false},{"name":"target::family","type":"String","immutable":false,"primaryKey":false},{"name":"tissue::adrenal gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::blood","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::bone marrow","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::eye","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::gall bladder","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::heart","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::intestine","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::kidney","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::liver","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::lung","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::muscle","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::nervous system","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::pancreas","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::saliva","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::skin","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::spleen","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::stomach","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::thyroid gland","type":"Double","immutable":false,"primaryKey":false},{"name":"tissue::urine","type":"Double","immutable":false,"primaryKey":false},{"name":"type","type":"String","immutable":false,"primaryKey":false},{"name":"uniprot","type":"String","immutable":false,"primaryKey":false},{"name":"string_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"stringdb::disease score","type":"Double","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"ChEBI","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"wiki_db","type":"Integer","immutable":false,"primaryKey":false},{"name":"database","type":"String","immutable":false,"primaryKey":false},{"name":"stringdb::interactor score","type":"Double","immutable":false,"primaryKey":false}]
2024-06-20 16:52:53,867 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': '@id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytoskeleton', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::cytosol', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endoplasmic reticulum', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::endosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::extracellular', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::golgi apparatus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::lysosome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::mitochondrion', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::nucleus', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::peroxisome', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'compartment::plasma membrane', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'display name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'kegg_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'link', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'name.copy', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'query term', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::STRING style', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::canonical name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::database identifier', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::description', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::enhancedLabel Passthrough', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::full name', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::imageurl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::namespace', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::node type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::sequence', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::species', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::structures', 'type': 'List', 'listType': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::development level', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target::family', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::adrenal gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::blood', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::bone marrow', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::eye', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::gall bladder', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::heart', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::intestine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::kidney', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::liver', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::lung', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::muscle', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::nervous system', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::pancreas', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::saliva', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::skin', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::spleen', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::stomach', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::thyroid gland', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'tissue::urine', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'uniprot', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'string_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::disease score', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'ChEBI', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'wiki_db', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'database', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'stringdb::interactor score', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
2024-06-20 16:52:53,867 [DEBUG] py4...: ǀReturning 'map_visual_property': {'mappingType': 'discrete', 'mappingColumn': 'database', 'mappingColumnType': 'String', 'visualProperty': 'NODE_SHAPE', 'map': [{'key': 'kegg', 'value': 'HEXAGON'}, {'key': 'string', 'value': 'ROUND_RECTANGLE'}, {'key': 'wiki', 'value': 'VEE'}, {'key': 'kegg;string', 'value': 'PARALLELOGRAM'}, {'key': 'kegg;wiki', 'value': 'DIAMOND'}, {'key': 'wiki;string', 'value': 'ELLIPSE'}, {'key': 'kegg;wiki;string', 'value': 'TRIANGLE'}]}
2024-06-20 16:52:53,868 [DEBUG] py4...: ǀCalling update_style_mapping('ADCN style', {'mappingType': 'discrete', 'mappingColumn': 'database', 'mappingColumnType': 'String', 'visualProperty': 'NODE_SHAPE', 'map': [{'key': 'kegg', 'value': 'HEXAGON'}, {'key': 'string', 'value': 'ROUND_RECTANGLE'}, {'key': 'wiki', 'value': 'VEE'}, {'key': 'kegg;string', 'value': 'PARALLELOGRAM'}, {'key': 'kegg;wiki', 'value': 'DIAMOND'}, {'key': 'wiki;string', 'value': 'ELLIPSE'}, {'key': 'kegg;wiki;string', 'value': 'TRIANGLE'}]}, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,868 [DEBUG] py4...: ǀǀCalling cyrest_get('styles/ADCN style/mappings', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:53,868 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/styles/ADCN%20style/mappings)
2024-06-20 16:52:53,881 [DEBUG] py4...: ǀǀOK[200], content: [ {
  "mappingType" : "continuous",
  "mappingColumn" : "tissue::nervous system",
  "mappingColumnType" : "Double",
  "visualProperty" : "NODE_FILL_COLOR",
  "points" : [ {
    "value" : 0.545455,
    "lesser" : "#FFF7BC",
    "equal" : "#FFF7BC",
    "greater" : "#FFF7BC"
  }, {
    "value" : 2.7727275,
    "lesser" : "#FEC44F",
    "equal" : "#FEC44F",
    "greater" : "#FEC44F"
  }, {
    "value" : 5.0,
    "lesser" : "#D95F0E",
    "equal" : "#D95F0E",
    "greater" : "#D95F0E"
  } ]
} ]
2024-06-20 16:52:53,882 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'mappingType': 'continuous', 'mappingColumn': 'tissue::nervous system', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': 0.545455, 'lesser': '#FFF7BC', 'equal': '#FFF7BC', 'greater': '#FFF7BC'}, {'value': 2.7727275, 'lesser': '#FEC44F', 'equal': '#FEC44F', 'greater': '#FEC44F'}, {'value': 5.0, 'lesser': '#D95F0E', 'equal': '#D95F0E', 'greater': '#D95F0E'}]}]
2024-06-20 16:52:53,882 [DEBUG] py4...: ǀǀCalling cyrest_post('styles/ADCN style/mappings', body=[{'mappingType': 'discrete', 'mappingColumn': 'database', 'mappingColumnType': 'String', 'visualProperty': 'NODE_SHAPE', 'map': [{'key': 'kegg', 'value': 'HEXAGON'}, {'key': 'string', 'value': 'ROUND_RECTANGLE'}, {'key': 'wiki', 'value': 'VEE'}, {'key': 'kegg;string', 'value': 'PARALLELOGRAM'}, {'key': 'kegg;wiki', 'value': 'DIAMOND'}, {'key': 'wiki;string', 'value': 'ELLIPSE'}, {'key': 'kegg;wiki;string', 'value': 'TRIANGLE'}]}], base_url='http://127.0.0.1:1234/v1', require_json=False)
2024-06-20 16:52:53,882 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/styles/ADCN%20style/mappings), json: [{'mappingType': 'discrete', 'mappingColumn': 'database', 'mappingColumnType': 'String', 'visualProperty': 'NODE_SHAPE', 'map': [{'key': 'kegg', 'value': 'HEXAGON'}, {'key': 'string', 'value': 'ROUND_RECTANGLE'}, {'key': 'wiki', 'value': 'VEE'}, {'key': 'kegg;string', 'value': 'PARALLELOGRAM'}, {'key': 'kegg;wiki', 'value': 'DIAMOND'}, {'key': 'wiki;string', 'value': 'ELLIPSE'}, {'key': 'kegg;wiki;string', 'value': 'TRIANGLE'}]}]
2024-06-20 16:52:53,887 [DEBUG] py4...: ǀǀCreated[201], content: 
2024-06-20 16:52:53,888 [DEBUG] py4...: ǀǀReturning 'cyrest_post': ''
2024-06-20 16:52:55,889 [DEBUG] py4...: ǀReturning 'update_style_mapping': ''
2024-06-20 16:52:55,889 [DEBUG] py4...: Returning 'set_node_shape_mapping': ''
2024-06-20 16:52:55,890 [DEBUG] py4...: --------------------
2024-06-20 16:52:57,028 [DEBUG] py4...: Calling set_visual_style('ADCN style', 126975)
2024-06-20 16:52:57,028 [DEBUG] py4...: ǀCalling get_network_suid(126975, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,028 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,029 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:52:57,035 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975,216957]
2024-06-20 16:52:57,036 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975, 216957]
2024-06-20 16:52:57,036 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:52:57,036 [DEBUG] py4...: ǀCalling get_visual_style_names(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,037 [DEBUG] py4...: ǀǀCalling cyrest_get('apply/styles', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,037 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles)
2024-06-20 16:52:57,042 [DEBUG] py4...: ǀǀOK[200], content: ["STRING - Wikipathways WP4760 network uniprot","WikiPathways-As-Network","default","STRING - spinocerebellar ataxia type 1","Gradient1","Curved","Sample3","ADCN style","Directed","Ripple","Nested Network Style","Big Labels","Minimal","Sample2","STRING - KEGG hsa05017 network","default black","Sample1","Universe","Marquee","STRINGdefault","Solid"]
2024-06-20 16:52:57,042 [DEBUG] py4...: ǀǀReturning 'cyrest_get': ['STRING - Wikipathways WP4760 network uniprot', 'WikiPathways-As-Network', 'default', 'STRING - spinocerebellar ataxia type 1', 'Gradient1', 'Curved', 'Sample3', 'ADCN style', 'Directed', 'Ripple', 'Nested Network Style', 'Big Labels', 'Minimal', 'Sample2', 'STRING - KEGG hsa05017 network', 'default black', 'Sample1', 'Universe', 'Marquee', 'STRINGdefault', 'Solid']
2024-06-20 16:52:57,043 [DEBUG] py4...: ǀReturning 'get_visual_style_names': ['STRING - Wikipathways WP4760 network uniprot', 'WikiPathways-As-Network', 'default', 'STRING - spinocerebellar ataxia type 1', 'Gradient1', 'Curved', 'Sample3', 'ADCN style', 'Directed', 'Ripple', 'Nested Network Style', 'Big Labels', 'Minimal', 'Sample2', 'STRING - KEGG hsa05017 network', 'default black', 'Sample1', 'Universe', 'Marquee', 'STRINGdefault', 'Solid']
2024-06-20 16:52:57,043 [DEBUG] py4...: ǀCalling cyrest_get('apply/styles/ADCN style/126975', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,043 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles/ADCN%20style/126975)
2024-06-20 16:52:57,116 [DEBUG] py4...: ǀOK[200], content: {"message":"Visual Style applied."}
2024-06-20 16:52:57,117 [DEBUG] py4...: ǀReturning 'cyrest_get': {'message': 'Visual Style applied.'}
2024-06-20 16:52:57,117 [DEBUG] py4...: Returning 'set_visual_style': {'message': 'Visual Style applied.'}
2024-06-20 16:52:57,117 [DEBUG] py4...: --------------------
2024-06-20 16:52:57,118 [DEBUG] py4...: Calling set_visual_style('ADCN style', 216957)
2024-06-20 16:52:57,118 [DEBUG] py4...: ǀCalling get_network_suid(216957, base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,118 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,119 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:52:57,125 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975,216957]
2024-06-20 16:52:57,125 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975, 216957]
2024-06-20 16:52:57,126 [DEBUG] py4...: ǀReturning 'get_network_suid': 216957
2024-06-20 16:52:57,126 [DEBUG] py4...: ǀCalling get_visual_style_names(base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,126 [DEBUG] py4...: ǀǀCalling cyrest_get('apply/styles', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,127 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles)
2024-06-20 16:52:57,134 [DEBUG] py4...: ǀǀOK[200], content: ["STRING - Wikipathways WP4760 network uniprot","WikiPathways-As-Network","default","STRING - spinocerebellar ataxia type 1","Gradient1","Curved","Sample3","ADCN style","Directed","Ripple","Nested Network Style","Big Labels","Minimal","Sample2","STRING - KEGG hsa05017 network","default black","Sample1","Universe","Marquee","STRINGdefault","Solid"]
2024-06-20 16:52:57,135 [DEBUG] py4...: ǀǀReturning 'cyrest_get': ['STRING - Wikipathways WP4760 network uniprot', 'WikiPathways-As-Network', 'default', 'STRING - spinocerebellar ataxia type 1', 'Gradient1', 'Curved', 'Sample3', 'ADCN style', 'Directed', 'Ripple', 'Nested Network Style', 'Big Labels', 'Minimal', 'Sample2', 'STRING - KEGG hsa05017 network', 'default black', 'Sample1', 'Universe', 'Marquee', 'STRINGdefault', 'Solid']
2024-06-20 16:52:57,135 [DEBUG] py4...: ǀReturning 'get_visual_style_names': ['STRING - Wikipathways WP4760 network uniprot', 'WikiPathways-As-Network', 'default', 'STRING - spinocerebellar ataxia type 1', 'Gradient1', 'Curved', 'Sample3', 'ADCN style', 'Directed', 'Ripple', 'Nested Network Style', 'Big Labels', 'Minimal', 'Sample2', 'STRING - KEGG hsa05017 network', 'default black', 'Sample1', 'Universe', 'Marquee', 'STRINGdefault', 'Solid']
2024-06-20 16:52:57,135 [DEBUG] py4...: ǀCalling cyrest_get('apply/styles/ADCN style/216957', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:52:57,135 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles/ADCN%20style/216957)
2024-06-20 16:52:57,950 [DEBUG] py4...: ǀOK[200], content: {"message":"Visual Style applied."}
2024-06-20 16:52:57,950 [DEBUG] py4...: ǀReturning 'cyrest_get': {'message': 'Visual Style applied.'}
2024-06-20 16:52:57,951 [DEBUG] py4...: Returning 'set_visual_style': {'message': 'Visual Style applied.'}
2024-06-20 16:52:57,951 [DEBUG] py4...: --------------------
2024-06-20 16:53:01,602 [DEBUG] py4...: Calling set_current_network(126975)
2024-06-20 16:53:01,603 [DEBUG] py4...: ǀCalling get_network_suid(126975)
2024-06-20 16:53:01,603 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:53:01,604 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:53:01,609 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975,216957]
2024-06-20 16:53:01,610 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975, 216957]
2024-06-20 16:53:01,610 [DEBUG] py4...: ǀReturning 'get_network_suid': 126975
2024-06-20 16:53:01,610 [DEBUG] py4...: ǀCalling commands_post('network set current network="SUID:126975"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:53:01,610 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:126975'}
2024-06-20 16:53:01,892 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:53:01,892 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:53:01,893 [DEBUG] py4...: Returning 'set_current_network': {}
2024-06-20 16:53:01,893 [DEBUG] py4...: --------------------
2024-06-20 16:53:01,893 [DEBUG] py4...: Calling analyze_network()
2024-06-20 16:53:01,893 [DEBUG] py4...: ǀCalling commands_post('analyzer analyze directed=False', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:53:01,894 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/analyzer/analyze), json: {'directed': 'False'}
2024-06-20 16:53:03,372 [DEBUG] py4...: ǀOK[200], content: {
 "data": { 
	"networkTitle": "Merged STRING KEGG Wiki network cutoff 0.4 (undirected)",

	"nodeCount": "780",
	"edgeCount": "17121",
	"avNeighbors": "45.05151915455746",
	"diameter": "6",
	"radius": "3",
	"avSpl": "2.4476560916455234",

	"cc": "0.4826698757444982",
	"density": "0.059591956553647435",
	"heterogeneity": "1.0104566554841483",
	"centralization": "0.30099162549493674",

	"ncc": "22",

	"time": "0.598"
}
,
 "errors":[]
}
2024-06-20 16:53:03,373 [DEBUG] py4...: ǀReturning 'commands_post': {'networkTitle': 'Merged STRING KEGG Wiki network cutoff 0.4 (undirected)', 'nodeCount': '780', 'edgeCount': '17121', 'avNeighbors': '45.05151915455746', 'diameter': '6', 'radius': '3', 'avSpl': '2.4476560916455234', 'cc': '0.4826698757444982', 'density': '0.059591956553647435', 'heterogeneity': '1.0104566554841483', 'centralization': '0.30099162549493674', 'ncc': '22', 'time': '0.598'}
2024-06-20 16:53:03,373 [DEBUG] py4...: Returning 'analyze_network': {'networkTitle': 'Merged STRING KEGG Wiki network cutoff 0.4 (undirected)', 'nodeCount': '780', 'edgeCount': '17121', 'avNeighbors': '45.05151915455746', 'diameter': '6', 'radius': '3', 'avSpl': '2.4476560916455234', 'cc': '0.4826698757444982', 'density': '0.059591956553647435', 'heterogeneity': '1.0104566554841483', 'centralization': '0.30099162549493674', 'ncc': '22', 'time': '0.598'}
2024-06-20 16:53:03,374 [DEBUG] py4...: --------------------
2024-06-20 16:53:14,901 [DEBUG] py4...: Calling set_current_network(216957)
2024-06-20 16:53:14,902 [DEBUG] py4...: ǀCalling get_network_suid(216957)
2024-06-20 16:53:14,902 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:53:14,902 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-06-20 16:53:14,909 [DEBUG] py4...: ǀǀOK[200], content: [40096,41686,42582,26235,40683,21981,126975,216957]
2024-06-20 16:53:14,910 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [40096, 41686, 42582, 26235, 40683, 21981, 126975, 216957]
2024-06-20 16:53:14,910 [DEBUG] py4...: ǀReturning 'get_network_suid': 216957
2024-06-20 16:53:14,910 [DEBUG] py4...: ǀCalling commands_post('network set current network="SUID:216957"', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:53:14,911 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:216957'}
2024-06-20 16:53:15,485 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-06-20 16:53:15,485 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-06-20 16:53:15,486 [DEBUG] py4...: Returning 'set_current_network': {}
2024-06-20 16:53:15,486 [DEBUG] py4...: --------------------
2024-06-20 16:53:15,486 [DEBUG] py4...: Calling analyze_network()
2024-06-20 16:53:15,487 [DEBUG] py4...: ǀCalling commands_post('analyzer analyze directed=False', base_url='http://127.0.0.1:1234/v1')
2024-06-20 16:53:15,487 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/analyzer/analyze), json: {'directed': 'False'}
2024-06-20 16:53:34,399 [DEBUG] py4...: ǀOK[200], content: {
 "data": { 
	"networkTitle": "Merged STRING KEGG Wiki network cutoff 0.4 expanded (undirected)",

	"nodeCount": "2780",
	"edgeCount": "208707",
	"avNeighbors": "150.64259927797835",
	"diameter": "6",
	"radius": "3",
	"avSpl": "2.152426881943331",

	"cc": "0.40181811772066695",
	"density": "0.05440325001010413",
	"heterogeneity": "0.8164134752615942",
	"centralization": "0.4244152852493649",

	"ncc": "11",

	"time": "17.448"
}
,
 "errors":[]
}
2024-06-20 16:53:34,400 [DEBUG] py4...: ǀReturning 'commands_post': {'networkTitle': 'Merged STRING KEGG Wiki network cutoff 0.4 expanded (undirected)', 'nodeCount': '2780', 'edgeCount': '208707', 'avNeighbors': '150.64259927797835', 'diameter': '6', 'radius': '3', 'avSpl': '2.152426881943331', 'cc': '0.40181811772066695', 'density': '0.05440325001010413', 'heterogeneity': '0.8164134752615942', 'centralization': '0.4244152852493649', 'ncc': '11', 'time': '17.448'}
2024-06-20 16:53:34,401 [DEBUG] py4...: Returning 'analyze_network': {'networkTitle': 'Merged STRING KEGG Wiki network cutoff 0.4 expanded (undirected)', 'nodeCount': '2780', 'edgeCount': '208707', 'avNeighbors': '150.64259927797835', 'diameter': '6', 'radius': '3', 'avSpl': '2.152426881943331', 'cc': '0.40181811772066695', 'density': '0.05440325001010413', 'heterogeneity': '0.8164134752615942', 'centralization': '0.4244152852493649', 'ncc': '11', 'time': '17.448'}
2024-06-20 16:53:34,401 [DEBUG] py4...: --------------------
